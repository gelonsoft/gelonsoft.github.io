{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","types/MyNavigator.ts","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroFAQ.tsx","components/heroBestPackMode.tsx","components/heroModeSelect.tsx","types/MySettings.ts","components2/HeroModernIcon.tsx","components2/SelectedHeroPack.tsx","components2/HeroModernGrid.tsx","components2/HeaderBlock.tsx","components2/CounterPackResult.tsx","components2/CounterPackScreen.tsx","components2/MainScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","a","r","x","hIds","extendedInfo","statusInfo","num","size","s","length","heroId","heroesList","get","bossList","a1","a2","i","emptyHeroProbMap","Map","heroNameRecognitionMap","zeroHeroProbMap","emptyHeroPack","heroIdsOrderedByName","emptyHero","heroName","battleOrder","allHeroesIds","result","heroData","heroRec","set","push","sort","b","initHeroesList","initBossList","z","padLeadingZeros","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","flexGrow","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","console","error","renderType","renderForPackEmptySelected","opacity","borderRadius","renderForHeroSelectGrid","renderForHeroCounterHeroGrid","renderForHeroPackGrid","React","Component","MyNavigator","window","location","href","indexOf","mode","currentPack","currentDefenderPack","setCurrentPack","setDefenderPack","heroModeSelect","navigateToTopMode","heroRouletteMode","navigateToMode","heroAddAttackerMode","setHeroPack","heroAddDefenderMode","heroCounterPackMode","updateHeroIds","undefined","heroOneFightMode","heroAddToTrainMode","setAttackHeroPack","setDefenderHeroPack","heroRouletteDefendersMode","heroRouletteAttackersQueueMode","disableClose","HeroCounterPackMode","currentMode","requestsInProgress","initialized","requestSeq","heroIds","heroLostPacks","heroCounterFilter","heroWinPacks","heroAttackerFilter","heroLostProbs","heroWinProbs","heroCounterProbs","heroAttackerProbs","selectHero","bind","deselectHero","filterCounterHero","filterAttackerHero","selectMode","heroParams","setState","url","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","Number","parseFloat","w","t","Array","from","keys","heroPackId","mmd","finally","requestId","getPacksData","j","e","target","dataset","heroid","index","splice","includes","value","newMode","Container","flexDirection","justifyContent","ToggleButtonGroup","exclusive","onChange","ToggleButton","Divider","Chip","label","onFilterCounterHero","mainHeroPack","mainHeroPackType","emptyMessage","showAll","HeroGrid","items","heroArray","values","container","spacing","renderHeroes","HeroPackSelected","anchorEl","addToAttackQueue","addToDefenderQueue","seeCounterPacks","handleMenuClick","handleMenuClose","seeTrainMode","seeTrainModeA","seeTrainModeD","heroCount","heroes","h1","h2","navigate","heroIdsA","heroIdsD","currentTarget","menuItems","key","MenuItem","isPackHasBoss","renderHeroPack","id","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","renderMenuItems","HeroCounterHeroGrid","HeroCounterPackGrid","heroPack","hl","newHeropack","heroPackFull","Stack","direction","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","log","testqid","newQ","position","testQId","marginBottom","Button","isCloseDisabled","hidden","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","variant","emptyMap","marginTop","disabled","renderA","renderB","renderSendButton","HeroOneFightMode","setMode","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","marginLeft","marginRight","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","extText","formatParameter","typ","showCloseButton","name","goodName","multiplier","unit","prec","HeroRouletteMode","HeroFAQ","padding","HeroBestPackMode","heroesFilter","filterHero","updateHeroes","heroFilter","gMode","heroUniqMap","HeroModeSelect","rouletteSubMode","oneFightSubMode","navigateToTopFunction","MySettings","mainVersion","HeroModernIcon","boxClassName","additionalClasses","SelectedHeroPack","hId","onHeroSelect","renderHeroIcons","wra","ca","wrd","cd","HeroModernGrid","selectedHeroes","highlightedHeroes","HeaderBlock","openMenuFunction","message","CounterPackResult","minFightsCount","params","split","minWinRate","heroPacks","totalPacksFound","filterMinWinRate","filterMaxWinRate","filterMinFights","filterMaxFights","totalFound","changeHeaderMessageFunction","updateHeroPackInfo","constructHeroFilter","minwr","maxwr","minc","maxc","tc","wa","wd","cc","cwr","pHeroFilter","escape","CounterPackScreen","useParams","useMatch","useNavigate","useLocation","useState","headerMessage","setHeaderMessage","templateHeroPack","getEmptyHeroPack","queryParams","URLSearchParams","search","isInitialized","setIsInitialized","heroAvailable","setHeroAvailable","setRequestsInProgress","pHeroPack","newHeroPack","updateAvailableHeroes","useEffect","newMessage","mainUrl","MainScreen","navMenuIndex","navMenuOpened","changeMenu","toggleMenu","event","newValue","width","height","overflowX","Slide","in","Tabs","orientation","borderRight","borderColor","Tab","role","path","element","replace","to","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e48d403.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nimport {IHeroPack} from \"./IHeroPack\";\r\n\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder: number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result: Map<number, Hero> = new Map<number, Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId = ~~x\r\n        if (heroId >= 1 && heroId < 599) {\r\n            const heroData: any = HStorage.heroDescStorage[x]\r\n            const heroName=HStorage.localeStorage[\"LIB_HERO_NAME_\" + heroId]\r\n            const heroRec={\r\n                heroId: heroId,\r\n                heroName: heroName,\r\n                battleOrder: heroData.battleOrder\r\n            }\r\n            result.set(heroId, heroRec)\r\n            HeroData.heroIdsOrderedByName.push(heroId)\r\n            HeroData.allHeroesIds.push(heroId)\r\n            HeroData.zeroHeroProbMap.set(heroId,0)\r\n            HeroData.heroNameRecognitionMap.set(heroName,heroId)\r\n        }\r\n        HeroData.heroIdsOrderedByName.sort((a,b)=> {\r\n            return (result.get(a)?.heroName || \"\")>(result.get(b)?.heroName || \"\")?1:-1\r\n        })\r\n    }\r\n    return result\r\n}\r\n\r\nfunction initBossList() {\r\n    const result = new Map<number,Hero>()\r\n    result.set(8010,{heroId:8010,heroName:\"Огонь\",battleOrder:0})\r\n    result.set(8011,{heroId:8011,heroName:\"Тьма\",battleOrder:0})\r\n    result.set(8012,{heroId:8012,heroName:\"Свет\",battleOrder:0})\r\n    result.set(8013,{heroId:8013,heroName:\"Земля\",battleOrder:0})\r\n    result.set(8014,{heroId:8014,heroName:\"Вода\",battleOrder:0})\r\n    result.set(8015,{heroId:8015,heroName:\"Воздух\",battleOrder:0})\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\n    static isPackHasBoss(a:number[]) {\r\n        let r=false\r\n        if (a) {\r\n            for( const x of a) {\r\n                r = r || (x>=8010 && x<=8015)\r\n            }\r\n        }\r\n        return r\r\n    }\r\n    static emptyHeroProbMap=new Map<number,number>()\r\n    static heroNameRecognitionMap=new Map<string,number>()\r\n    static zeroHeroProbMap=new Map<number,number>()\r\n    static emptyHeroPack: IHeroPack = {hIds: [], extendedInfo: {statusInfo: \"\"}}\r\n    static getEmptyHeroPack(): IHeroPack {\r\n        return {\r\n            hIds: [],\r\n            extendedInfo: {statusInfo: \"\"}\r\n        }\r\n    }\r\n    static heroIdsOrderedByName:number[] = []\r\n    static padLeadingZeros(num: number, size: number) {\r\n        let s = num + \"\";\r\n        while (s.length < size) s = \"0\" + s;\r\n        return s;\r\n    }\r\n\r\n    static getHeroById(heroId: number) {\r\n        return HeroData.heroesList.get(heroId) || HeroData.bossList.get(heroId)\r\n    }\r\n\r\n    static compareArrays(a1: any[], a2: any[]) {\r\n        var i = a1.length;\r\n        if (i !== a2.length) return false;\r\n        while (i--) {\r\n            if (a1[i] !== a2[i]) return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    static emptyHero: Hero = {heroId: 0, heroName: \"пусто\", battleOrder: 0}\r\n    static allHeroesIds: number[] = []\r\n    static heroesList: Map<number, Hero> = initHeroesList()\r\n    static bossList: Map<number,Hero> = initBossList()\r\n    static z = new Map([\r\n        [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n        [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n        [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n        [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n        [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n        [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n        [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n        [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n        [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n        [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n        [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n        [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n        [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n        [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n        [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n        [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n        [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n        [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n        [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n        [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n        [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n        [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n        [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n        [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n        [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n        [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n        [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n        [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n        [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n        [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n        [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n        [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n        [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n        [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n        [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n        [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n        [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n        [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n        [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n        [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n        [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n        [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n        [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n        [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n        [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n        [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n        [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n        [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n        [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n        [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n        [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n        [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n        [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n        [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n    ]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        } else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        } else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n        this.renderForPackEmptySelected()\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box className={\"heroIconGridEmpty\"} sx={{\r\n                /*maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',*/\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n               /* fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,*/\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>пусто</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import {IHeroPack} from \"./IHeroPack\";\r\nimport {HeroModeSelect,HeroCounterPackMode} from \"../components\";\r\nimport HeroRouletteDefendersMode from \"../components/heroRouletteDefendersMode\";\r\nimport HeroRouletteAttackersQueueMode from \"../components/heroRouletteAttackersQueueMode\";\r\nimport HeroAddAttackerMode from \"../components/heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"../components/heroAddDefenderMode\";\r\nimport HeroRouletteMode from \"../components/heroRouletteMode\";\r\nimport HeroOneFightMode from \"../components/heroOneFightMode\";\r\nimport HeroAddToTrainMode from \"../components/heroAddToTrainMode\";\r\n\r\nexport class MyNavigator {\r\n    static heroModeSelect?:HeroModeSelect\r\n    static heroCounterPackMode?:HeroCounterPackMode\r\n    static heroRouletteDefendersMode?:HeroRouletteDefendersMode\r\n    static heroRouletteAttackersQueueMode?:HeroRouletteAttackersQueueMode\r\n    static heroAddAttackerMode?:HeroAddAttackerMode\r\n    static heroAddDefenderMode?:HeroAddDefenderMode\r\n    static heroRouletteMode?:HeroRouletteMode\r\n    static heroOneFightMode?:HeroOneFightMode\r\n    static heroAddToTrainMode?:HeroAddToTrainMode\r\n    static currentPack:IHeroPack = {hIds:[]}\r\n    static currentDefenderPack:IHeroPack = {hIds:[]}\r\n    static disableClose = window.location.href.indexOf(\"zzzz\")<0\r\n    static isCloseDisabled() {\r\n        return window.location.href.indexOf(\"zzzz\")<0\r\n    }\r\n    static navigate(mode:string,currentPack?:IHeroPack,currentDefenderPack?:IHeroPack) {\r\n        if (currentPack) {\r\n            MyNavigator.setCurrentPack(currentPack)\r\n        }\r\n        if (currentDefenderPack) {\r\n            MyNavigator.setDefenderPack(currentDefenderPack)\r\n        }\r\n        switch (mode) {\r\n            case \"RouletteAttackQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,0)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(0)\r\n                }\r\n                if (MyNavigator.heroAddAttackerMode && currentPack) {\r\n                    MyNavigator.heroAddAttackerMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"RouletteDefenderQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,2)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(2)\r\n                }\r\n                if (MyNavigator.heroAddDefenderMode && currentPack) {\r\n                    MyNavigator.heroAddDefenderMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"CounterPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(0)\r\n                }\r\n                if (MyNavigator.heroCounterPackMode && currentPack) {\r\n                    MyNavigator.heroCounterPackMode.updateHeroIds(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"OneFightPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(2,undefined,1)\r\n                }\r\n                if (MyNavigator.heroOneFightMode) {\r\n                    MyNavigator.heroOneFightMode.navigateToMode(1)\r\n                }\r\n                if (MyNavigator.heroAddToTrainMode) {\r\n                    if (currentPack) {\r\n                        MyNavigator.heroAddToTrainMode.setAttackHeroPack(currentPack)\r\n                    }\r\n                    if (currentDefenderPack) {\r\n                        MyNavigator.heroAddToTrainMode.setDefenderHeroPack(currentDefenderPack)\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static setCurrentPack(currentPack:IHeroPack) {\r\n        MyNavigator.currentPack=currentPack\r\n    }\r\n    static setDefenderPack(currentDefenderPack:IHeroPack) {\r\n        MyNavigator.currentDefenderPack=currentDefenderPack\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    heroLostProbs: Map<number, number>,\r\n    heroCounterProbs: Map<number, number>,\r\n    heroAttackerProbs: Map<number, number>,\r\n    heroLostPacks: IHeroPack[],\r\n    heroWinPacks: IHeroPack[],\r\n    heroWinProbs: Map<number,number>\r\n    heroCounterFilter: number[],\r\n    heroAttackerFilter: number[],\r\n    requestsInProgress: number,\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            heroWinPacks: [],\r\n            heroAttackerFilter: [],\r\n            requestsInProgress: 0,\r\n            heroLostProbs: new Map<number,number>(),\r\n            heroWinProbs: new Map<number,number>(),\r\n            heroCounterProbs: new Map<number,number>(),\r\n            heroAttackerProbs: new Map<number,number>(),\r\n            currentMode: props.currentMode\r\n        };\r\n        this.requestsInProgress=0\r\n        this.currentMode=props.currentMode\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n        this.filterAttackerHero = this.filterAttackerHero.bind(this)\r\n        this.selectMode=this.selectMode.bind(this)\r\n        this.updateHeroIds(this.state.heroIds)\r\n        MyNavigator.heroCounterPackMode=this\r\n        //console.log('created heroCounterPackMode',this.state.heroIds)\r\n    }\r\n    currentMode: number\r\n    requestsInProgress: number\r\n    initialized: boolean = false\r\n    requestSeq=0\r\n\r\n\r\n    getPacksData(heroIds:IHeroPack,currentMode:number) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"\"\r\n        if (currentMode===0) {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroes/\"\r\n        } else {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs = new Map<number, number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = []\r\n                            if (currentMode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n\r\n                            }\r\n                            cnt++\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:\"win_rate=\"+(Number.parseFloat(z.r)*100).toFixed(1)+\"% won_fights=\"+z.w+\" total_fights=\"+z.t }})\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                        if (currentMode===0) {\r\n                            //console.log('ULP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                            )\r\n                        } else {\r\n                            //console.log('UWP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroAttackerProbs: heroProbs, heroWinPacks: heroLostPacks}\r\n                            )\r\n                        }\r\n                    }\r\n                }).finally(()=>{\r\n                    this.requestsInProgress--\r\n                    this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: IHeroPack) {\r\n        const currentMode=this.currentMode\r\n        this.initialized=true\r\n        const requestId=this.requestSeq++\r\n            this.setState(\r\n                {heroIds: heroIds, heroLostProbs: new Map<number, number>(), heroLostPacks: [], heroWinProbs: new Map<number, number>(), heroWinPacks: [],heroCounterProbs:new Map<number, number>(),heroAttackerProbs:new Map<number,number>()}\r\n            )\r\n        if (heroIds.hIds.length == 5) {\r\n            this.getPacksData(heroIds,0)\r\n            this.getPacksData(heroIds,1)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n            //console.log('RIP+1',requestId,this.state.requestsInProgress)\r\n            this.requestsInProgress++\r\n            let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,0)\r\n                            let heroProbs = new Map<number, number>()\r\n                            if (result['items']) {\r\n                                for (const j in result['items']) {\r\n                                    if (result['items'][j]['d']) {\r\n                                        heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                    }\r\n                                }\r\n                            }\r\n                this.setState({\r\n                    heroLostProbs: heroProbs,\r\n                    heroIds: heroIds,\r\n                    heroLostPacks: []\r\n                });\r\n                            //console.log('XXX2 nulled heroLostPacks:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                            this.setState({\r\n                                heroLostProbs: new Map<number, number>(),\r\n                                heroIds: heroIds,\r\n                                heroLostPacks: []\r\n                            });\r\n                    }\r\n                ).finally(()=>{\r\n                    //console.log('ReqFin0 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n            this.requestsInProgress++\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,1)\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroWinProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: []\r\n                        });\r\n                        //console.log('XXX2 nulled win lost packs:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                        this.setState({\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: [],\r\n                            heroWinProbs: new Map<number, number>()\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                //console.log('ReqFin1 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            }\r\n        }\r\n    }\r\n\r\n    filterAttackerHero(e: any) {\r\n        // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroAttackerFilter = this.state.heroAttackerFilter\r\n            const index = heroAttackerFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroAttackerFilter.splice(index, 1);\r\n            } else {\r\n                heroAttackerFilter.push(heroId)\r\n            }\r\n            this.setState({heroAttackerFilter: heroAttackerFilter})\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.hIds.includes(heroId) && heroIds.hIds.length < 5) {\r\n                heroIds.hIds.push(heroId)\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.hIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                heroIds.hIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMode(e:any,value:string) {\r\n        const newMode=~~value\r\n        this.currentMode=newMode\r\n        //console.log('Set mode ',newMode)\r\n        this.setState({currentMode:newMode})\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentMode=this.state.currentMode\r\n        //console.log('RENDER CPM',currentMode,this.state.heroIds)\r\n            if (this.state.heroIds.hIds.length == 5) {\r\n               /* if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                //console.log('RE',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Выбранный пак\":\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero} key={this.state.heroIds.hIds.join(\",\")}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(currentMode===0?\"Кто из героев побеждает твой пак - можешь здесь отфильтровать\":\"Кто из героев проиграл твоему паку - можешь здесь отфильтровать\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={currentMode===0?this.state.heroCounterProbs:this.state.heroAttackerProbs}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={10+currentMode}\r\n\r\n                        />\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.state.currentMode===0?\"Контр-паки\":\"Кто проиграл твоему паку\"):\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={20+currentMode}\r\n                                             mainHeroPack={this.state.heroIds} mainHeroPackType={currentMode===0?'d':'a'} emptyMessage={\"Не переживай. Этот пак еще не победил в \"+(currentMode===0?\"защите. Попробуй добавить его в защищающиеся в режиме рулетки, и если он победит, то тут появится результат.\":\"атаке. Попробуй добавить его в атакующие в режиме рулетки, и если он победит, то тут появится результат.\")}\r\n                        />\r\n                    </Container>\r\n                )\r\n            } else {\r\n                //console.log('RE2',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                /*if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                return (\r\n\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+this.currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.currentMode===0?\"Выбрать защитный пак\":\"Выбрать атакующий пак\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid showAll={true} heroIds={this.state.heroIds} heroProbs={this.currentMode===0?this.state.heroLostProbs:this.state.heroWinProbs}\r\n                                      selectHero={this.selectHero} key={30+this.currentMode}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>,\r\n    showAll: boolean\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (this.props.showAll || heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb,heroName:value.heroName})\r\n            }\r\n        }\r\n\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0,heroName:value.heroName})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return a.heroName>a.heroName?1:-1\r\n        })\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.hIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} className={\"heroGrid\"} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Box, Button, Grid, Menu, MenuItem, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    heroIdsA?: IHeroPack,\r\n    heroIdsD?: IHeroPack,\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    //heroIds: IHeroPack,\r\n    anchorEl: any,\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            //heroIds: props.heroIds,\r\n            anchorEl: null,\r\n        };\r\n        this.addToAttackQueue=this.addToAttackQueue.bind(this)\r\n        this.addToDefenderQueue=this.addToDefenderQueue.bind(this)\r\n        this.seeCounterPacks=this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick=this.handleMenuClick.bind(this)\r\n        this.handleMenuClose=this.handleMenuClose.bind(this)\r\n        this.seeTrainMode=this.seeTrainMode.bind(this)\r\n        this.seeTrainModeA=this.seeTrainModeA.bind(this)\r\n        this.seeTrainModeD=this.seeTrainModeD.bind(this)\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.props.heroIds.hIds.length\r\n        const heroes = this.props.heroIds.hIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n\r\n    addToAttackQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteAttackQueue\",this.props.heroIds)\r\n    }\r\n    addToDefenderQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteDefenderQueue\",this.props.heroIds)\r\n    }\r\n\r\n    seeCounterPacks(e:any) {\r\n        MyNavigator.navigate(\"CounterPack\",this.props.heroIds)\r\n    }\r\n\r\n    seeTrainMode(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIdsA,this.props.heroIdsD)\r\n    }\r\n    seeTrainModeA(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIds,undefined)\r\n    }\r\n    seeTrainModeD(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\", undefined,this.props.heroIdsD)\r\n    }\r\n\r\n    handleMenuClick(e:any) {\r\n        this.setState({anchorEl:e.currentTarget})\r\n    }\r\n    handleMenuClose(e:any) {\r\n        this.setState({anchorEl:null})\r\n    }\r\n    renderMenuItems() {\r\n        const menuItems:JSX.Element[]=[]\r\n        let key=0\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeCounterPacks}>Посмотреть кто побеждает</MenuItem>)\r\n        if (!HeroData.isPackHasBoss(this.props.heroIds.hIds)) {\r\n            menuItems.push(<MenuItem key={key++} onClick={this.addToAttackQueue}>Добавить в атакующие в\r\n                рулетку</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.addToDefenderQueue}>Добавить в защищающиеся в\r\n                рулетку</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeA}>Добавить в атакующие в Одну\r\n                битву</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeD}>Добавить в защищающиеся в Одну\r\n                битву</MenuItem>)\r\n            if (this.props.heroIdsA !== undefined && this.props.heroIdsD !== undefined) menuItems.push(<MenuItem\r\n                key={key++} onClick={this.seeTrainMode}>Add to Train both packs</MenuItem>)\r\n        }\r\n        return menuItems\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box className={\"heroPackSelected\"} sx={{\r\n                bgcolor: 'primary.light'\r\n            }}>\r\n            {this.renderHeroPack()}\r\n                <Box\r\n                    id=\"demo-positioned-button\"\r\n                    aria-controls=\"demo-positioned-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                    onClick={this.handleMenuClick}\r\n                    className={\"heroButtonThreeDots\"}\r\n                >\r\n                    &#10247;\r\n                </Box>\r\n                <Box className={\"heroPackSelectedExtStatus\"}>{this.props.heroIds.extendedInfo?.statusInfo?this.props.heroIds.extendedInfo.statusInfo:\"\"}</Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {this.renderMenuItems()}\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        //if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x) || -1\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n       // }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Box className={\"heroCounterHeroGrid\"} sx={{\r\n\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon,HeroPackSelected} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    mainHeroPack?: IHeroPack,\r\n    mainHeroPackType?: string,\r\n    heroLostPacks: IHeroPack[],\r\n    emptyMessage: string,\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: IHeroPack) {\r\n\r\n        const items = []\r\n        const hl=heroPack.hIds.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack.hIds[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const j in this.props.heroLostPacks) {\r\n\r\n            const heroPackFull=this.props.heroLostPacks[j]\r\n            const heroPack=heroPackFull.hIds\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            /*items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)*/\r\n                items.push(<HeroPackSelected  key={heroPack.join(',')+this.props.mainHeroPack?.hIds?.join(',')+this.props.mainHeroPackType} heroIds={heroPackFull} heroIdsA={this.props.mainHeroPack?(this.props.mainHeroPackType==='a'?this.props.mainHeroPack:heroPackFull):undefined } heroIdsD={this.props.mainHeroPack?(this.props.mainHeroPackType==='d'?this.props.mainHeroPack:heroPackFull):undefined } deselectHero={this.props.onFilterCounterHero}/>)\r\n        }\r\n        if (items.length===0) {\r\n            items.push(\r\n                <Stack direction=\"row\" key={cnt++} sx={{\r\n                    bgcolor: 'primary.light',\r\n                    m:0.25\r\n                }}>{this.props.emptyMessage}</Stack>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        //console.log('RHCPG',this.props.heroLostPacks)\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark',\r\n\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},heroIdsD:{hIds:heroIdsD},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                marginBottom: '3px',\r\n                borderRadius: '10px',\r\n            }}key={i}>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n                </Box>\r\n                <Box className={\"heroQueueTwoVSBox\"}><span className={\"heroQueueTwoVSPosition\"}>{x.position}</span><span className={\"heroQueueTwoVSVS\"}>VS</span></Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Button className={\"closeButton\"} sx={{\r\n                    display: MyNavigator.isCloseDisabled()?'none':'inline-flex'\r\n                }} hidden={MyNavigator.isCloseDisabled()} data-testqid={x.testQId}><img data-testqid={x.testQId} onClick={this.removeIcon} className={\"closeIcon\"} alt=\"Close\"  src={\"close_icon.png\"}/></Button>\r\n            </Box>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box className={\"heroQueueTwoBox\"}>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            heroIdsD: props.heroIdsD,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            displayEditD: props.heroIdsD.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        console.log('HeroAddToTrainMode created',this.state.heroIdsA,this.state.heroIdsD)\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setAttackHeroPack=this.setAttackHeroPack.bind(this)\r\n        this.setDefenderHeroPack=this.setDefenderHeroPack.bind(this)\r\n        MyNavigator.heroAddToTrainMode=this\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setAttackHeroPack(currentPack: IHeroPack) {\r\n        this.setState({heroIdsA:currentPack})\r\n    }\r\n\r\n    setDefenderHeroPack(currentDefenderPack: IHeroPack) {\r\n        this.setState({heroIdsD:currentDefenderPack})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds }})\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.hIds.length>0?\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                    <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA}  deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.hIds.length>0?\r\n                        <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && this.state.heroIdsD.hIds.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('RHATTM',this.state.heroIdsA,this.state.heroIdsD)\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateToTopFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n\r\n        MyNavigator.heroOneFightMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        console.log('heroOneFightMode-renderMode',MyNavigator.currentPack,MyNavigator.currentDefenderPack)\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={MyNavigator.currentPack} heroIdsD={MyNavigator.currentDefenderPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Добавить в очередь бой из 2х паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Очередь боев в обработке сервером</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddAttackerMode=this\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip\r\n                    label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddDefenderMode=this\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteAttackersQueueMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box hidden={MyNavigator.isCloseDisabled()}><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteDefendersMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    static formatParameter(x:any,name:string,goodName:string,multiplier:number,unit:string,prec:number) {\r\n        return x[name] && x[name]!==null && x[name]!==\"null\"?\"\"+goodName+\"=\"+(x[name]*multiplier).toFixed(prec)+unit+\", \":\"\"\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        let extText=\"\"\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsd\",\"Всего_боев_в_роли_защищаегося\",1,\"\",0)\r\n\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}},testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>пусто</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton && !MyNavigator.isCloseDisabled()?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Очередь атаки добавленная пользователями. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в аренде. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в защите. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Паки от админа. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n        MyNavigator.heroRouletteMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                    className={\"heroMainMenuButtons\"}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Добавить в атакующие паки</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Список атакующих паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Добавить в защищающиеся паки</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Список защищающихся</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroFAQ extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render() {\r\n        return (<Box sx={{\r\n            padding: '1em 1em 1em 1em'\r\n        }}>\r\n            <h3>1. Что это за сервис?</h3>\r\n            <p>\r\n                Статистика боёв на полной прокачке в мобильной версии Хроник Хаоса. Здесь можно не просто тестировать пачки, а даже тестировать их против Легендарной Гидры(new!)\r\n            </p>\r\n            <h3>2. Как им пользоваться?</h3>\r\n            <p>\r\n                Вверху меню - нажимаешь, смотришь ;-)\r\n            </p>\r\n            <h3>3. Ну и что там в меню \"Найти кто или кого побеждает пак\"?</h3>\r\n            <p>\r\n                Есть два режима - \"Кто побеждает твой пак\" и \"Кого побеждает твой пак\". Если нужно объяснять смысл этих названий, то сочувствую твоим друзьям и родителям и искренне тебе завидую.<br/>\r\n                В этом режиме ты выбираешь из героев ниже пак. Список героев составлен только из тех, по кому есть статистика с победой в бою.<br/>\r\n                Если твоего пака здесь нет - попробуй победить в защите или нападении в режимах \"Одна битва\" или \"Рулетка\".\r\n            </p>\r\n            <h3>4. А что в меню \"Одна битва\"?</h3>\r\n            <p>\r\n                Здесь выбираешь атакующий пак, защищающийся пак и отправляешь на обработку бой. Твой бой добавится в очередь<br/>\r\n                Когда дайдет очередь до твоего боя (сервер бесплатный для тебя и не резиновый, делает по 3-5 боев в минуту)<br/>\r\n                Когда сервер обработает бой, он пропадет из очереди и его результаты попадут в статистику, а если атакующий пак победит, ты сможешь найти результаты по атакующему или защищающемуся паку в меню \"Найти кто или кого побеждает пак\"\r\n            </p>\r\n            <h3>5. А что в меню \"Рулетка\"?</h3>\r\n            <p>\r\n                Здесь есть набор паков (48+ шт.), которые защищаются (подменю \"Список защищающихся\"), включая головы Легендарной гидры<br/>\r\n                Ты можешь добавить свой пак в список защищающихся (подменю \"Добавить в защищающиеся паки\") или атакующих (\"Добавить в атакующие паки\")<br/>\r\n                Если сервер простаивает (нет команд, добавленных шаловливыми ручками как у тебя), то генерится рандомный пак и он пробует атаковать весь список защитных паков этой рулетки<br/>\r\n                Когда ты добавляешь свой пак в защищающиеся (подменю \"Добавить в защищающиеся паки\") в режиме рулетки, то он там висит только 6 часов (сервер нерезиновый, а таких как ты много)<br/>\r\n                Когда ты добавляешь свой пак в атакующие (\"Добавить в атакующие паки\"), то сервер бросает всё (да щас!ха-ха!) и стравливает твой атакующий пак с защищающимися паками из списка в подменю \"Список защищающихся\".<br/>\r\n            </p>\r\n            <h3>6. Как формируется список в подменю \"Список защищающихся\" из режима \"Рулетка\"?</h3>\r\n            <p>\r\n                Есть четыре группы:<br/>\r\n                1. Добавленные шаловливыми ручками такими как у тебя из меню (\"Добавить в защищающиеся паки\"). Они там держатся не больше 6 часов, потом умирают как и все живое<br/>\r\n                2. Топ 15 атакующих паков по статистике на этом сервере<br/>\r\n                3. Топ 15 защитных паков по статистике на этом сервере<br/>\r\n                4. Паки админа и головы Легендарной гидры. Аз есмь админ добавил сюда паки на свое усмотрение и не собираюсь их обсуждать<br/>\r\n            </p>\r\n            <h3>7. Как можно протестировать свою пачку против гидры?</h3>\r\n            <p>\r\n                Только если добавить ее в атакующие паки в режиме \"Рулетка\".\r\n            </p>\r\n            <h3>8. Где найти лучшие пачки?</h3>\r\n            <p>\r\n                <s>У нас в клубе!</s> В меню \"Топ паки\".\r\n            </p>\r\n            <h3>9. Имеет ли этот сервис какое-то отношение к Nexters?</h3>\r\n            <p>\r\n                Конечно же нет!\r\n            </p>\r\n            <h3>10. Как связаться с админом?</h3>\r\n            <p>\r\n                Пока только в комментариях под видео на моем канале (нажмите на значок Youtube вверху).\r\n            </p>\r\n        </Box>)\r\n    }\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React from \"react\";\r\nimport {Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterHeroGrid, HeroCounterPackGrid} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    heroesFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    heroesFilter: number[],\r\n    requestsInProgress: number,\r\n    heroIds: IHeroPack[],\r\n    heroProbs: Map<number,number>\r\n}\r\n\r\nexport class HeroBestPackMode extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        const heroProbs=new Map<number,number>()\r\n        this.state={\r\n            currentMode: props.currentMode,\r\n            heroesFilter: props.heroesFilter,\r\n            requestsInProgress: 0,\r\n            heroIds: [],\r\n            heroProbs: heroProbs\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.filterHero=this.filterHero.bind(this)\r\n        for (const x of HeroData.allHeroesIds) {\r\n            this.state.heroProbs.set(x,-1)\r\n        }\r\n        this.updateHeroes(props.heroesFilter,props.currentMode,heroProbs)\r\n    }\r\n    requestSeq: number =0\r\n    requestsInProgress: number =0\r\n\r\n    updateHeroes(heroFilter:number[],currentMode:number,heroProbs:Map<number,number>) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroFilter.length;i++) {heroParams[i]=heroFilter[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/topPacks/\"\r\n        let gMode='a'\r\n        switch (currentMode) {\r\n            case 0: {gMode='a';break;}\r\n            case 1: {gMode='a';break;}\r\n            case 8010: {gMode='g8010';break;}\r\n            case 8011: {gMode='g8011';break;}\r\n            case 8012: {gMode='g8012';break;}\r\n            case 8013: {gMode='g8013';break;}\r\n            case 8014: {gMode='g8014';break;}\r\n            case 8015: {gMode='g8015';break;}\r\n        }\r\n\r\n        fetch(url+gMode+\"/0/0/0/\"+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        for (const x of Array.from(heroProbs.keys())) {\r\n                            heroProbs.set(x,-1)\r\n                        }\r\n                        const heroUniqMap=new Map<string,number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            //console.log('LPU '+lostPack.join(',')+\" wr=\"+(z['avgwinrate']*100).toFixed(1)+\" lr=\"+(z['avglossrate']*100).toFixed(1))\r\n\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m && m>=0) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n                            }\r\n                            cnt++\r\n                            let extText=\"\"\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h0d\",\"Урон_гидре_огня\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h1d\",\"Урон_гидре_тьмы\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h2d\",\"Урон_гидре_света\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h3d\",\"Урон_гидре_земли\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h4d\",\"Урон_гидре_воды\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h5d\",\"Урон_гидре_воздуха\",1/1000,\"k\",0)\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            if (!heroUniqMap.get(lostPack.join(','))) {\r\n                                heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:extText}})\r\n                                heroUniqMap.set(lostPack.join(','),1)\r\n                            }\r\n\r\n                            //console.log('HLP',heroLostPacks)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                            this.setState(\r\n                                {heroIds: heroLostPacks, heroProbs: heroProbs}\r\n                            )\r\n\r\n                    }\r\n                }).finally(()=>{\r\n            this.requestsInProgress--\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    filterHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroesFilter = this.state.heroesFilter\r\n            const index = heroesFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroesFilter.splice(index, 1);\r\n                this.setState({heroesFilter: heroesFilter})\r\n                this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n            } else {\r\n                if (heroesFilter.length<5) {\r\n                    heroesFilter.push(heroId)\r\n                    this.setState({heroesFilter: heroesFilter})\r\n                    this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setMode(e:any,value:string) {\r\n        const currentMode=~~value\r\n        const heroFilter:number[] = []\r\n        this.setState({currentMode:currentMode,heroesFilter:heroFilter})\r\n        this.updateHeroes(heroFilter,currentMode,this.state.heroProbs)\r\n    }\r\n\r\n    render() {\r\n        return (<Container sx={{\r\n            bgcolor: 'background.default',\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" color=\"primary\">Лучшие паки в атаке</ToggleButton>\r\n                <ToggleButton value=\"1\" color=\"primary\">Лучшие паки в защите</ToggleButton>\r\n                <ToggleButton value=\"8010\" color=\"primary\">Гидра Огня</ToggleButton>\r\n                <ToggleButton value=\"8011\" color=\"primary\">Гидра Тьмы</ToggleButton>\r\n                <ToggleButton value=\"8012\" color=\"primary\">Гидра Света</ToggleButton>\r\n                <ToggleButton value=\"8013\" color=\"primary\">Гидра Земли</ToggleButton>\r\n                <ToggleButton value=\"8014\" color=\"primary\">Гидра Воды</ToggleButton>\r\n                <ToggleButton value=\"8015\" color=\"primary\">Гидра Воздуха</ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Divider />\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Фильтр по героям\":\"Идет загрузка...просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterHeroGrid heroProbs={this.state.heroProbs}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={this.state.heroesFilter} key={10+this.state.currentMode+this.requestSeq}/>\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Лучшие паки\":\"Идет загрузка...просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterPackGrid heroLostPacks={this.state.heroIds}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={[]} key={20+this.state.currentMode+this.requestSeq} emptyMessage={\"Не переживай. Этот пак не набрал 10 побед в \"+(this.state.currentMode===0?\"атаке\":\"защите\")+\". Попробуй добавить его в \"+(this.state.currentMode===0?\"атакующие\":\"защищающиеся\")+\" режиме рулетки, и если он победит, то тут появится результат.\"}/>\r\n        </Container>)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {HeroFAQ} from \"./heroFAQ\";\r\nimport {HeroBestPackMode} from \"./heroBestPackMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    rouletteSubMode: number,\r\n    oneFightSubMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode,\r\n            rouletteSubMode: 0,\r\n            oneFightSubMode: 1\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToTopMode=this.navigateToTopMode.bind(this)\r\n        MyNavigator.heroModeSelect=this\r\n    }\r\n    navigateToTopMode(newMode:number,rouletteSubMode?:number,oneFightSubMode?:number) {\r\n        if (rouletteSubMode) {\r\n            this.setState({currentMode: newMode, rouletteSubMode: rouletteSubMode})\r\n        } else if (oneFightSubMode) {\r\n            this.setState({currentMode: newMode, oneFightSubMode: oneFightSubMode})\r\n        } else {\r\n            this.setState({currentMode: newMode})\r\n        }\r\n    }\r\n    setMode(e:any,value:string) {\r\n        this.navigateToTopMode(~~value)\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={MyNavigator.currentPack} currentMode={0} key={MyNavigator.currentPack.hIds.join(',')}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateToTopFunction={this.navigateToTopMode} currentMode={this.state.oneFightSubMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToTopMode} currentMode={this.state.rouletteSubMode} key={10+this.state.rouletteSubMode}/>)\r\n        } else if (currentMode===4) {\r\n            return (<HeroFAQ/>)\r\n        }else if (currentMode===5) {\r\n            return (<HeroBestPackMode heroesFilter={[]} currentMode={0}/>)\r\n        }\r\n        else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <Box className={\"heroHeader\"}><a target={\"_blank\"} href={\"https://www.youtube.com/channel/UCY_SEAvMIveeRAE_xMtNBKQ\"}><img src={\"./youtube-subscribe.gif\"} /> <span>Нажми сюда для просмотра видео<br/> с боями на полной прокачке</span> </a></Box>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"4\" color=\"primary\">FAQ</ToggleButton>\r\n                <ToggleButton value=\"0\" color=\"primary\">Найти кто или кого побеждает пак</ToggleButton>\r\n                <ToggleButton value=\"2\" color=\"primary\">Одна битва</ToggleButton>\r\n                <ToggleButton value=\"3\" color=\"primary\">Рулетка</ToggleButton>\r\n                <ToggleButton value=\"5\" color=\"primary\">Топ паки</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect;","export class MySettings {\r\n    static mainVersion=1\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroId: number,\r\n    heroProb: number,\r\n    onClick: any,\r\n    additionalClasses: string[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroModernIcon extends React.Component<IProps, IState> {\r\n/*    constructor(props: any) {\r\n        super(props);\r\n    }*/\r\n\r\n    render() {\r\n        let hero = HeroData.getHeroById(this.props.heroId)\r\n        //hero = HeroData.getHeroById(19);\r\n        const heroProb=this.props.heroProb||0\r\n        if (!hero) {\r\n            hero = HeroData.emptyHero\r\n        }\r\n        let boxClassName = \"heroModernIcon \"+this.props.additionalClasses.join(\" \")\r\n        return (\r\n            <Box className={boxClassName} data-heroid={hero.heroId} onClick={this.props.onClick} >\r\n                <span className={\"heroModernIconName\"}>{hero.heroName}</span>\r\n                <span className={\"heroModernIconProb\"}>{heroProb > 0 ? heroProb.toFixed(2) + \"%\" : \"\"}</span>\r\n                <img  alt={\"\"}\r\n                     src={\"hero/\" + HeroData.padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n\r\n            </Box>\r\n        )\r\n//                <span className={\"heroModernIconSpan\"} data-heroid={hero.heroId} onClick={this.props.onClick}/>\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeroModernIcon} from \"./HeroModernIcon\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroPack:IHeroPack,\r\n    heroProbs: Map<number,number>,\r\n    onHeroSelect:any,\r\n    selectedHeroes: number[],\r\n    additionalClasses: string[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class SelectedHeroPack extends React.Component<IProps, IState> {\r\n    /*constructor(props:any) {\r\n        super(props);\r\n    }*/\r\n    renderHeroIcons() {\r\n        this.props.heroPack.hIds.sort((a,b) => {\r\n            return (HeroData.getHeroById(a)?.battleOrder || 0)-(HeroData.getHeroById(b)?.battleOrder||0)\r\n        })\r\n        const items:any=[]\r\n        for(let i=0;i<5;i++) {\r\n            const hId=this.props.heroPack.hIds[i]\r\n            items.push(<HeroModernIcon key={i} additionalClasses={[]} heroId={hId} heroProb={this.props.heroProbs.get(hId) || 0} onClick={this.props.onHeroSelect}/>)\r\n        }\r\n        return items\r\n    }\r\n    render() {\r\n        const additionalClasses=\"selectedHeroPack\" + this.props.additionalClasses.join(\" \")\r\n        return (\r\n            <Box className={\"selectedHeroPack\"}>\r\n                <Box className={\"selectedHeroPackIcons\"}>\r\n                {this.renderHeroIcons()}\r\n                </Box>\r\n                <Box className={\"selectedHeroPackExtended\"}>\r\n                    <span><img src={\"./trophy_a_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wra=== undefined?\"?\":this.props.heroPack?.extendedInfo?.wra)+\"%\"}</span></span>\r\n                    <span><img src={\"./attack_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.ca=== undefined?\"?\":this.props.heroPack?.extendedInfo?.ca}</span></span>\r\n                    <span><img src={\"./trophy_d_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wrd=== undefined?\"?\":this.props.heroPack?.extendedInfo?.wrd)+\"%\"}</span></span>\r\n                    <span><img src={\"./shield_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.cd === undefined?\"?\":this.props.heroPack?.extendedInfo?.cd}</span></span>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernIcon} from \"./HeroModernIcon\";\r\n\r\ninterface IProps {\r\n    heroProb: Map<number,number>,\r\n    onClick: any,\r\n    selectedHeroes: number[],\r\n    highlightedHeroes: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroModernGrid extends React.Component<IProps, IState> {\r\n    /*constructor(props: any) {\r\n        super(props);\r\n    }*/\r\n\r\n    renderHeroIcons() {\r\n        const items=[]\r\n        for (const i in HeroData.heroIdsOrderedByName) {\r\n            const heroId=HeroData.heroIdsOrderedByName[i]\r\n            const prob=this.props.heroProb.get(heroId) || 0\r\n            const additionalClasses=[\"heroIconSmall\"]\r\n            if (this.props.selectedHeroes.indexOf(heroId)>=0) {additionalClasses.push(\"mySelected\")}\r\n            if (this.props.highlightedHeroes.indexOf(heroId)<0) {additionalClasses.push(\"myNotHighlighted\")}\r\n            items.push(\r\n                <HeroModernIcon key={i} additionalClasses={additionalClasses} heroId={heroId} heroProb={prob} onClick={this.props.onClick} />\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box className={\"heroModernGrid\"}>\r\n                {this.renderHeroIcons()}\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\ninterface IProps {\r\n    message: string,\r\n    openMenuFunction:any\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeaderBlock extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box className={\"headerBlock\"}>\r\n                <MenuIcon onClick={this.props.openMenuFunction}/>\r\n                <Box>{this.props.message}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React from \"react\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport HourglassBottomIcon from '@mui/icons-material/HourglassBottom';\r\nimport {HeroData} from \"../types\";\r\nimport {SelectedHeroPack} from \"./SelectedHeroPack\";\r\n\r\ninterface IProps {\r\n    heroPack: IHeroPack,\r\n    changeHeaderMessageFunction: any,\r\n    mainUrl: string,\r\n    params: any\r\n}\r\n\r\ninterface IState {\r\n    minWinRate: number,\r\n    minFightsCount: number,\r\n    heroFilter: number[],\r\n    heroPacks: IHeroPack[],\r\n    totalPacksFound: number,\r\n    requestsInProgress: number,\r\n    heroProbs: Map<number, number>\r\n    filterMinWinRate: number,\r\n    filterMaxWinRate: number,\r\n    filterMinFights: number,\r\n    filterMaxFights: number,\r\n    totalFound: number\r\n}\r\n\r\n\r\nexport class CounterPackResult extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        let minFightsCount = 0;\r\n        if (this.props.params.get(\"minFightsCount\")) {\r\n            const x = ~~this.props.params.get(\"minFightsCount\")\r\n            if (x >= 0) {\r\n                minFightsCount = x\r\n            }\r\n        }\r\n        const heroFilter = []\r\n        if (this.props.params.get(\"heroFilter\")) {\r\n            const x = this.props.params.get(\"heroFilter\")?.split(\",\") || []\r\n            for (let i = 0; i < 5 && i < x.length; i++) {\r\n                if (HeroData.getHeroById(~~x[i])) {\r\n                    heroFilter.push(~~x[i])\r\n                }\r\n            }\r\n        }\r\n        let minWinRate = 0\r\n        if (this.props.params.get(\"minWinRate\")) {\r\n            const x = ~~this.props.params.get(\"minWinRate\")\r\n            if (x >= 0 && x <= 100) {\r\n                minWinRate = x\r\n            }\r\n        }\r\n        this.state = {\r\n            minWinRate: minWinRate,\r\n            minFightsCount: minFightsCount,\r\n            heroFilter: heroFilter,\r\n            heroPacks: [],\r\n            requestsInProgress: 0,\r\n            totalPacksFound: 0,\r\n            heroProbs: new Map<number, number>(),\r\n            filterMinWinRate: 0,\r\n            filterMaxWinRate: 0,\r\n            filterMinFights: 0,\r\n            filterMaxFights: 0,\r\n            totalFound: 0\r\n        }\r\n\r\n        this.props.changeHeaderMessageFunction(\"Загружаем контр-паки из статистики...\")\r\n        this.onHeroSelect = this.onHeroSelect.bind(this)\r\n    }\r\n\r\n    requestsInProgress: number = 0\r\n\r\n    static constructHeroFilter(pHeroFilter: number[]) {\r\n        let result = \"%\"\r\n        for (let i = 0; i <= 5 && i < pHeroFilter.length; i++) {\r\n            result += ':' + pHeroFilter[i] + ':%'\r\n        }\r\n        return escape(result)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateHeroPackInfo()\r\n    }\r\n\r\n    updateHeroPackInfo() {\r\n        const heroPack = this.props.heroPack\r\n        if (heroPack.hIds.length === 5) {\r\n            //https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/lostPacks/:h1/:h2/:h3/:h4/:h5/:wr/:cnt/:hf\r\n            let url = \"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/lostPacks/\"\r\n            const heroParams = [-1, -1, -1, -1, -1]\r\n            for (let i = 0; i < 5 && i < heroPack.hIds.length; i++) {\r\n                heroParams[i] = heroPack.hIds[i];\r\n            }\r\n            this.requestsInProgress++\r\n\r\n            for (let i = 0; i < 5 && i < heroPack.hIds.length; i++) {\r\n                heroParams[i] = heroPack.hIds[i];\r\n            }\r\n            url += heroParams.join(\"/\")\r\n            url += \"/\" + this.state.minWinRate + \"/\" + this.state.minFightsCount + \"/\"\r\n            url += CounterPackResult.constructHeroFilter(this.state.heroFilter)\r\n            console.log('ZZZ', url)\r\n            fetch(url, {\r\n                method: \"GET\"\r\n            }).then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        if (result['items']) {\r\n                            const heroLostPacks = []\r\n                            let cnt = 0\r\n                            const heroProbs = new Map<number, number>()\r\n                            let filterMinWinRate = 0\r\n                            let filterMaxWinRate = 0\r\n                            let filterMinFights = 0\r\n                            let filterMaxFights = 0\r\n                            let totalFound = 0\r\n                            for (const x in result['items']) {\r\n                                const z = result['items'][x]\r\n                                let lostPack = []\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                                filterMinWinRate = z.minwr\r\n                                filterMaxWinRate = z.maxwr\r\n                                filterMinFights = z.minc\r\n                                filterMaxFights = z.maxc\r\n                                totalFound = z.tc\r\n                                for (const heroId of lostPack) {\r\n                                    let m = heroProbs.get(~~heroId)\r\n                                    if (m) {\r\n                                        m++\r\n                                    } else {\r\n                                        m = 1\r\n                                    }\r\n                                    heroProbs.set(~~heroId, m)\r\n                                }\r\n                                cnt++\r\n                                heroLostPacks.push({\r\n                                    hIds: lostPack,\r\n                                    extendedInfo: {\r\n                                        statusInfo: \"\",\r\n                                        wra: z.wra,\r\n                                        wrd: z.wrd,\r\n                                        ca: z.ca,\r\n                                        cd: z.cd,\r\n                                        wa: z.wa,\r\n                                        wd: z.wd,\r\n                                        cc: z.cc,\r\n                                        cwr: z.cwr\r\n                                    }\r\n                                })\r\n                            }\r\n                            for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                                const mmd = heroProbs.get(~~heroPackId)\r\n                                if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                            }\r\n                            this.setState({\r\n                                heroProbs: heroProbs,\r\n                                heroPacks: heroLostPacks,\r\n                                filterMinWinRate: filterMinWinRate,\r\n                                filterMaxWinRate: filterMaxWinRate,\r\n                                filterMinFights: filterMinFights,\r\n                                filterMaxFights: filterMaxFights,\r\n                                totalFound: totalFound\r\n                            })\r\n                        }\r\n                    }).finally(() => {\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress: this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    onHeroSelect(e: any) {\r\n\r\n    }\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        const emptyMap = new Map<number, number>()\r\n        for (const i in this.state.heroPacks) {\r\n            items.push(<SelectedHeroPack additionalClasses={[]} heroPack={this.state.heroPacks[i]} heroProbs={emptyMap}\r\n                                         onHeroSelect={this.onHeroSelect} selectedHeroes={this.state.heroFilter}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        if (this.state.requestsInProgress > 0) {\r\n            return (\r\n                <Box className={\"counterPackResult\"}>\r\n                    Loading...<HourglassBottomIcon/>\r\n                </Box>\r\n            )\r\n        } else {\r\n            if (this.state.heroPacks.length === 0) {\r\n                return (\r\n                    <Box className={\"counterPackResult\"}>\r\n                        <Box className={\"counterPackNotFound\"}>\r\n                            <Box>Не нашли контр-паки у себя в статистике боев</Box>\r\n                            <span>Попробовать добавить в очередь на поиск на сервер обработки боёв?</span>\r\n                            <Button>Найти контр-пак</Button>\r\n                        </Box>\r\n                    </Box>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Box className={\"counterPackResult\"}>\r\n                        <Box className={\"counterPackResultStatusBar\"}>Нашли {this.state.totalFound} контр-паков</Box>\r\n                        <Box className={\"counterPackResultPacks\"}>\r\n                            {this.renderHeroPacks()}\r\n                        </Box>\r\n                    </Box>\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {SelectedHeroPack} from \"./SelectedHeroPack\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernGrid} from \"./HeroModernGrid\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeaderBlock} from \"./HeaderBlock\";\r\nimport {CounterPackResult} from \"./CounterPackResult\";\r\nimport {useLocation, useMatch, useNavigate, useParams} from \"react-router-dom\";\r\n\r\n//https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/lostPacks/:h1/:h2/:h3/:h4/:h5/:wr/:cnt/:hf\r\n\r\nexport function CounterPackScreen(props: any) {\r\n    const params = useParams();\r\n    const match = useMatch(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [headerMessage, setHeaderMessage] = useState(\"Выберите пачку из 5 героев для поиска\");\r\n    const templateHeroPack = HeroData.getEmptyHeroPack()\r\n    const queryParams: any = new URLSearchParams(location?.search || \"\")\r\n    const [isInitialized,setIsInitialized] = useState(false)\r\n    if (queryParams.get(\"hids\")) {\r\n        const x = queryParams.get(\"hids\")?.split(\",\")\r\n        console.log(templateHeroPack.hIds)\r\n        if (x && x.length <= 5) {\r\n            for (const z of x) {\r\n                templateHeroPack.hIds.push(~~z)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [heroPack, setHeroPack] = useState(templateHeroPack);\r\n    const [heroAvailable, setHeroAvailable] = useState([] as number[])\r\n    const [heroProbs, setHeroProbs] = useState(new Map<number, number>())\r\n    const [requestsInProgress, setRequestsInProgress] = useState(0)\r\n\r\n    const updateAvailableHeroes = function (pHeroPack: IHeroPack) {\r\n        const heroParams = [-1, -1, -1, -1, -1]\r\n        for (let i = 0; i < 5 && i < pHeroPack.hIds.length; i++) {\r\n            heroParams[i] = pHeroPack.hIds[i];\r\n        }\r\n        setRequestsInProgress(requestsInProgress + 2)\r\n        let url = \"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"\r\n        fetch(url + heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let heroArray: number[] = []\r\n                    if (result['items']) {\r\n                        for (const j in result['items']) {\r\n                            const x = result['items'][j]['d']\r\n                            if (x) {\r\n                                if (!heroArray.includes(~~x)) {\r\n                                    heroArray.push(~~x)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    setHeroAvailable(heroArray)\r\n                },\r\n                (error) => {\r\n                    console.error(\"error req\", error)\r\n                    setHeroAvailable([])\r\n                }\r\n            ).finally(() => {\r\n            setRequestsInProgress(requestsInProgress - 1)\r\n        })\r\n\r\n        url = \"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/packStat/\"\r\n        fetch(url + heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let heroArray: number[] = []\r\n                    if (result['items']) {\r\n                        for (const j in result['items']) {\r\n                            const x = result['items'][j]\r\n                            if (x) {\r\n                                const newHeroPack = HeroData.getEmptyHeroPack()\r\n                                newHeroPack.hIds = pHeroPack.hIds\r\n                                newHeroPack.extendedInfo = {\r\n                                    statusInfo: \"\",\r\n                                    ca: x.ca,\r\n                                    cd: x.cd,\r\n                                    wra: x.wra,\r\n                                    wrd: x.wrd,\r\n                                    wa: x.wa,\r\n                                    wd: x.wd,\r\n                                }\r\n                                setHeroPack(newHeroPack)\r\n                            }\r\n                        }\r\n                    }\r\n                    setHeroAvailable(heroArray)\r\n                },\r\n                (error) => {\r\n                    console.error(\"error req\", error)\r\n                    setHeroAvailable([])\r\n                }\r\n            ).finally(() => {\r\n            setRequestsInProgress(requestsInProgress - 1)\r\n        })\r\n\r\n\r\n    }\r\n    const updateHeroPackInfo = function (pHeroPack: IHeroPack) {\r\n        navigate(\"/counterPack?hids=\" + pHeroPack.hIds.join(\",\"))\r\n        setHeroPack(pHeroPack)\r\n        updateAvailableHeroes(pHeroPack)\r\n    }\r\n    const changeHeaderMessage = function (newMessage: string) {\r\n        setHeaderMessage(newMessage)\r\n    }\r\n    const onHeroSelect = function (e: any) {\r\n        if (e?.target?.dataset?.heroid > 0) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            if (HeroData.allHeroesIds.includes(heroId)) {\r\n                const index = heroPack.hIds.indexOf(heroId)\r\n                if (index < 0) {\r\n                    if (heroPack.hIds.length < 5) {\r\n                        heroPack.hIds.push(heroId)\r\n                        heroPack.extendedInfo = {statusInfo: \"\"}\r\n                        updateHeroPackInfo(heroPack)\r\n                    }\r\n                } else {\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    heroPack.hIds.splice(index, 1);\r\n                    updateHeroPackInfo(heroPack)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!isInitialized && heroPack.hIds.length===5) {\r\n            setIsInitialized(true)\r\n            updateHeroPackInfo(heroPack)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Box className={\"counterPackScreen\"}>\r\n            <HeaderBlock openMenuFunction={props.openMenuFunction}\r\n                         message={headerMessage}/>\r\n            <SelectedHeroPack heroPack={heroPack} heroProbs={HeroData.zeroHeroProbMap}\r\n                              onHeroSelect={onHeroSelect} selectedHeroes={[]} additionalClasses={[]}/>\r\n            {heroPack.hIds.length < 5 && (\r\n                <HeroModernGrid heroProb={heroProbs} onClick={onHeroSelect}\r\n                                selectedHeroes={heroPack.hIds} highlightedHeroes={heroAvailable}/>\r\n            )}\r\n            {heroPack.hIds.length === 5 && (\r\n                <CounterPackResult changeHeaderMessageFunction={changeHeaderMessage} heroPack={heroPack}\r\n                                   params={queryParams}\r\n                                   mainUrl={\"/counterPack\" + (heroPack.hIds.length > 0 ? \"?hIds=\" + heroPack.hIds.join(\",\") : \"\")}/>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\n/*\r\ninterface IProps {\r\n    openMenuFunction: any\r\n}\r\n\r\nexport interface IState {\r\n    heroProbs: Map<number, number>,\r\n    heroPack: IHeroPack,\r\n    requestsInProgress: number,\r\n    headerMessage: string,\r\n    heroAvailable: number[]\r\n}\r\nclass CounterPackScreen extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroProbs: new Map<number, number>(),\r\n            heroPack: HeroData.emptyHeroPack,\r\n            requestsInProgress: 0,\r\n            headerMessage: \"Выберите пачку из 5 героев для поиска\",\r\n            heroAvailable: []\r\n        }\r\n        console.log(this)\r\n        this.onHeroSelect = this.onHeroSelect.bind(this)\r\n        this.changeHeaderMessage= this.changeHeaderMessage.bind(this)\r\n    }\r\n\r\n    requestsInProgress: number = 0\r\n\r\n    updateHeroPackInfo(heroPack: IHeroPack,newState: any) {\r\n        newState.heroPack=heroPack;\r\n        this.setState(newState)\r\n        this.updateAvailableHeroes(heroPack)\r\n    }\r\n\r\n\r\n\r\n    changeHeaderMessage(newMessage:string,newState?:any) {\r\n        if (newState) {\r\n            newState.headerMessage=newMessage\r\n            this.setState(newState)\r\n        } else {\r\n            this.setState({headerMessage: newMessage})\r\n        }\r\n    }\r\n\r\n    onHeroSelect(e: any) {\r\n        if (e?.target?.dataset?.heroid > 0) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            if (HeroData.allHeroesIds.includes(heroId)) {\r\n                const heroPack = this.state.heroPack\r\n                const index = heroPack.hIds.indexOf(heroId)\r\n                if (index < 0) {\r\n                    if (heroPack.hIds.length < 5) {\r\n                        heroPack.hIds.push(heroId)\r\n                        heroPack.extendedInfo = {statusInfo: \"\"}\r\n                        this.updateHeroPackInfo(heroPack,{})\r\n                    }\r\n                } else {\r\n                    const newState:Partial<IState>={}\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    heroPack.hIds.splice(index, 1);\r\n                    this.updateHeroPackInfo(heroPack,newState)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let stage=0;\r\n        if (this.state.heroPack.hIds.length===5) {\r\n            stage=1\r\n        }\r\n        return (\r\n            <Box className={\"counterPackScreen\"}>\r\n                <HeaderBlock openMenuFunction={this.props.openMenuFunction}\r\n                             message={this.state.headerMessage}/>\r\n                <SelectedHeroPack heroPack={this.state.heroPack} heroProbs={HeroData.zeroHeroProbMap}\r\n                                  onHeroSelect={this.onHeroSelect} selectedHeroes={[]}/>\r\n                {stage===0 && (\r\n                    <HeroModernGrid heroProb={this.state.heroProbs} onClick={this.onHeroSelect}\r\n                                selectedHeroes={this.state.heroPack.hIds} highlightedHeroes={this.state.heroAvailable}/>\r\n                )}\r\n                {stage===1 && (\r\n                    <CounterPackResult changeHeaderMessageFunction={this.changeHeaderMessage} heroPack={this.state.heroPack}/>\r\n                )}\r\n            </Box>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n*/\r\n","import React from \"react\";\r\nimport {Box, Slide, Tab, Tabs} from \"@mui/material\";\r\nimport {CounterPackScreen} from \"./CounterPackScreen\";\r\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\"\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n\r\ninterface IState {\r\n    navMenuIndex: number,\r\n    navMenuOpened: boolean,\r\n}\r\n\r\nexport class MainScreen extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            navMenuIndex: 0,\r\n            navMenuOpened: false,\r\n        }\r\n        this.changeMenu = this.changeMenu.bind(this)\r\n        this.toggleMenu = this.toggleMenu.bind(this)\r\n    }\r\n\r\n\r\n    changeMenu(event: any, newValue: string) {\r\n        this.setState({\r\n            navMenuIndex: ~~newValue\r\n        })\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.setState({\r\n            navMenuOpened: !this.state.navMenuOpened\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //{!this.state.navMenuOpened && (\r\n        return (\r\n            <HashRouter>\r\n                <Box className={\"mainScreen\"}\r\n                     sx={{flexGrow: 1, display: 'flex', width: '100vw', height: '100%', overflowX: 'hidden'}}>\r\n\r\n                    <Slide direction=\"right\" in={this.state.navMenuOpened}>\r\n                        <Box className={\"menuBox\"}>\r\n                            <Tabs orientation=\"vertical\"\r\n                                  variant=\"scrollable\"\r\n                                  value={this.state.navMenuIndex}\r\n                                  onChange={this.changeMenu}\r\n                                  aria-label=\"Vertical tabs example\"\r\n                                  sx={{borderRight: 1, borderColor: 'divider'}}>\r\n                                <Tab label=\"Item One\" id={\"vertical-tab-0\"} aria-controls={\"vertical-tabpanel-0\"}/>\r\n                                <Tab label=\"Item Two\" id={\"vertical-tab-1\"} aria-controls={\"vertical-tabpanel-1\"}/>\r\n                            </Tabs>\r\n                            <Box className={\"menuFadeBox\"} onClick={this.toggleMenu}/>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Box role=\"tabpanel\">\r\n                        <Routes>\r\n                            <Route path={\"/counterPack\"} element={\r\n                                <CounterPackScreen openMenuFunction={this.toggleMenu}\r\n                                                   />\r\n                            }/>\r\n                            <Route path={\"*\"} element={\r\n                                <Navigate replace to=\"/counterPack\" />}\r\n                            />\r\n                        </Routes>\r\n                    </Box>\r\n                </Box>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { ThemeProvider } from '@mui/system';\r\nimport {HeroModeSelect} from \"./components\";\r\nimport {createTheme} from \"@mui/material\";\r\nimport {MySettings} from \"./types/MySettings\";\r\nimport {MainScreen} from \"./components2/MainScreen\";\r\n\r\nconst customTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#5d4037',\r\n            contrastText: '#fff',\r\n            light: '#8b6b61',\r\n            dark: '#321911',\r\n        },\r\n        secondary: {\r\n            light: '#ffc947',\r\n            main: '#ff9800',\r\n            dark: '#c66900',\r\n            contrastText: '#000',\r\n        }\r\n    }\r\n});\r\n\r\nfunction App() {\r\n    if (MySettings.mainVersion===1) {\r\n        return (\r\n            <ThemeProvider theme={customTheme}>\r\n                <HeroModeSelect currentMode={4}/>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (\r\n        <ThemeProvider theme={customTheme}>\r\n            <MainScreen/>\r\n        </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}