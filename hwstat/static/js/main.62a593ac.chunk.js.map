{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroModeSelect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","heroId","heroesList","get","a1","a2","i","length","result","Map","x","heroData","set","heroName","battleOrder","initHeroesList","z","padLeadingZeros","num","size","s","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","flexGrow","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","opacity","borderRadius","renderType","renderForHeroSelectGrid","renderForPackEmptySelected","renderForHeroCounterHeroGrid","renderForHeroPackGrid","minWidth","minHeight","React","Component","HeroCounterPackMode","initialized","heroIds","heroLostPacks","heroCounterFilter","requestsInProgress","selectHero","bind","deselectHero","filterCounterHero","heroParams","setState","url","mode","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","push","Number","parseFloat","r","Array","from","keys","heroPackId","mmd","heroCounterProbs","finally","undefined","getPacksData","j","error","e","target","dataset","heroid","index","indexOf","splice","updateHeroCounterFilter","includes","updateHeroIds","Container","Divider","Chip","label","onFilterCounterHero","HeroGrid","items","heroArray","values","value","sort","a","b","container","spacing","justifyContent","renderHeroes","HeroPackSelected","heroCount","heroes","h1","h2","Stack","direction","renderHeroPack","HeroCounterHeroGrid","columns","HeroCounterPackGrid","heroPack","hl","newHeropack","renderOneHeroPack","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","console","log","testqid","newQ","position","heroIdsA","heroIdsD","testQId","marginBottom","marginLeft","marginRight","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","alignSelf","Button","variant","emptyMap","marginTop","disabled","flexDirection","renderA","renderB","renderSendButton","HeroOneFightMode","currentMode","setMode","navigateToMode","newMode","ToggleButtonGroup","exclusive","onChange","ToggleButton","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","typ","showCloseButton","HeroRouletteMode","HeroModeSelect","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62a593ac.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder:number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result:Map<number, Hero>=new Map<number,Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId=~~x\r\n        if (heroId>=1 && heroId<599) {\r\n            const heroData:any = HStorage.heroDescStorage[x]\r\n            result.set(heroId,{\r\n                heroId: heroId,\r\n                heroName: HStorage.localeStorage[\"LIB_HERO_NAME_\"+heroId],\r\n                battleOrder:heroData.battleOrder\r\n            })\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\nstatic getHeroById(heroId: number) {\r\n    return HeroData.heroesList.get(heroId)\r\n}\r\nstatic compareArrays (a1:any[],a2:any[]) {var i = a1.length; if (i !== a2.length) return false; while (i--) { if (a1[i] !== a2[i]) return false; } return true}\r\n\r\nstatic heroesList: Map<number, Hero> = initHeroesList()\r\n    static z = new Map([\r\n    [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n    [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n    [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n    [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n    [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n    [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n    [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n    [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n    [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n    [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n    [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n    [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n    [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n    [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n    [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n    [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n    [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n    [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n    [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n    [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n    [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n    [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n    [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n    [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n    [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n    [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n    [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n    [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n    [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n    [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n    [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n    [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n    [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n    [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n    [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n    [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n    [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n    [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n    [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n    [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n    [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n    [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n    [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n    [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n    [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n    [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n    [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n    [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n    [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n    [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n    [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n    [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n    [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n    [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box sx={{\r\n                maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>empty</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import React from \"react\";\r\nimport {Box, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    mode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[],\r\n    heroProbs?: Map<number, number>,\r\n    heroCounterProbs?: Map<number, number>,\r\n    heroLostPacks: number[][],\r\n    heroCounterFilter: number[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n    }\r\n    initialized: boolean = false\r\n\r\n\r\n    getPacksData(heroIds: number[]) {\r\n\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.length;i++) {heroParams[i]=heroIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        let url=\"\"\r\n        if (this.props.mode===0) {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroes/\"\r\n        } else {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs=new Map<number,number>()\r\n                        for (const x in result['items']) {\r\n                            const z=result['items'][x]\r\n                            let lostPack = []\r\n                            if (this.props.mode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                    let m = heroProbs.get(~~heroId)\r\n                                    if (m) {\r\n                                        m++\r\n                                    } else {\r\n                                        m=1\r\n                                    }\r\n                                    heroProbs.set(~~heroId,m)\r\n\r\n                             }\r\n                            cnt++\r\n                            lostPack.push(Number.parseFloat(z.r))\r\n                            heroLostPacks.push(lostPack)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd=heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt >0) heroProbs.set(~~heroPackId,100*mmd/cnt)\r\n                        }\r\n                        this.setState(\r\n                            {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                        )\r\n                    }\r\n                }).finally(()=>{\r\n                    const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: number[]) {\r\n        this.initialized=true\r\n        this.setState(\r\n            {heroIds: heroIds, heroProbs: undefined, heroLostPacks: []}\r\n        )\r\n        if (heroIds.length == 5) {\r\n            this.getPacksData(heroIds)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.length;i++) {heroParams[i]=heroIds[i];}\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n            let url=\"\"\r\n            if (this.props.mode===0) {\r\n                url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"\r\n            } else {\r\n                url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroesStat/\"\r\n            }\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroLostPacks: []\r\n                        });\r\n                    },\r\n                    // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n                    // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n                    (error) => {\r\n                        let heroProbs = new Map<number, number>()\r\n                        this.setState({\r\n                            heroProbs: undefined,\r\n                            heroIds: heroIds,\r\n                            heroLostPacks: []\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n            })\r\n        }\r\n    }\r\n\r\n    updateHeroCounterFilter(heroCounterFilter: number[]) {\r\n        this.setState({heroCounterFilter: heroCounterFilter})\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.updateHeroCounterFilter(heroCounterFilter)\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.updateHeroCounterFilter(heroCounterFilter)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n            if (this.state.heroIds.length == 5 && this.state.heroLostPacks.length > 0) {\r\n                if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default'\r\n                    }}>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Selected pack\":\"Loading...just wait!\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.props.mode===0?\"Counter heroes - fill free to filter packs\":\"Sucked heroes - fill free to filter packs\"):\"Loading...just wait!\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={this.state.heroCounterProbs}\r\n                                             onFilterCounterHero={this.filterCounterHero}\r\n                                             heroCounterFilter={this.state.heroCounterFilter}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.props.mode===0?\"Counter hero packs\":\"Sucked defenders hero packs\"):\"Loading...just wait!\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={this.state.heroLostPacks}\r\n                                             onFilterCounterHero={this.filterCounterHero}\r\n                                             heroCounterFilter={this.state.heroCounterFilter}/>\r\n                    </Container>\r\n                )\r\n            } else {\r\n                if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }\r\n                return (\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default'\r\n                    }}>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.props.mode===0?\"Choose pack to attack\":\"Choose pack of winners\"):\"Loading...just wait!\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid heroIds={this.state.heroIds} heroProbs={this.state.heroProbs}\r\n                                      selectHero={this.selectHero}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[]\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return b.heroProb-a.heroProb\r\n        })\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0})\r\n            }\r\n        }\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Grid, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[]\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.state.heroIds.length\r\n        const heroes = this.state.heroIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Stack sx={{\r\n                justifyContent: 'center',\r\n            }} direction=\"row\" spacing={1}>\r\n            {this.renderHeroPack()}\r\n            </Stack>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs?: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x)\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Grid container spacing={0} columns={5} sx={{\r\n            m: 0,\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    heroLostPacks: number[][]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: number[]) {\r\n        const items = []\r\n        const hl=heroPack.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const heroPack of this.props.heroLostPacks) {\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark'\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: number[],\r\n    heroIdsD: number[],\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        console.log({position:position,heroIdsA:heroIdsA,heroIdsD:heroIdsD,testQId:x['testq_id']})\r\n                        newQ.push({position:position,heroIdsA:heroIdsA,heroIdsD:heroIdsD,testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box sx={{\r\n                    marginLeft: '0.2em',\r\n                    marginRight: '0.2em',\r\n                    fontSize: '2em',\r\n                    fontWeight: 700,\r\n                }}>-&gt;</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Box><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: number[],\r\n    heroIdsD: number[]\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: number[],\r\n    heroIdsD: number[],\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: number[],\r\n    heroIdsD: number[],\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            heroIdsD: props.heroIdsD ? props.heroIdsD : [],\r\n            displayEditA: props.heroIdsA.length===5,\r\n            displayEditD: props.heroIdsD.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:heroIds })\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.length>0?\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Done</Button>\r\n                        :\r\n                        null}\r\n                </Container>\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Edit</Button>\r\n                </Container>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box >\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.length>0?\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditD}>Done</Button>\r\n                        :\r\n                        null}\r\n                </Container>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Choose Defender heroes\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box >\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" onClick={this.toggleEditD}>Edit</Button>\r\n                </Container>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.length>0 && this.state.heroIdsD.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={[]} heroIdsD={[]} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Add to training</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Training queue</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: number[],\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: number[],\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            displayEditA: props.heroIdsA.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:heroIds })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.length>0?\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Done</Button>\r\n                        :\r\n                        null}\r\n                </Container>\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Edit</Button>\r\n                </Container>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: number[],\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: number[],\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            displayEditA: props.heroIdsA.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:heroIds })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.length>0?\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Done</Button>\r\n                        :\r\n                        null}\r\n                </Container>\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Defender heroes\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Edit</Button>\r\n                </Container>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: number[],\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        console.log({position:position,heroIdsA:heroIdsA,testQId:x['testq_id']})\r\n                        newQ.push({position:position,heroIdsA:heroIdsA,testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: number[],\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:heroIdsA,testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:heroIdsA})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:heroIdsA})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:heroIdsA})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>empty</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue added by user. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current top attacker packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current top defenders packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current classic packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={[]} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={[]} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Add attacker</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Attack queue</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Add defender</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Defenders list</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={[]} mode={0} key={0}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroCounterPackMode heroIds={[]} mode={1} key={1}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateFunction={this.navigateToMode} currentMode={1}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToMode} currentMode={0}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Counter-pack</ToggleButton>\r\n                <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Attack-pack</ToggleButton>\r\n                <ToggleButton value=\"2\" data-mode={2} color=\"primary\">One fight</ToggleButton>\r\n                <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Roulette</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect","import React from 'react';\nimport './App.css';\n\nimport { ThemeProvider } from '@mui/system';\nimport {HeroModeSelect} from \"./components\";\nimport {createTheme} from \"@mui/material\";\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#5d4037',\n            contrastText: '#fff',\n            light: '#8b6b61',\n            dark: '#321911',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#000',\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <ThemeProvider theme={customTheme}>\n        <HeroModeSelect currentMode={1}/>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}