{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","types/MyNavigator.ts","types/MySettings.ts","components/heroCounterPackMode.tsx","components2/HeroModernIcon.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroFAQ.tsx","components/heroBestPackMode.tsx","components/heroModeSelect.tsx","components2/SelectedHeroPack.tsx","components2/HeroModernGrid.tsx","components2/HeaderBlock.tsx","components2/ModernSlider.tsx","components2/CounterPackFilterModal.tsx","components2/CounterPackResults.tsx","components2/CounterPackScreen.tsx","components2/TestComponent.tsx","components2/MainScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","pHeroFilter","result","sort","a","b","i","length","console","log","escape","x","Array","isArray","getHeroById","battleOrder","hero","heroName","r","hIds","extendedInfo","statusInfo","num","size","s","heroId","heroesList","get","bossList","a1","a2","emptyHeroProbMap","Map","heroNameRecognitionMap","zeroHeroProbMap","emptyHeroPack","heroIdsOrderedByName","emptyHero","allHeroesIds","heroData","heroRec","set","push","initHeroesList","initBossList","z","padLeadingZeros","React","Component","MyNavigator","window","location","href","indexOf","mode","currentPack","currentDefenderPack","setCurrentPack","setDefenderPack","heroModeSelect","navigateToTopMode","heroRouletteMode","navigateToMode","heroAddAttackerMode","setHeroPack","heroAddDefenderMode","heroCounterPackMode","updateHeroIds","undefined","heroOneFightMode","heroAddToTrainMode","setAttackHeroPack","setDefenderHeroPack","heroRouletteDefendersMode","heroRouletteAttackersQueueMode","disableClose","MySettings","mainVersion","apiUrl","HeroCounterPackMode","props","currentMode","requestsInProgress","initialized","requestSeq","state","heroIds","heroLostPacks","heroCounterFilter","heroWinPacks","heroAttackerFilter","heroLostProbs","heroWinProbs","heroCounterProbs","heroAttackerProbs","selectHero","bind","filterCounterHero","filterAttackerHero","selectMode","heroParams","this","setState","url","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","m","Number","parseFloat","toFixed","w","t","from","keys","heroPackId","mmd","finally","requestId","getPacksData","j","error","includes","index","splice","heroPack","e","value","newMode","Container","sx","bgcolor","display","flexDirection","justifyContent","alignItems","ToggleButtonGroup","color","exclusive","onChange","ToggleButton","Divider","Chip","label","deselectHero","onFilterCounterHero","mainHeroPack","mainHeroPackType","emptyMessage","p","Box","showAll","HeroModernIcon","onClick","target","dataset","heroid","heroProb","boxClassName","additionalClasses","className","isAdded","isRemoved","alt","src","HeroGrid","items","heroArray","values","Grid","container","spacing","renderHeroes","HeroPackSelected","anchorEl","addToAttackQueue","addToDefenderQueue","seeCounterPacks","handleMenuClick","handleMenuClose","seeTrainMode","seeTrainModeA","seeTrainModeD","heroes","h1","h2","navigate","heroIdsA","heroIdsD","currentTarget","menuItems","key","MenuItem","isPackHasBoss","renderHeroPack","id","Tooltip","title","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","renderMenuItems","wra","ca","wrd","cd","HeroCounterHeroGrid","prob","addedHeroes","removedHeroes","HeroCounterPackGrid","heroPackFull","Stack","direction","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","testqid","newQ","position","testQId","marginBottom","borderRadius","Button","isCloseDisabled","hidden","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","selectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","variant","emptyMap","marginTop","maxWidth","disabled","renderA","renderB","renderSendButton","HeroOneFightMode","setMode","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","fontSize","fontWeight","marginLeft","marginRight","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","extText","formatParameter","typ","showCloseButton","name","goodName","multiplier","unit","prec","toString","replace","HeroRouletteMode","HeroFAQ","padding","HeroBestPackMode","heroFilterInclude","heroFilterExclude","onHeroGridClick","handleDeleteFilterChip","renderFilterBar","updateHeroes","gMode","constructHeroFilterNew","heroUniqMap","shd","bp","packs","split","pack1","pack2","translateHeroIdsArray","o2","trim","avgwinrate","avglossrate","cntfightsa","cntfightsd","newHeroFilterInclude","newHeroFilterExclude","includeIndex","excludeIndex","filterType","parentNode","filtertype","filterheroid","onDelete","deleteIcon","HeroModeSelect","rouletteSubMode","oneFightSubMode","navigateToTopFunction","SelectedHeroPack","hId","onHeroSelect","navigator","clipboard","writeText","cwr","cc","renderHeroIcons","copyLink","HeroModernGrid","selectedHeroes","highlightedHeroes","HeaderBlock","openMenuFunction","message","ModernSlider","useState","initial","minFights","setMinFights","marks","min","max","Slider","getAriaLabel","callback","getAriaValueText","track","step","valueLabelDisplay","disableSwap","CounterPackFilterModal","modalOpen","setModalOpen","memoArray","setHeroFilterInclude","setHeroFilterExclude","handleModalClose","Modal","filterMaxWinRate","filterMinWinRate","minWinRate","filterMaxFights","filterMinFights","constructHeroFilter","CounterPackResults","pMinFights","params","pHeroFilterInclude","pHeroFilterExclude","pMinWinRate","setMinWinRate","heroPacks","setHeroPacks","setRequestsInProgress","setTotalFound","setFilterMinWinRate","setFilterMaxWinRate","setFilterMinFights","setFilterMaxFights","filterOpened","setFilterOpened","isInitialized","setIsInitialized","isUpdateOccurred","setIsUpdateOccurred","setMemoArray","updateHeroPackInfo","pHeroPack","changeHeaderMessageFunction","nTotalFound","nFilterMinWinRate","nFilterMaxWinRate","nFilterMinFights","nFilterMaxFights","minwr","maxwr","minc","maxc","tc","wa","wd","Math","floor","onFilterClick","useEffect","newMemoArray","messages","CounterPackScreen","useParams","useMatch","useNavigate","useLocation","headerMessage","setHeaderMessage","templateHeroPack","getEmptyHeroPack","queryParams","URLSearchParams","search","heroAvailable","setHeroAvailable","newHeroPack","updateAvailableHeroes","newMessage","mainUrl","TestComponent","changeMinFights","renderSliderText","changeValue","activeThumb","MainScreen","navMenuIndex","navMenuOpened","changeMenu","toggleMenu","event","newValue","flexGrow","width","height","overflowX","Slide","in","Tabs","orientation","borderRight","borderColor","Tab","role","path","element","to","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c11153.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nimport {IHeroPack} from \"./IHeroPack\";\r\n\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder: number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result: Map<number, Hero> = new Map<number, Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId = ~~x\r\n        if (heroId >= 1 && heroId < 599) {\r\n            const heroData: any = HStorage.heroDescStorage[x]\r\n            const heroName=HStorage.localeStorage[\"LIB_HERO_NAME_\" + heroId]\r\n            const heroRec={\r\n                heroId: heroId,\r\n                heroName: heroName,\r\n                battleOrder: heroData.battleOrder\r\n            }\r\n            result.set(heroId, heroRec)\r\n            HeroData.heroIdsOrderedByName.push(heroId)\r\n            HeroData.allHeroesIds.push(heroId)\r\n            HeroData.zeroHeroProbMap.set(heroId,0)\r\n            HeroData.heroNameRecognitionMap.set(heroName,heroId)\r\n        }\r\n        HeroData.heroIdsOrderedByName.sort((a,b)=> {\r\n            return (result.get(a)?.heroName || \"\")>(result.get(b)?.heroName || \"\")?1:-1\r\n        })\r\n    }\r\n    return result\r\n}\r\n\r\nfunction initBossList() {\r\n    const result = new Map<number,Hero>()\r\n    result.set(8010,{heroId:8010,heroName:\"Огонь\",battleOrder:0})\r\n    result.set(8011,{heroId:8011,heroName:\"Вода\",battleOrder:0})\r\n    result.set(8012,{heroId:8012,heroName:\"Земля\",battleOrder:0})\r\n    result.set(8013,{heroId:8013,heroName:\"Ветер\",battleOrder:0})\r\n    result.set(8014,{heroId:8014,heroName:\"Свет\",battleOrder:0})\r\n    result.set(8015,{heroId:8015,heroName:\"Тьма\",battleOrder:0})\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\n    static constructHeroFilterNew(pHeroFilter: number[]) {\r\n        let result = \"%\"\r\n        pHeroFilter.sort((a,b) => {\r\n            return a-b\r\n        })\r\n        for (let i = 0; i < pHeroFilter.length; i++) {\r\n            result += ':' + pHeroFilter[i] + ':%'\r\n        }\r\n        console.log('HFE',result)\r\n        return escape(result)\r\n    }\r\n    static translateHeroIdsArray(x:number[] | string[]) {\r\n        let result=\"\"\r\n        if (x && Array.isArray(x)) {\r\n            x.sort((a,b) => {\r\n                return (HeroData.getHeroById(~~a)?.battleOrder || 1000)-(HeroData.getHeroById(~~b)?.battleOrder || 1000)\r\n            })\r\n            for(let i=0;i<5 && i<x.length;i++) {\r\n                const hero=HeroData.getHeroById(~~x[i])\r\n                if (hero) {\r\n                    result+=hero.heroName\r\n                }\r\n                if (i!=4) result+=\",\"\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    static isPackHasBoss(a:number[]) {\r\n        let r=false\r\n        if (a) {\r\n            for( const x of a) {\r\n                r = r || (x>=8010 && x<=8015)\r\n            }\r\n        }\r\n        return r\r\n    }\r\n    static emptyHeroProbMap=new Map<number,number>()\r\n    static heroNameRecognitionMap=new Map<string,number>()\r\n    static zeroHeroProbMap=new Map<number,number>()\r\n    static emptyHeroPack: IHeroPack = {hIds: [], extendedInfo: {statusInfo: \"\"}}\r\n    static getEmptyHeroPack(): IHeroPack {\r\n        return {\r\n            hIds: [],\r\n            extendedInfo: {statusInfo: \"\"}\r\n        }\r\n    }\r\n    static heroIdsOrderedByName:number[] = []\r\n    static padLeadingZeros(num: number, size: number) {\r\n        let s = num + \"\";\r\n        while (s.length < size) s = \"0\" + s;\r\n        return s;\r\n    }\r\n\r\n    static getHeroById(heroId: number) {\r\n        return HeroData.heroesList.get(heroId) || HeroData.bossList.get(heroId)\r\n    }\r\n\r\n    static compareArrays(a1: any[], a2: any[]) {\r\n        var i = a1.length;\r\n        if (i !== a2.length) return false;\r\n        while (i--) {\r\n            if (a1[i] !== a2[i]) return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    static emptyHero: Hero = {heroId: 0, heroName: \"пусто\", battleOrder: 0}\r\n    static allHeroesIds: number[] = []\r\n    static heroesList: Map<number, Hero> = initHeroesList()\r\n    static bossList: Map<number,Hero> = initBossList()\r\n    static z = new Map([\r\n        [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n        [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n        [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n        [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n        [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n        [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n        [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n        [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n        [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n        [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n        [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n        [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n        [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n        [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n        [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n        [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n        [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n        [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n        [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n        [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n        [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n        [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n        [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n        [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n        [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n        [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n        [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n        [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n        [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n        [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n        [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n        [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n        [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n        [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n        [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n        [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n        [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n        [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n        [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n        [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n        [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n        [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n        [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n        [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n        [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n        [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n        [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n        [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n        [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n        [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n        [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n        [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n        [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n        [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n    ]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        } else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        } else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n        this.renderForPackEmptySelected()\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box className={\"heroIconGridEmpty\"} sx={{\r\n                /*maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',*/\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n               /* fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,*/\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>пусто</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import {IHeroPack} from \"./IHeroPack\";\r\nimport {HeroModeSelect,HeroCounterPackMode} from \"../components\";\r\nimport HeroRouletteDefendersMode from \"../components/heroRouletteDefendersMode\";\r\nimport HeroRouletteAttackersQueueMode from \"../components/heroRouletteAttackersQueueMode\";\r\nimport HeroAddAttackerMode from \"../components/heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"../components/heroAddDefenderMode\";\r\nimport HeroRouletteMode from \"../components/heroRouletteMode\";\r\nimport HeroOneFightMode from \"../components/heroOneFightMode\";\r\nimport HeroAddToTrainMode from \"../components/heroAddToTrainMode\";\r\n\r\nexport class MyNavigator {\r\n    static heroModeSelect?:HeroModeSelect\r\n    static heroCounterPackMode?:HeroCounterPackMode\r\n    static heroRouletteDefendersMode?:HeroRouletteDefendersMode\r\n    static heroRouletteAttackersQueueMode?:HeroRouletteAttackersQueueMode\r\n    static heroAddAttackerMode?:HeroAddAttackerMode\r\n    static heroAddDefenderMode?:HeroAddDefenderMode\r\n    static heroRouletteMode?:HeroRouletteMode\r\n    static heroOneFightMode?:HeroOneFightMode\r\n    static heroAddToTrainMode?:HeroAddToTrainMode\r\n    static currentPack:IHeroPack = {hIds:[]}\r\n    static currentDefenderPack:IHeroPack = {hIds:[]}\r\n    static disableClose = window.location.href.indexOf(\"zzzz\")<0\r\n    static isCloseDisabled() {\r\n        return window.location.href.indexOf(\"zzzz\")<0\r\n    }\r\n    static navigate(mode:string,currentPack?:IHeroPack,currentDefenderPack?:IHeroPack) {\r\n        if (currentPack) {\r\n            MyNavigator.setCurrentPack(currentPack)\r\n        }\r\n        if (currentDefenderPack) {\r\n            MyNavigator.setDefenderPack(currentDefenderPack)\r\n        }\r\n        switch (mode) {\r\n            case \"RouletteAttackQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,0)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(0)\r\n                }\r\n                if (MyNavigator.heroAddAttackerMode && currentPack) {\r\n                    MyNavigator.heroAddAttackerMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"RouletteDefenderQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,2)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(2)\r\n                }\r\n                if (MyNavigator.heroAddDefenderMode && currentPack) {\r\n                    MyNavigator.heroAddDefenderMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"CounterPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(0)\r\n                }\r\n                if (MyNavigator.heroCounterPackMode && currentPack) {\r\n                    MyNavigator.heroCounterPackMode.updateHeroIds(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"OneFightPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(2,undefined,1)\r\n                }\r\n                if (MyNavigator.heroOneFightMode) {\r\n                    MyNavigator.heroOneFightMode.navigateToMode(1)\r\n                }\r\n                if (MyNavigator.heroAddToTrainMode) {\r\n                    if (currentPack) {\r\n                        MyNavigator.heroAddToTrainMode.setAttackHeroPack(currentPack)\r\n                    }\r\n                    if (currentDefenderPack) {\r\n                        MyNavigator.heroAddToTrainMode.setDefenderHeroPack(currentDefenderPack)\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static setCurrentPack(currentPack:IHeroPack) {\r\n        MyNavigator.currentPack=currentPack\r\n    }\r\n    static setDefenderPack(currentDefenderPack:IHeroPack) {\r\n        MyNavigator.currentDefenderPack=currentDefenderPack\r\n    }\r\n}","export class MySettings {\r\n    static mainVersion=1\r\n    static apiUrl=\"https://g92e0914be8be53-db202112141238.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat2/hws/\"\r\n}","import React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    heroLostProbs: Map<number, number>,\r\n    heroCounterProbs: Map<number, number>,\r\n    heroAttackerProbs: Map<number, number>,\r\n    heroLostPacks: IHeroPack[],\r\n    heroWinPacks: IHeroPack[],\r\n    heroWinProbs: Map<number,number>\r\n    heroCounterFilter: number[],\r\n    heroAttackerFilter: number[],\r\n    requestsInProgress: number,\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds,\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            heroWinPacks: [],\r\n            heroAttackerFilter: [],\r\n            requestsInProgress: 0,\r\n            heroLostProbs: new Map<number,number>(),\r\n            heroWinProbs: new Map<number,number>(),\r\n            heroCounterProbs: new Map<number,number>(),\r\n            heroAttackerProbs: new Map<number,number>(),\r\n            currentMode: props.currentMode\r\n        };\r\n        this.requestsInProgress=0\r\n        this.currentMode=props.currentMode\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n        this.filterAttackerHero = this.filterAttackerHero.bind(this)\r\n        this.selectMode=this.selectMode.bind(this)\r\n        this.updateHeroIds(this.state.heroIds)\r\n        MyNavigator.heroCounterPackMode=this\r\n        //console.log('created heroCounterPackMode',this.state.heroIds)\r\n    }\r\n    currentMode: number\r\n    requestsInProgress: number\r\n    initialized: boolean = false\r\n    requestSeq=0\r\n\r\n\r\n    getPacksData(heroIds:IHeroPack,currentMode:number) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=MySettings.apiUrl\r\n        if (currentMode===0) {\r\n            url+=\"findLostPackHeroes/\"\r\n        } else {\r\n            url+=\"findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs = new Map<number, number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = []\r\n                            if (currentMode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n\r\n                            }\r\n                            cnt++\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:\"win_rate=\"+(Number.parseFloat(z.r)*100).toFixed(1)+\"% won_fights=\"+z.w+\" total_fights=\"+z.t }})\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                        if (currentMode===0) {\r\n                            //console.log('ULP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                            )\r\n                        } else {\r\n                            //console.log('UWP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroAttackerProbs: heroProbs, heroWinPacks: heroLostPacks}\r\n                            )\r\n                        }\r\n                    }\r\n                }).finally(()=>{\r\n                    this.requestsInProgress--\r\n                    this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: IHeroPack) {\r\n        const currentMode=this.currentMode\r\n        this.initialized=true\r\n        const requestId=this.requestSeq++\r\n            this.setState(\r\n                {heroIds: heroIds, heroLostProbs: new Map<number, number>(), heroLostPacks: [], heroWinProbs: new Map<number, number>(), heroWinPacks: [],heroCounterProbs:new Map<number, number>(),heroAttackerProbs:new Map<number,number>()}\r\n            )\r\n        if (heroIds.hIds.length == 5) {\r\n            this.getPacksData(heroIds,0)\r\n            this.getPacksData(heroIds,1)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n            //console.log('RIP+1',requestId,this.state.requestsInProgress)\r\n            this.requestsInProgress++\r\n            let url=MySettings.apiUrl+\"findLostPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,0)\r\n                            let heroProbs = new Map<number, number>()\r\n                            if (result['items']) {\r\n                                for (const j in result['items']) {\r\n                                    if (result['items'][j]['d']) {\r\n                                        heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                    }\r\n                                }\r\n                            }\r\n                this.setState({\r\n                    heroLostProbs: heroProbs,\r\n                    heroIds: heroIds,\r\n                    heroLostPacks: []\r\n                });\r\n                            //console.log('XXX2 nulled heroLostPacks:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                            this.setState({\r\n                                heroLostProbs: new Map<number, number>(),\r\n                                heroIds: heroIds,\r\n                                heroLostPacks: []\r\n                            });\r\n                    }\r\n                ).finally(()=>{\r\n                    //console.log('ReqFin0 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n            this.requestsInProgress++\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n            url=MySettings.apiUrl+\"/findWinPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,1)\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroWinProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: []\r\n                        });\r\n                        //console.log('XXX2 nulled win lost packs:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                        this.setState({\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: [],\r\n                            heroWinProbs: new Map<number, number>()\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                //console.log('ReqFin1 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCounterHero(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            }\r\n        }\r\n    }\r\n\r\n    filterAttackerHero(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroAttackerFilter = this.state.heroAttackerFilter\r\n            const index = heroAttackerFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroAttackerFilter.splice(index, 1);\r\n            } else {\r\n                heroAttackerFilter.push(heroId)\r\n            }\r\n            this.setState({heroAttackerFilter: heroAttackerFilter})\r\n        }\r\n    }\r\n\r\n    selectHero(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroPack = this.state.heroIds\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    this.updateHeroIds(heroPack)\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                this.updateHeroIds(heroPack)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMode(e:any,value:string) {\r\n        const newMode=~~value\r\n        this.currentMode=newMode\r\n        //console.log('Set mode ',newMode)\r\n        this.setState({currentMode:newMode})\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentMode=this.state.currentMode\r\n        //console.log('RENDER CPM',currentMode,this.state.heroIds)\r\n            if (this.state.heroIds.hIds.length == 5) {\r\n               /* if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                //console.log('RE',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Выбранный пак\":\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroPackSelected heroPack={this.state.heroIds} deselectHero={this.selectHero} key={this.state.heroIds.hIds.join(\",\")}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(currentMode===0?\"Кто из героев побеждает твой пак - можешь здесь отфильтровать\":\"Кто из героев проиграл твоему паку - можешь здесь отфильтровать\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={currentMode===0?this.state.heroCounterProbs:this.state.heroAttackerProbs}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={10+currentMode}\r\n\r\n                        />\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.state.currentMode===0?\"Контр-паки\":\"Кто проиграл твоему паку\"):\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={20+currentMode}\r\n                                             mainHeroPack={this.state.heroIds} mainHeroPackType={currentMode===0?'d':'a'} emptyMessage={\"Не переживай. Этот пак еще не победил в \"+(currentMode===0?\"защите. Попробуй добавить его в защищающиеся в режиме рулетки, и если он победит, то тут появится результат.\":\"атаке. Попробуй добавить его в атакующие в режиме рулетки, и если он победит, то тут появится результат.\")}\r\n                        />\r\n                    </Container>\r\n                )\r\n            } else {\r\n                //console.log('RE2',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                /*if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                return (\r\n\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+this.currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <HeroPackSelected heroPack={this.state.heroIds} deselectHero={this.selectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.currentMode===0?\"Выбрать защитный пак\":\"Выбрать атакующий пак\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid showAll={true} heroIds={this.state.heroIds} heroProbs={this.currentMode===0?this.state.heroLostProbs:this.state.heroWinProbs}\r\n                                      selectHero={this.selectHero} key={30+this.currentMode}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport DoDisturbOnOutlinedIcon from '@mui/icons-material/DoDisturbOnOutlined';\r\n\r\ninterface IProps {\r\n    heroId: number,\r\n    heroProb: number,\r\n    onClick: any,\r\n    additionalClasses: string[],\r\n    isAdded?: boolean,\r\n    isRemoved?: boolean,\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroModernIcon extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick=this.onClick.bind(this)\r\n    }\r\n    onClick(e:any) {\r\n        if (e?.target?.dataset?.heroid > 0) {\r\n            this.props.onClick(~~e.target.dataset.heroid)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let hero = HeroData.getHeroById(this.props.heroId)\r\n        //hero = HeroData.getHeroById(19);\r\n        const heroProb=this.props.heroProb||0\r\n        if (!hero) {\r\n            hero = HeroData.emptyHero\r\n        }\r\n        let boxClassName = \"heroModernIcon \"+this.props.additionalClasses.join(\" \")\r\n        return (\r\n            <Box className={boxClassName} data-heroid={hero.heroId} onClick={this.onClick} >\r\n                {this.props.isAdded !==undefined && this.props.isAdded && (<span className={\"someHeroIcon\"}><AddCircleOutlineRoundedIcon/></span>)}\r\n                {this.props.isRemoved !==undefined && this.props.isRemoved && (<span className={\"someHeroIcon\"}><DoDisturbOnOutlinedIcon/></span>)}\r\n                <span className={\"heroModernIconName\"}>{hero.heroName + (hero.heroId>0?\"(\"+hero.heroId+\")\":\"\")}</span>\r\n                <span className={\"heroModernIconProb\"}>{heroProb > 0 ? heroProb.toFixed(2) + \"%\" : \"\"}</span>\r\n                <img  alt={\"\"}\r\n                     src={\"hero/\" + HeroData.padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeroModernIcon} from \"../components2/HeroModernIcon\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>,\r\n    showAll: boolean\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (this.props.showAll || heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb,heroName:value.heroName})\r\n            }\r\n        }\r\n\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0,heroName:value.heroName})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return a.heroName>b.heroName?1:-1\r\n        })\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            //items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.hIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n            const additionalClasses=[\"heroIconSmall\"]\r\n            if (this.state.heroIds.hIds.includes(x.heroId)) {additionalClasses.push(\"mySelected\")}\r\n            items.push(<HeroModernIcon heroId={x.heroId} additionalClasses={additionalClasses} onClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} className={\"heroGrid\"} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Box, Button, Grid, Menu, MenuItem, Stack, Table, TableBody, Tooltip} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {HeroModernIcon} from \"../components2/HeroModernIcon\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport LinkIcon from \"@mui/icons-material/Link\";\r\n\r\ninterface IProps {\r\n    heroPack: IHeroPack,\r\n    heroIdsA?: IHeroPack,\r\n    heroIdsD?: IHeroPack,\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    //heroIds: IHeroPack,\r\n    anchorEl: any,\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            //heroIds: props.heroIds,\r\n            anchorEl: null,\r\n        };\r\n        this.addToAttackQueue=this.addToAttackQueue.bind(this)\r\n        this.addToDefenderQueue=this.addToDefenderQueue.bind(this)\r\n        this.seeCounterPacks=this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick=this.handleMenuClick.bind(this)\r\n        this.handleMenuClose=this.handleMenuClose.bind(this)\r\n        this.seeTrainMode=this.seeTrainMode.bind(this)\r\n        this.seeTrainModeA=this.seeTrainModeA.bind(this)\r\n        this.seeTrainModeD=this.seeTrainModeD.bind(this)\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.props.heroPack.hIds.length\r\n        const heroes = this.props.heroPack.hIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n                //result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n                result.push((<HeroModernIcon heroId={heroes[i]} additionalClasses={[]} onClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n        }\r\n        return (result)\r\n    }\r\n\r\n    addToAttackQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteAttackQueue\",this.props.heroPack)\r\n    }\r\n    addToDefenderQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteDefenderQueue\",this.props.heroPack)\r\n    }\r\n\r\n    seeCounterPacks(e:any) {\r\n        MyNavigator.navigate(\"CounterPack\",this.props.heroPack)\r\n    }\r\n\r\n    seeTrainMode(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIdsA,this.props.heroIdsD)\r\n    }\r\n    seeTrainModeA(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroPack,undefined)\r\n    }\r\n    seeTrainModeD(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\", undefined,this.props.heroIdsD)\r\n    }\r\n\r\n    handleMenuClick(e:any) {\r\n        this.setState({anchorEl:e.currentTarget})\r\n    }\r\n    handleMenuClose(e:any) {\r\n        this.setState({anchorEl:null})\r\n    }\r\n    renderMenuItems() {\r\n        const menuItems:JSX.Element[]=[]\r\n        let key=0\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeCounterPacks}>Посмотреть кто побеждает</MenuItem>)\r\n        if (!HeroData.isPackHasBoss(this.props.heroPack.hIds)) {\r\n            menuItems.push(<MenuItem key={key++} onClick={this.addToAttackQueue}>Добавить в атакующие в\r\n                рулетку</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.addToDefenderQueue}>Добавить в защищающиеся в\r\n                рулетку</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeA}>Добавить в атакующие в Одну\r\n                битву</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeD}>Добавить в защищающиеся в Одну\r\n                битву</MenuItem>)\r\n            if (this.props.heroIdsA !== undefined && this.props.heroIdsD !== undefined) menuItems.push(<MenuItem\r\n                key={key++} onClick={this.seeTrainMode}>Add to Train both packs</MenuItem>)\r\n        }\r\n        return menuItems\r\n    }\r\n\r\n    render() {\r\n        const additionalClasses = \"selectedHeroPack \"\r\n        return (\r\n            <Box className={additionalClasses} sx={{\r\n                bgcolor: 'primary.light'\r\n            }}>\r\n                <Box className={\"selectedHeroPackIcons\"}>\r\n            {this.renderHeroPack()}\r\n                    <Box className={\"linkVerticalBar\"}>\r\n                        <Box id=\"demo-positioned-button\"\r\n                             aria-controls=\"demo-positioned-menu\"\r\n                             aria-haspopup=\"true\"\r\n                             aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                             onClick={this.handleMenuClick}><Tooltip title={\"Дополнительная информация\"}><MoreVertIcon/></Tooltip></Box>\r\n                    </Box>\r\n                </Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {this.renderMenuItems()}\r\n                </Menu>\r\n\r\n                <Box className={\"selectedHeroPackExtended\"}>\r\n                    <span>Всего:</span>\r\n                    <Tooltip title={\"Всего % побед в атаке\"}><span><img\r\n                        src={\"./trophy_a_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wra === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.wra?.toFixed(1)) + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего побед в атаке\"}><span><img\r\n                        src={\"./attack_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.ca === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.ca}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего % побед в защите\"}><span><img\r\n                        src={\"./trophy_d_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wrd === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.wrd?.toFixed(1)) + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего побед в защите\"}><span><img\r\n                        src={\"./shield_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.cd === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.cd}</span></span></Tooltip>\r\n                </Box>\r\n                <pre className={\"heroPackSelectedExtStatus\"}>{this.props.heroPack.extendedInfo?.statusInfo?this.props.heroPack.extendedInfo.statusInfo:\"\"}</pre>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<Box\r\n                    id=\"demo-positioned-button\"\r\n                    aria-controls=\"demo-positioned-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                    onClick={this.handleMenuClick}\r\n                    className={\"heroButtonThreeDots\"}\r\n                >\r\n                    &#10247;\r\n                </Box>\r\n */\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernIcon} from \"../components2/HeroModernIcon\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs: Map<number, number>,\r\n    heroCounterFilter?: number[],\r\n    addedHeroes?: number[],\r\n    removedHeroes?: number[],\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        //if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x) || -1\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob,heroName:hero.heroName})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return a.heroName>b.heroName?1:-1\r\n            })\r\n            for (const x of heroArray) {\r\n               /* items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)*/\r\n                const additionalClasses=[\"heroIconSmall\"]\r\n                if (this.props.heroCounterFilter && this.props.heroCounterFilter?.indexOf(x.hero.heroId) > -1) {additionalClasses.push(\"mySelected\")}\r\n                items.push(<HeroModernIcon heroId={x.hero.heroId}\r\n                                           additionalClasses={additionalClasses}\r\n                                     onClick={this.props.onFilterCounterHero} heroProb={x.prob} isAdded={this.props.addedHeroes?.includes(x.hero.heroId)} isRemoved={this.props.removedHeroes?.includes(x.hero.heroId)} key={x.hero.heroId}/>)\r\n            }\r\n       // }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Box className={\"heroCounterHeroGrid\"} sx={{\r\n\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon,HeroPackSelected} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    mainHeroPack?: IHeroPack,\r\n    mainHeroPackType?: string,\r\n    heroLostPacks: IHeroPack[],\r\n    emptyMessage: string,\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const j in this.props.heroLostPacks) {\r\n\r\n            const heroPackFull=this.props.heroLostPacks[j]\r\n            const heroPack=heroPackFull.hIds\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n                items.push(<HeroPackSelected  key={heroPack.join(',')+this.props.mainHeroPack?.hIds?.join(',')+this.props.mainHeroPackType} heroPack={heroPackFull} heroIdsA={this.props.mainHeroPack?(this.props.mainHeroPackType==='a'?this.props.mainHeroPack:heroPackFull):undefined } heroIdsD={this.props.mainHeroPack?(this.props.mainHeroPackType==='d'?this.props.mainHeroPack:heroPackFull):undefined } deselectHero={this.props.onFilterCounterHero}/>)\r\n        }\r\n        if (items.length===0) {\r\n            items.push(\r\n                <Stack direction=\"row\" key={cnt++} sx={{\r\n                    bgcolor: 'primary.light',\r\n                    m:0.25\r\n                }}>{this.props.emptyMessage}</Stack>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Stack className={\"heroPackStack\"} sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark',\r\n\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport { MySettings } from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(MySettings.apiUrl+\"queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},heroIdsD:{hIds:heroIdsD},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                marginBottom: '3px',\r\n                borderRadius: '10px',\r\n            }}key={i}>\r\n                <Box><HeroPackSelected heroPack={x.heroIdsA} deselectHero={()=>{}}/>\r\n                </Box>\r\n                <Box className={\"heroQueueTwoVSBox\"}><span className={\"heroQueueTwoVSPosition\"}>{x.position}</span><span className={\"heroQueueTwoVSVS\"}>VS</span></Box>\r\n                <Box><HeroPackSelected heroPack={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Button className={\"closeButton\"} sx={{\r\n                    display: MyNavigator.isCloseDisabled()?'none':'inline-flex'\r\n                }} hidden={MyNavigator.isCloseDisabled()} data-testqid={x.testQId}><img data-testqid={x.testQId} onClick={this.removeIcon} className={\"closeIcon\"} alt=\"Close\"  src={\"close_icon.png\"}/></Button>\r\n            </Box>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box className={\"heroQueueTwoBox\"}>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            heroIdsD: props.heroIdsD,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            displayEditD: props.heroIdsD.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        console.log('HeroAddToTrainMode created',this.state.heroIdsA,this.state.heroIdsD)\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setAttackHeroPack=this.setAttackHeroPack.bind(this)\r\n        this.setDefenderHeroPack=this.setDefenderHeroPack.bind(this)\r\n        MyNavigator.heroAddToTrainMode=this\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setAttackHeroPack(currentPack: IHeroPack) {\r\n        this.setState({heroIdsA:currentPack})\r\n    }\r\n\r\n    setDefenderHeroPack(currentDefenderPack: IHeroPack) {\r\n        this.setState({heroIdsD:currentDefenderPack})\r\n    }\r\n\r\n    selectHeroA(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroPack = this.state.heroIdsA\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    this.setState({heroIdsA:heroPack })\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroPack })\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroPack = this.state.heroIdsD\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    this.setState({heroIdsD:heroPack })\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                this.setState({heroIdsD:heroPack })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                    <HeroPackSelected heroPack={this.state.heroIdsA} deselectHero={this.selectHeroA}/>\r\n                    {this.state.heroIdsA.hIds.length>0?\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                    <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                    <HeroPackSelected heroPack={this.state.heroIdsA}  deselectHero={this.selectHeroA}/>\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroPack={this.state.heroIdsD} deselectHero={this.selectHeroD}/>\r\n                    {this.state.heroIdsD.hIds.length>0?\r\n                        <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroPack={this.state.heroIdsD} deselectHero={this.selectHeroD}/>\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && this.state.heroIdsD.hIds.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('RHATTM',this.state.heroIdsA,this.state.heroIdsD)\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateToTopFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n\r\n        MyNavigator.heroOneFightMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        console.log('heroOneFightMode-renderMode',MyNavigator.currentPack,MyNavigator.currentDefenderPack)\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={MyNavigator.currentPack} heroIdsD={MyNavigator.currentDefenderPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Добавить в очередь бой из 2х паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Очередь боев в обработке сервером</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\nimport {HeroData} from \"../types\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddAttackerMode=this\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroPack = this.state.heroIdsA\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    this.setState({heroIdsA:heroPack })\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroPack })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                <HeroPackSelected heroPack={this.state.heroIdsA} deselectHero={this.selectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip\r\n                    label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                <HeroPackSelected heroPack={this.state.heroIdsA} deselectHero={this.selectHeroA}/>\r\n                <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\nimport {HeroData} from \"../types\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddDefenderMode=this\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    selectHeroA(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroPack = this.state.heroIdsA\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    this.setState({heroIdsA:heroPack })\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroPack })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroPack={this.state.heroIdsA} deselectHero={this.selectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroPack={this.state.heroIdsA} deselectHero={this.selectHeroA}/>\r\n                <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteAttackersQueueMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(MySettings.apiUrl+\"queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroPack={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box hidden={MyNavigator.isCloseDisabled()}><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteDefendersMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(MySettings.apiUrl+\"queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    static formatParameter(x:any,name:string,goodName:string,multiplier:number,unit:string,prec:number) {\r\n        return x[name] && x[name]!==null && x[name]!==\"null\"?\"\"+goodName+\"=\"+(x[name]*multiplier).toFixed(prec).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")+unit+\"\\r\\n\":\"\"\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        let extText=\"\"\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsd\",\"Всего_боев_в_роли_защищаегося\",1,\"\",0)\r\n\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}},testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>пусто</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroPack={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton && !MyNavigator.isCloseDisabled()?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Очередь атаки добавленная пользователями. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в атаке. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в защите. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Паки от админа. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n        MyNavigator.heroRouletteMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                    className={\"heroMainMenuButtons\"}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Добавить в атакующие паки</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Список атакующих паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Добавить в защищающиеся паки</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Список защищающихся</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroFAQ extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render() {\r\n        return (<Box sx={{\r\n            padding: '1em 1em 1em 1em'\r\n        }}>\r\n            <h3>1. Что это за сервис?</h3>\r\n            <p>\r\n                Статистика боёв на полной прокачке в мобильной версии Хроник Хаоса. Здесь можно не просто тестировать пачки, а даже тестировать их против Легендарной Гидры(new!)\r\n            </p>\r\n            <h3>2. Как им пользоваться?</h3>\r\n            <p>\r\n                Вверху меню - нажимаешь, смотришь ;-)\r\n            </p>\r\n            <h3>3. Ну и что там в меню \"Найти кто или кого побеждает пак\"?</h3>\r\n            <p>\r\n                Есть два режима - \"Кто побеждает твой пак\" и \"Кого побеждает твой пак\". Если нужно объяснять смысл этих названий, то сочувствую твоим друзьям и родителям и искренне тебе завидую.<br/>\r\n                В этом режиме ты выбираешь из героев ниже пак. Список героев составлен только из тех, по кому есть статистика с победой в бою.<br/>\r\n                Если твоего пака здесь нет - попробуй победить в защите или нападении в режимах \"Одна битва\" или \"Рулетка\".\r\n            </p>\r\n            <h3>4. А что в меню \"Одна битва\"?</h3>\r\n            <p>\r\n                Здесь выбираешь атакующий пак, защищающийся пак и отправляешь на обработку бой. Твой бой добавится в очередь<br/>\r\n                Когда дайдет очередь до твоего боя (сервер бесплатный для тебя и не резиновый, делает по 3-5 боев в минуту)<br/>\r\n                Когда сервер обработает бой, он пропадет из очереди и его результаты попадут в статистику, а если атакующий пак победит, ты сможешь найти результаты по атакующему или защищающемуся паку в меню \"Найти кто или кого побеждает пак\"\r\n            </p>\r\n            <h3>5. А что в меню \"Рулетка\"?</h3>\r\n            <p>\r\n                Здесь есть набор паков (48+ шт.), которые защищаются (подменю \"Список защищающихся\"), включая головы Легендарной гидры<br/>\r\n                Ты можешь добавить свой пак в список защищающихся (подменю \"Добавить в защищающиеся паки\") или атакующих (\"Добавить в атакующие паки\")<br/>\r\n                Если сервер простаивает (нет команд, добавленных шаловливыми ручками как у тебя), то генерится рандомный пак и он пробует атаковать весь список защитных паков этой рулетки<br/>\r\n                Когда ты добавляешь свой пак в защищающиеся (подменю \"Добавить в защищающиеся паки\") в режиме рулетки, то он там висит только 6 часов (сервер нерезиновый, а таких как ты много)<br/>\r\n                Когда ты добавляешь свой пак в атакующие (\"Добавить в атакующие паки\"), то сервер бросает всё (да щас!ха-ха!) и стравливает твой атакующий пак с защищающимися паками из списка в подменю \"Список защищающихся\".<br/>\r\n            </p>\r\n            <h3>6. Как формируется список в подменю \"Список защищающихся\" из режима \"Рулетка\"?</h3>\r\n            <p>\r\n                Есть четыре группы:<br/>\r\n                1. Добавленные шаловливыми ручками такими как у тебя из меню (\"Добавить в защищающиеся паки\"). Они там держатся не больше 6 часов, потом умирают как и все живое<br/>\r\n                2. Топ 15 атакующих паков по статистике на этом сервере<br/>\r\n                3. Топ 15 защитных паков по статистике на этом сервере<br/>\r\n                4. Паки админа и головы Легендарной гидры. Аз есмь админ добавил сюда паки на свое усмотрение и не собираюсь их обсуждать<br/>\r\n            </p>\r\n            <h3>7. Как можно протестировать свою пачку против гидры?</h3>\r\n            <p>\r\n                Только если добавить ее в атакующие паки в режиме \"Рулетка\".\r\n            </p>\r\n            <h3>8. Где найти лучшие пачки?</h3>\r\n            <p>\r\n                <s>У нас в клубе!</s> В меню \"Топ паки\".\r\n            </p>\r\n            <h3>9. Имеет ли этот сервис какое-то отношение к Nexters?</h3>\r\n            <p>\r\n                Конечно же нет!\r\n            </p>\r\n            <h3>10. Как связаться с админом?</h3>\r\n            <p>\r\n                Пока только в комментариях под видео на моем канале (нажмите на значок Youtube вверху).\r\n            </p>\r\n        </Box>)\r\n    }\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterHeroGrid, HeroCounterPackGrid} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    heroFilterInclude: number[]\r\n    heroFilterExclude: number[]\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    heroFilterInclude: number[],\r\n    heroFilterExclude: number[],\r\n    requestsInProgress: number,\r\n    heroIds: IHeroPack[],\r\n    heroProbs: Map<number,number>\r\n}\r\n\r\nexport class HeroBestPackMode extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        const heroProbs=new Map<number,number>()\r\n        this.state={\r\n            currentMode: props.currentMode,\r\n            heroFilterInclude: props.heroFilterInclude,\r\n            heroFilterExclude: props.heroFilterExclude,\r\n            requestsInProgress: 0,\r\n            heroIds: [],\r\n            heroProbs: heroProbs\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.onHeroGridClick=this.onHeroGridClick.bind(this)\r\n        this.handleDeleteFilterChip=this.handleDeleteFilterChip.bind(this)\r\n        this.renderFilterBar=this.renderFilterBar.bind(this)\r\n        for (const x of HeroData.allHeroesIds) {\r\n            this.state.heroProbs.set(x,-1)\r\n        }\r\n        this.updateHeroes(props.heroFilterInclude,props.heroFilterExclude,props.currentMode,heroProbs)\r\n    }\r\n    requestSeq: number =0\r\n    requestsInProgress: number =0\r\n\r\n    updateHeroes(heroFilterInclude:number[],heroFilterExclude:number[],currentMode:number,heroProbs:Map<number,number>) {\r\n        const requestId=this.requestSeq++\r\n\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n\r\n        let gMode='a'\r\n        switch (currentMode) {\r\n            case 0: {gMode='a';break;}\r\n            case 1: {gMode='d';break;}\r\n            case 8010: {gMode='g8010';break;}\r\n            case 8011: {gMode='g8011';break;}\r\n            case 8012: {gMode='g8012';break;}\r\n            case 8013: {gMode='g8013';break;}\r\n            case 8014: {gMode='g8014';break;}\r\n            case 8015: {gMode='g8015';break;}\r\n        }\r\n        fetch(MySettings.apiUrl+\"topPacks2/\"+gMode+\"/\"+HeroData.constructHeroFilterNew(heroFilterInclude)+\"/10000%3A\"+escape(heroFilterExclude.join(\":\")) , {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        for (const x of Array.from(heroProbs.keys())) {\r\n                            heroProbs.set(x,-1)\r\n                        }\r\n                        const heroUniqMap=new Map<string,number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            //console.log('LPU '+lostPack.join(',')+\" wr=\"+(z['avgwinrate']*100).toFixed(1)+\" lr=\"+(z['avglossrate']*100).toFixed(1))\r\n\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m && m>=0) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n                            }\r\n                            cnt++\r\n                            let extText=\"\"\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumwinrate\",\"Рейтинг побед в роли атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avgwinrate\",\"Процент побед в роли атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntwinpacks\",\"Всего пачек защищалось от этого пака\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsa\",\"Выиграно боев в роли атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsa\",\"Всего боев в роли атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumlossrate\",\"Рейтинг побед в роли защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avglossrate\",\"Процент побед в роли защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntlosspacks\",\"Всего пачек атаковало этого пак\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsd\",\"Выиграно боев в роли защищаегося\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsd\",\"Всего боев в роли защищаегося\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h0d\",\"Урон гидре огня\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h1d\",\"Урон гидре тьмы\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h2d\",\"Урон гидре света\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h3d\",\"Урон гидре земли\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h4d\",\"Урон гидре воды\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h5d\",\"Урон гидре воздуха\",1/1000,\"k\",0)\r\n\r\n                            if (z.shd && z.bp) {\r\n                                const packs=z.bp.split(\":\")\r\n                                const pack1=packs[1]?.split(\"=\")\r\n                                const pack2=packs[2]?.split(\"=\")\r\n                                if (pack1) {\r\n                                    extText+=\"Оптимальные связки для этой гидры:\\r\\n\"\r\n                                    extText+=\"1) \"+HeroData.translateHeroIdsArray(lostPack)+\" урон \"+(~~z.o2/1000)?.toFixed(1).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")+\"k\\r\\n\"\r\n                                    extText+=\"2) \"+(pack1[0]?HeroData.translateHeroIdsArray(pack1[0]?.split(\",\"))+\" урон \"+(~~pack1[1]/1000)?.toFixed(1).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")+\"k\":\"???\")+\"\\r\\n\"\r\n                                    extText+=\"3) \"+(pack2 && pack2[0]?HeroData.translateHeroIdsArray(pack2[0]?.split(\",\"))+\" урон \"+(~~pack2[1]/1000)?.toFixed(1).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")+\"k\":\"???\")+\"\\r\\n\"\r\n                                    extText+=\"Общий урон этими связками: \"+((~~z.shd/1000)?.toFixed(1)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")+\"k\\r\\n\"\r\n                                }\r\n                            }\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            if (!heroUniqMap.get(lostPack.join(','))) {\r\n                                heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:extText.trim(),wra:z.avgwinrate*100,wrd:z.avglossrate*100,ca:z.cntfightsa,cd:z.cntfightsd}})\r\n                                heroUniqMap.set(lostPack.join(','),1)\r\n                            }\r\n\r\n                            //console.log('HLP',heroLostPacks)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                            this.setState(\r\n                                {heroIds: heroLostPacks, heroProbs: heroProbs}\r\n                            )\r\n\r\n                    }\r\n                }).finally(()=>{\r\n            this.requestsInProgress--\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    onHeroGridClick(heroId: number) {\r\n        //console.log('onHeroGridClick', heroId, heroFilterInclude, heroFilterExclude)\r\n        const newHeroFilterInclude = [...this.state.heroFilterInclude]\r\n        const newHeroFilterExclude = [...this.state.heroFilterExclude]\r\n        const includeIndex = newHeroFilterInclude.indexOf(heroId)\r\n        const excludeIndex = newHeroFilterExclude.indexOf(heroId)\r\n        if (includeIndex >= 0) {\r\n            newHeroFilterInclude.splice(includeIndex, 1)\r\n            this.setState({heroFilterInclude:newHeroFilterInclude})\r\n            if (excludeIndex < 0) {\r\n                newHeroFilterExclude.push(heroId)\r\n                this.setState({heroFilterExclude:newHeroFilterExclude})\r\n            }\r\n            this.updateHeroes(newHeroFilterInclude,newHeroFilterExclude, this.state.currentMode, this.state.heroProbs)\r\n        } else if (excludeIndex >= 0) {\r\n            newHeroFilterExclude.splice(excludeIndex, 1)\r\n            this.setState({heroFilterExclude:newHeroFilterExclude})\r\n            this.updateHeroes(newHeroFilterInclude,newHeroFilterExclude, this.state.currentMode, this.state.heroProbs)\r\n        } else {\r\n            if (newHeroFilterInclude.length < 5) {\r\n                newHeroFilterInclude.push(heroId)\r\n                this.setState({heroFilterInclude:newHeroFilterInclude})\r\n                this.updateHeroes(newHeroFilterInclude,newHeroFilterExclude, this.state.currentMode, this.state.heroProbs)\r\n            }\r\n        }\r\n    }\r\n    \r\n    /*filterHero(heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const heroesFilter = this.state.heroFilterInclude\r\n            const index = heroesFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroesFilter.splice(index, 1);\r\n                this.setState({heroFilterInclude: heroesFilter})\r\n                this.updateHeroes(heroesFilter, this.state.currentMode, this.state.heroProbs)\r\n            } else {\r\n                if (heroesFilter.length < 5) {\r\n                    heroesFilter.push(heroId)\r\n                    this.setState({heroFilterInclude: heroesFilter})\r\n                    this.updateHeroes(heroesFilter, this.state.currentMode, this.state.heroProbs)\r\n                }\r\n            }\r\n        }\r\n    }*/\r\n\r\n    handleDeleteFilterChip(e: any) {\r\n        let filterType = undefined\r\n        let heroId = undefined\r\n        if (e?.target?.parentNode?.parentNode?.dataset?.filtertype) {\r\n            filterType = e?.target?.parentNode?.parentNode?.dataset?.filtertype\r\n            heroId = ~~e?.target?.parentNode?.parentNode?.dataset?.filterheroid\r\n        } else if (e?.target?.parentNode?.dataset?.filtertype) {\r\n            filterType = e?.target?.parentNode?.dataset?.filtertype\r\n            heroId = ~~e?.target?.parentNode?.dataset?.filterheroid\r\n        }\r\n        if (filterType && heroId) {\r\n            switch (filterType) {\r\n                case \"include\": {\r\n                    const index = this.state.heroFilterInclude.indexOf(heroId)\r\n                    if (index >= 0) {\r\n                        const newHeroFilterInclude = [...this.state.heroFilterInclude]\r\n                        newHeroFilterInclude.splice(index, 1)\r\n                        this.setState({heroFilterInclude: newHeroFilterInclude})\r\n                        this.updateHeroes(newHeroFilterInclude,this.state.heroFilterExclude, this.state.currentMode, this.state.heroProbs)\r\n                    }\r\n                    break;\r\n                }\r\n                case \"exclude\": {\r\n                    const index = this.state.heroFilterExclude.indexOf(heroId)\r\n                    if (index >= 0) {\r\n                        const newHeroFilterExclude = [...this.state.heroFilterExclude]\r\n                        newHeroFilterExclude.splice(index, 1)\r\n                        this.setState({heroFilterExclude: newHeroFilterExclude})\r\n                        this.updateHeroes(this.state.heroFilterInclude,newHeroFilterExclude, this.state.currentMode, this.state.heroProbs)\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    renderFilterBar () {\r\n        const items = []\r\n        for (const x of this.state.heroFilterInclude) {\r\n            items.push(<Chip sx={{color: \"black !important;\"}}\r\n                data-filtertype={\"include\"}\r\n                data-filterheroid={x}\r\n                label={\"+\" + HeroData.getHeroById(x)?.heroName || \"\" + x}\r\n                onDelete={this.handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        for (const x of this.state.heroFilterExclude) {\r\n            items.push(<Chip sx={{color: \"black !important;\"}}\r\n                data-filtertype={\"exclude\"}\r\n                data-filterheroid={x}\r\n                label={\"-\" + HeroData.getHeroById(x)?.heroName || \"\" + x}\r\n                onDelete={this.handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n\r\n        return (<Box className={\"filterBar\"}>\r\n            {items}\r\n        </Box>)\r\n    }\r\n\r\n    setMode(e:any,value:string) {\r\n        const currentMode=~~value\r\n\r\n        this.setState({currentMode:currentMode,heroFilterInclude:[],heroFilterExclude:[]})\r\n        this.updateHeroes([],[],currentMode,this.state.heroProbs)\r\n    }\r\n\r\n    render() {\r\n        return (<Container sx={{\r\n            bgcolor: 'background.default',\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" color=\"primary\">Лучшие паки в атаке</ToggleButton>\r\n                <ToggleButton value=\"1\" color=\"primary\">Лучшие паки в защите</ToggleButton>\r\n                <ToggleButton value=\"8010\" color=\"primary\">Гидра Огня</ToggleButton>\r\n                <ToggleButton value=\"8011\" color=\"primary\">Гидра Воды</ToggleButton>\r\n                <ToggleButton value=\"8012\" color=\"primary\">Гидра Земли</ToggleButton>\r\n                <ToggleButton value=\"8013\" color=\"primary\">Гидра Ветра</ToggleButton>\r\n                <ToggleButton value=\"8014\" color=\"primary\">Гидра Света</ToggleButton>\r\n                <ToggleButton value=\"8015\" color=\"primary\">Гидра Тьмы</ToggleButton>\r\n            </ToggleButtonGroup>\r\n\r\n            <Divider />\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Фильтр по героям\":\"Идет загрузка...просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            {this.renderFilterBar()}\r\n            <HeroCounterHeroGrid heroProbs={this.state.heroProbs}\r\n                                 onFilterCounterHero={this.onHeroGridClick}\r\n                                 addedHeroes={this.state.heroFilterInclude} removedHeroes={this.state.heroFilterExclude} key={10+this.state.currentMode+this.requestSeq}/>\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Лучшие паки\":\"Идет загрузка...просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterPackGrid heroLostPacks={this.state.heroIds}\r\n                                 onFilterCounterHero={this.onHeroGridClick}\r\n                                 heroCounterFilter={[]} key={20+this.state.currentMode+this.requestSeq} emptyMessage={\"Не переживай. Этот пак не набрал 10 побед в \"+(this.state.currentMode===0?\"атаке\":\"защите\")+\". Попробуй добавить его в \"+(this.state.currentMode===0?\"атакующие\":\"защищающиеся\")+\" режиме рулетки, и если он победит, то тут появится результат.\"}/>\r\n        </Container>)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {HeroFAQ} from \"./heroFAQ\";\r\nimport {HeroBestPackMode} from \"./heroBestPackMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    rouletteSubMode: number,\r\n    oneFightSubMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode,\r\n            rouletteSubMode: 0,\r\n            oneFightSubMode: 1\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToTopMode=this.navigateToTopMode.bind(this)\r\n        MyNavigator.heroModeSelect=this\r\n    }\r\n    navigateToTopMode(newMode:number,rouletteSubMode?:number,oneFightSubMode?:number) {\r\n        if (rouletteSubMode) {\r\n            this.setState({currentMode: newMode, rouletteSubMode: rouletteSubMode})\r\n        } else if (oneFightSubMode) {\r\n            this.setState({currentMode: newMode, oneFightSubMode: oneFightSubMode})\r\n        } else {\r\n            this.setState({currentMode: newMode})\r\n        }\r\n    }\r\n    setMode(e:any,value:string) {\r\n        this.navigateToTopMode(~~value)\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={MyNavigator.currentPack} currentMode={0} key={MyNavigator.currentPack.hIds.join(',')}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateToTopFunction={this.navigateToTopMode} currentMode={this.state.oneFightSubMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToTopMode} currentMode={this.state.rouletteSubMode} key={10+this.state.rouletteSubMode}/>)\r\n        } else if (currentMode===4) {\r\n            return (<HeroFAQ/>)\r\n        }else if (currentMode===5) {\r\n            return (<HeroBestPackMode heroFilterInclude={[]} heroFilterExclude={[]} currentMode={0}/>)\r\n        }\r\n        else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <Box className={\"heroHeader\"}><a target={\"_blank\"} href={\"https://www.youtube.com/channel/UCY_SEAvMIveeRAE_xMtNBKQ\"}><img src={\"./youtube-subscribe.gif\"} /> <span>Нажми сюда для просмотра видео<br/> с боями на полной прокачке</span> </a></Box>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"4\" color=\"primary\">FAQ</ToggleButton>\r\n                <ToggleButton value=\"0\" color=\"primary\">Найти кто или кого побеждает пак</ToggleButton>\r\n                <ToggleButton value=\"2\" color=\"primary\">Одна битва</ToggleButton>\r\n                <ToggleButton value=\"3\" color=\"primary\">Рулетка</ToggleButton>\r\n                <ToggleButton value=\"5\" color=\"primary\">Топ паки</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect;","import React from \"react\";\r\nimport {Box, Menu, MenuItem, Tooltip} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeroModernIcon} from \"./HeroModernIcon\";\r\nimport {HeroData} from \"../types\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\ninterface IProps {\r\n    heroPack: IHeroPack,\r\n    heroProbs: Map<number, number>,\r\n    onHeroSelect: any,\r\n    selectedHeroes: number[],\r\n    additionalClasses: string[],\r\n    currentPack?: IHeroPack,\r\n    currentInAttack?: boolean\r\n}\r\n\r\ninterface IState {\r\n    anchorEl: any,\r\n}\r\n\r\nexport class SelectedHeroPack extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n        }\r\n\r\n        this.seeCounterPacks = this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick = this.handleMenuClick.bind(this)\r\n        this.handleMenuClose = this.handleMenuClose.bind(this)\r\n    }\r\n\r\n    renderHeroIcons() {\r\n        this.props.heroPack.hIds.sort((a, b) => {\r\n            return (HeroData.getHeroById(a)?.battleOrder || 0) - (HeroData.getHeroById(b)?.battleOrder || 0)\r\n        })\r\n        const items: any = []\r\n        for (let i = 0; i < 5; i++) {\r\n            const hId = this.props.heroPack.hIds[i]\r\n            items.push(<HeroModernIcon key={i} additionalClasses={[]} heroId={hId}\r\n                                       heroProb={this.props.heroProbs.get(hId) || 0}\r\n                                       onClick={this.props.onHeroSelect}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    copyLink() {\r\n        navigator.clipboard.writeText(\"this.state.textToCopy\")\r\n    }\r\n\r\n    seeCounterPacks(e: any) {\r\n\r\n    }\r\n\r\n    handleMenuClick(e: any) {\r\n        this.setState({anchorEl: e.currentTarget})\r\n    }\r\n\r\n    handleMenuClose(e: any) {\r\n        this.setState({anchorEl: null})\r\n    }\r\n\r\n    renderMenuItems() {\r\n        const menuItems :JSX.Element[] = []\r\n        let key = 0\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeCounterPacks}>Посмотреть кто побеждает (не работает)</MenuItem>)\r\n        /*if (this.props.heroIdsA !== undefined && this.props.heroIdsD !== undefined) menuItems.push(<MenuItem key={key++} onClick={this.seeTrainMode}>Add to Train both packs</MenuItem>)*/\r\n        return menuItems\r\n    }\r\n\r\n    render() {\r\n        const additionalClasses = \"selectedHeroPack \" + this.props.additionalClasses.join(\" \")\r\n        return (\r\n            <Box className={additionalClasses}>\r\n                {this.props.heroPack?.extendedInfo?.cwr !== undefined && this.props.heroPack?.extendedInfo?.cc !== undefined &&\r\n                (<Box className={\"selectedHeroPackExtendedCurrent\"}>\r\n                    <Tooltip title={\"Процент побед выбранного пака\"}><span><img\r\n                        src={\"./trophy_a_w.png\"}/><span>{this.props.heroPack.extendedInfo.cwr + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Количество побед выбранного пака\"}><span><img\r\n                        src={\"./attack_w.png\"}/><span>{this.props.heroPack.extendedInfo.cc}</span></span></Tooltip>\r\n                </Box>)}\r\n                <Box className={\"selectedHeroPackIcons\"}>\r\n                    {this.renderHeroIcons()}\r\n                    <Box className={\"linkVerticalBar\"}>\r\n                        <Box id=\"demo-positioned-button\"\r\n                             aria-controls=\"demo-positioned-menu\"\r\n                             aria-haspopup=\"true\"\r\n                             aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                             onClick={this.handleMenuClick}><Tooltip title={\"Дополнительная информация\"}><MoreVertIcon/></Tooltip></Box>\r\n                        <Tooltip title={\"Копировать ссылку на пак\"}><LinkIcon onClick={this.copyLink}/></Tooltip>\r\n                    </Box>\r\n\r\n                </Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {this.renderMenuItems()}\r\n                </Menu>\r\n                <Box className={\"selectedHeroPackExtended\"}>\r\n                    <span>Всего:</span>\r\n                    <Tooltip title={\"Всего % побед в атаке\"}><span><img\r\n                        src={\"./trophy_a_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wra === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.wra) + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего побед в атаке\"}><span><img\r\n                        src={\"./attack_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.ca === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.ca}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего % побед в защите\"}><span><img\r\n                        src={\"./trophy_d_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wrd === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.wrd) + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего побед в защите\"}><span><img\r\n                        src={\"./shield_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.cd === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.cd}</span></span></Tooltip>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernIcon} from \"./HeroModernIcon\";\r\n\r\ninterface IProps {\r\n    heroProb?: Map<number,number>,\r\n    onClick: any,\r\n    selectedHeroes: number[],\r\n    highlightedHeroes: number[],\r\n    addedHeroes?: number[],\r\n    removedHeroes?: number[],\r\n    additionalClasses: string[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroModernGrid extends React.Component<IProps, IState> {\r\n    renderHeroIcons() {\r\n        if (this.props.addedHeroes) {console.log('renderHeroIcons',this.props.addedHeroes,this.props.removedHeroes)}\r\n        const items=[]\r\n\r\n        for (const i in HeroData.heroIdsOrderedByName) {\r\n            const heroId=HeroData.heroIdsOrderedByName[i]\r\n            const prob=this.props.heroProb?.get(heroId) || 0\r\n            const additionalClasses=[\"heroIconSmall\"]\r\n            if (this.props.selectedHeroes.indexOf(heroId)>=0) {additionalClasses.push(\"mySelected\")}\r\n            if (this.props.highlightedHeroes.indexOf(heroId)<0) {additionalClasses.push(\"myNotHighlighted\")}\r\n            items.push(\r\n                <HeroModernIcon key={i} additionalClasses={additionalClasses} heroId={heroId} heroProb={prob} onClick={this.props.onClick} isAdded={this.props.addedHeroes?.includes(heroId)} isRemoved={this.props.removedHeroes?.includes(heroId)}/>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Box className={\"heroModernGrid \" + this.props.additionalClasses.join(\" \")}>\r\n                {this.renderHeroIcons()}\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\ninterface IProps {\r\n    message: string,\r\n    openMenuFunction:any\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeaderBlock extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box className={\"headerBlock\"}>\r\n                <MenuIcon onClick={this.props.openMenuFunction}/>\r\n                <Box>{this.props.message}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}","import {Box, Slider} from \"@mui/material\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nexport function ModernSlider(props: any) {\r\n    const [minFights, setMinFights] = useState(props.initial)\r\n    const marks=[{\r\n        value: props.min,\r\n        label: \"\"+props.min\r\n    }, {\r\n        value: props.max,\r\n        label: \"\"+props.max\r\n    }]\r\n    const changeValue = function (e: any, value: number | number []) {\r\n        if (!Array.isArray(value)) {\r\n            setMinFights(value)\r\n            props.callback(value)\r\n        }\r\n    }\r\n    const getSliderText = function (value: number) {\r\n        return \"\" + value\r\n    }\r\n\r\n    return (\r\n        <Box className={\"modernSlider\"}>\r\n        <Slider\r\n            getAriaLabel={() => props.label}\r\n            value={minFights}\r\n            min={props.min}\r\n            max={props.max}\r\n            marks={marks}\r\n            onChange={changeValue}\r\n            getAriaValueText={getSliderText}\r\n            color={\"secondary\"}\r\n            track=\"inverted\"\r\n            step={1}\r\n            valueLabelDisplay=\"on\"\r\n            disableSwap\r\n        />\r\n        </Box>\r\n    )\r\n\r\n}","import {Box, Button, Modal, Tooltip} from \"@mui/material\";\r\nimport {ModernSlider} from \"./ModernSlider\";\r\nimport {HeroModernGrid} from \"./HeroModernGrid\";\r\nimport React, {useState} from \"react\";\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\n\r\nexport function CounterPackFilterModal(props: any) {\r\n    const [modalOpen, setModalOpen] = useState(true)\r\n    const [heroFilterInclude, setHeroFilterInclude] = useState(props.memoArray.heroFilterInclude)\r\n    const [heroFilterExclude, setHeroFilterExclude] = useState(props.memoArray.heroFilterExclude)\r\n    const handleModalClose = function () {\r\n        setModalOpen(false)\r\n        props.memoArray.heroFilterInclude = heroFilterInclude\r\n        props.memoArray.heroFilterExclude = heroFilterExclude\r\n        props.onClose(props.memoArray)\r\n    }\r\n    const changeMinWinRate = function (value: number) {\r\n        props.memoArray.minWinRate = value\r\n    }\r\n    const changeMinFights = function (value: number) {\r\n        props.memoArray.minFights = value\r\n    }\r\n    const onHeroGridClick = function (heroId: number) {\r\n        //console.log('onHeroGridClick', heroId, heroFilterInclude, heroFilterExclude)\r\n        const newHeroFilterInclude = [...heroFilterInclude]\r\n        const newHeroFilterExclude = [...heroFilterExclude]\r\n        const includeIndex = newHeroFilterInclude.indexOf(heroId)\r\n        const excludeIndex = newHeroFilterExclude.indexOf(heroId)\r\n        if (includeIndex >= 0) {\r\n            newHeroFilterInclude.splice(includeIndex, 1)\r\n            setHeroFilterInclude(newHeroFilterInclude)\r\n            if (excludeIndex < 0) {\r\n                newHeroFilterExclude.push(heroId)\r\n                setHeroFilterExclude(newHeroFilterExclude)\r\n            }\r\n        } else if (excludeIndex >= 0) {\r\n            newHeroFilterExclude.splice(excludeIndex, 1)\r\n            setHeroFilterExclude(newHeroFilterExclude)\r\n        } else {\r\n            if (newHeroFilterInclude.length < 5) {\r\n                newHeroFilterInclude.push(heroId)\r\n                setHeroFilterInclude(newHeroFilterInclude)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className={\"myModal\"}\r\n            open={modalOpen}\r\n            onClose={handleModalClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box className={\"counterPackResultModalBox\"}>\r\n                <Button className={\"closeModal\"} onClick={handleModalClose}><CancelOutlinedIcon/></Button>\r\n                {props.memoArray.filterMaxWinRate>0 && (\r\n                <Box className={\"sliderRow\"}>\r\n                    <Tooltip title={\"Процент побед в атаке\"}><img src={\"./trophy_a_w.png\"}/></Tooltip>\r\n                    <ModernSlider min={props.memoArray.filterMinWinRate} max={props.memoArray.filterMaxWinRate}\r\n                                  label={\"some2\"}\r\n                                  initial={props.memoArray.minWinRate}\r\n                                  callback={changeMinWinRate}/>\r\n                </Box>\r\n                )}\r\n                {props.memoArray.filterMaxFights>0 && (\r\n                <Box className={\"sliderRow\"}>\r\n                    <Tooltip title={\"Количество побед в атаке\"}><img src={\"./attack_w.png\"}/></Tooltip>\r\n                    <ModernSlider min={props.memoArray.filterMinFights} max={props.memoArray.filterMaxFights}\r\n                                  label={\"some1\"}\r\n                                  initial={props.memoArray.minFights}\r\n                                  callback={changeMinFights}/>\r\n                </Box>\r\n                )}\r\n                <span>Фильтр по героям</span>\r\n                <HeroModernGrid additionalClasses={[\"heroIconTiny\"]} highlightedHeroes={[]}\r\n                                onClick={onHeroGridClick} selectedHeroes={[]} addedHeroes={heroFilterInclude}\r\n                                removedHeroes={heroFilterExclude}/>\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Box, Button, Chip, Divider} from \"@mui/material\";\r\nimport HourglassBottomIcon from '@mui/icons-material/HourglassBottom';\r\nimport {HeroData} from \"../types\";\r\nimport {SelectedHeroPack} from \"./SelectedHeroPack\";\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {CounterPackFilterModal} from \"./CounterPackFilterModal\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\nfunction constructHeroFilter(pHeroFilter: number[]) {\r\n    let result = \"%\"\r\n    pHeroFilter.sort((a,b) => {\r\n        return a-b\r\n    })\r\n    for (let i = 0; i <= 5 && i < pHeroFilter.length; i++) {\r\n        result += ':' + pHeroFilter[i] + ':%'\r\n    }\r\n    return escape(result)\r\n}\r\n\r\nexport function CounterPackResults(props: any) {\r\n    let pMinFights = 0;\r\n    if (props.params.get(\"minFightsCount\")) {\r\n        const x = ~~props.params.get(\"minFightsCount\")\r\n        if (x >= 0) {\r\n            pMinFights = x\r\n        }\r\n    }\r\n    const pHeroFilterInclude = []\r\n    if (props.params.get(\"heroFilterInclude\")) {\r\n        const x = props.params.get(\"heroFilterInclude\")?.split(\",\") || []\r\n        for (let i = 0; i < 5 && i < x.length; i++) {\r\n            if (HeroData.getHeroById(~~x[i])) {\r\n                pHeroFilterInclude.push(~~x[i])\r\n            }\r\n        }\r\n    }\r\n    const pHeroFilterExclude = []\r\n    if (props.params.get(\"heroFilterExclude\")) {\r\n        const x = props.params.get(\"heroFilterExclude\")?.split(\",\") || []\r\n        for (let i = 0; i < 5 && i < x.length; i++) {\r\n            if (HeroData.getHeroById(~~x[i])) {\r\n                pHeroFilterExclude.push(~~x[i])\r\n            }\r\n        }\r\n    }\r\n    let pMinWinRate = 0\r\n    if (props.params.get(\"minWinRate\")) {\r\n        const x = ~~props.params.get(\"minWinRate\")\r\n        if (x >= 0 && x <= 100) {\r\n            pMinWinRate = x\r\n        }\r\n    }\r\n    const [minWinRate, setMinWinRate] = useState(pMinWinRate)\r\n    const [minFights, setMinFights] = useState(pMinFights)\r\n    const [heroFilterInclude, setHeroFilterInclude] = useState(pHeroFilterInclude)\r\n    const [heroFilterExclude, setHeroFilterExclude] = useState(pHeroFilterExclude)\r\n    const [heroPacks, setHeroPacks] = useState([] as IHeroPack[])\r\n    const [requestsInProgress, setRequestsInProgress] = useState(0)\r\n    const [, setTotalFound] = useState(0)\r\n    const [filterMinWinRate, setFilterMinWinRate] = useState(0)\r\n    const [filterMaxWinRate, setFilterMaxWinRate] = useState(0)\r\n    const [filterMinFights, setFilterMinFights] = useState(0)\r\n    const [filterMaxFights, setFilterMaxFights] = useState(0)\r\n    const [filterOpened, setFilterOpened] = useState(false)\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n    const [isUpdateOccurred, setIsUpdateOccurred] = useState(false)\r\n    const [memoArray, setMemoArray] = useState({\r\n        minWinRate: minWinRate,\r\n        minFights: minFights,\r\n        heroFilterInclude: heroFilterInclude,\r\n        heroFilterExclude: heroFilterExclude,\r\n        filterMinFights: filterMinFights,\r\n        filterMaxFights: filterMaxFights,\r\n        filterMinWinRate: filterMinWinRate,\r\n        filterMaxWinRate: filterMaxWinRate,\r\n        requestsInProgress: 0\r\n    })\r\n    const updateHeroPackInfo = function (pHeroPack: IHeroPack, pMinWinRate: number, pMinFights: number, pHeroFilterInclude: number[], pHeroFilterExclude: number[]) {\r\n        if (pHeroPack.hIds.length === 5) {\r\n            let url = MySettings.apiUrl+\"lostPacks/\"\r\n            const heroParams = [-1, -1, -1, -1, -1]\r\n            for (let i = 0; i < 5 && i < pHeroPack.hIds.length; i++) {\r\n                heroParams[i] = pHeroPack.hIds[i];\r\n            }\r\n            props.changeHeaderMessageFunction(\"Загружаем контр-паки из статистики...\")\r\n            url += heroParams.join(\"/\")\r\n            url += \"/\" + pMinWinRate + \"/\" + pMinFights + \"/\"\r\n            url += constructHeroFilter(pHeroFilterInclude) + \"/\"\r\n            url += constructHeroFilter(pHeroFilterExclude.length === 0 ? [-2] : pHeroFilterExclude)\r\n            memoArray.requestsInProgress++\r\n            setRequestsInProgress(memoArray.requestsInProgress)\r\n            fetch(url, {\r\n                method: \"GET\"\r\n            }).then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        let nTotalFound = 0\r\n                        if (result['items']) {\r\n                            const heroLostPacks = []\r\n                            let nFilterMinWinRate = 0\r\n                            let nFilterMaxWinRate = 0\r\n                            let nFilterMinFights = 0\r\n                            let nFilterMaxFights = 0\r\n\r\n                            for (const x in result['items']) {\r\n                                const z = result['items'][x]\r\n                                let lostPack = []\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                                if (!isUpdateOccurred) {\r\n                                    nFilterMinWinRate = z.minwr\r\n                                    nFilterMaxWinRate = z.maxwr\r\n                                    nFilterMinFights = z.minc\r\n                                    nFilterMaxFights = z.maxc\r\n                                }\r\n                                nTotalFound = z.tc\r\n                                heroLostPacks.push({\r\n                                    hIds: lostPack,\r\n                                    extendedInfo: {\r\n                                        statusInfo: \"\",\r\n                                        wra: z.wra,\r\n                                        wrd: z.wrd,\r\n                                        ca: z.ca,\r\n                                        cd: z.cd,\r\n                                        wa: z.wa,\r\n                                        wd: z.wd,\r\n                                        cc: z.cc,\r\n                                        cwr: z.cwr\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            setHeroPacks(heroLostPacks)\r\n                            if (!isUpdateOccurred) {\r\n                                setFilterMinWinRate(Math.floor(nFilterMinWinRate))\r\n                                setFilterMaxWinRate(Math.floor(nFilterMaxWinRate))\r\n                                setFilterMinFights(nFilterMinFights)\r\n                                setFilterMaxFights(nFilterMaxFights)\r\n                            }\r\n                            setTotalFound(nTotalFound)\r\n\r\n                        }\r\n                        if (!isUpdateOccurred) setIsUpdateOccurred(true)\r\n                        props.changeHeaderMessageFunction(\"Нашли \" + nTotalFound + \" контр-паков\")\r\n                    }).finally(() => {\r\n                memoArray.requestsInProgress--\r\n                setRequestsInProgress(memoArray.requestsInProgress)\r\n            })\r\n        }\r\n\r\n    }\r\n    const onHeroSelect = function () {\r\n    }\r\n    const onFilterClick = function () {\r\n        setMemoArray(\r\n            {\r\n                minWinRate: minWinRate,\r\n                minFights: minFights,\r\n                heroFilterInclude: heroFilterInclude,\r\n                heroFilterExclude: heroFilterExclude,\r\n                filterMinFights: filterMinFights,\r\n                filterMaxFights: filterMaxFights,\r\n                filterMinWinRate: filterMinWinRate,\r\n                filterMaxWinRate: filterMaxWinRate,\r\n                requestsInProgress: memoArray.requestsInProgress\r\n            }\r\n        )\r\n        setFilterOpened(true)\r\n    }\r\n    const handleModalClose = function (newMemoArray: any) {\r\n        if (newMemoArray.minWinRate === filterMinWinRate) {\r\n            newMemoArray.minWinRate = 0\r\n        }\r\n        setMinWinRate(newMemoArray.minWinRate)\r\n        if (newMemoArray.minFights === filterMinFights) {\r\n            newMemoArray.minFights = 0\r\n        }\r\n        setMinFights(newMemoArray.minFights)\r\n        const newHeroFilterInclude = [...newMemoArray.heroFilterInclude]\r\n        const newHeroFilterExclude = [...newMemoArray.heroFilterExclude]\r\n        setHeroFilterInclude(newHeroFilterInclude)\r\n        setHeroFilterExclude(newHeroFilterExclude)\r\n        setMemoArray(newMemoArray)\r\n        setFilterOpened(false)\r\n        updateHeroPackInfo(props.heroPack, newMemoArray.minWinRate, newMemoArray.minFights, newHeroFilterInclude, newHeroFilterExclude)\r\n    }\r\n    const handleDeleteFilterChip = function (e: any) {\r\n        let filterType = undefined\r\n        let heroId = undefined\r\n        if (e?.target?.parentNode?.parentNode?.dataset?.filtertype) {\r\n            filterType = e?.target?.parentNode?.parentNode?.dataset?.filtertype\r\n            heroId = ~~e?.target?.parentNode?.parentNode?.dataset?.filterheroid\r\n        } else if (e?.target?.parentNode?.dataset?.filtertype) {\r\n            filterType = e?.target?.parentNode?.dataset?.filtertype\r\n            heroId = ~~e?.target?.parentNode?.dataset?.filterheroid\r\n        }\r\n        if (filterType && heroId) {\r\n            switch (filterType) {\r\n                case \"include\": {\r\n                    const index = heroFilterInclude.indexOf(heroId)\r\n                    if (index >= 0) {\r\n                        const newHeroFilterInclude = [...heroFilterInclude]\r\n                        newHeroFilterInclude.splice(index, 1)\r\n                        setHeroFilterInclude(newHeroFilterInclude)\r\n                        updateHeroPackInfo(props.heroPack, minWinRate, minFights, newHeroFilterInclude, heroFilterExclude)\r\n                    }\r\n                    break;\r\n                }\r\n                case \"exclude\": {\r\n                    const index = heroFilterExclude.indexOf(heroId)\r\n                    if (index >= 0) {\r\n                        const newHeroFilterExclude = [...heroFilterExclude]\r\n                        newHeroFilterExclude.splice(index, 1)\r\n                        setHeroFilterExclude(newHeroFilterExclude)\r\n                        updateHeroPackInfo(props.heroPack, minWinRate, minFights, heroFilterInclude, newHeroFilterExclude)\r\n                    }\r\n                    break;\r\n                }\r\n                case \"mwr\": {\r\n                    setMinWinRate(0)\r\n                    updateHeroPackInfo(props.heroPack, 0, minFights, heroFilterInclude, heroFilterExclude)\r\n                    break;\r\n                }\r\n                case \"mf\": {\r\n                    setMinFights(0)\r\n                    updateHeroPackInfo(props.heroPack, minWinRate, 0, heroFilterInclude, heroFilterExclude)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const renderFilterBar = function () {\r\n        const items = []\r\n        for (const x of heroFilterInclude) {\r\n            items.push(<Chip\r\n                data-filtertype={\"include\"}\r\n                data-filterheroid={x}\r\n                label={\"+\" + HeroData.getHeroById(x)?.heroName || \"\" + x}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        for (const x of heroFilterExclude) {\r\n            items.push(<Chip\r\n                data-filtertype={\"exclude\"}\r\n                data-filterheroid={x}\r\n                label={\"-\" + HeroData.getHeroById(x)?.heroName || \"\" + x}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        if (minFights > 0) {\r\n            items.push(<Chip\r\n                data-filtertype={\"mf\"}\r\n                data-filterheroid={1}\r\n                label={<Box className={\"filterBarLabel\"}><img src={\"./attack_w.png\"}/><span>{minFights}</span></Box>}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        if (minWinRate > 0) {\r\n            items.push(<Chip\r\n                data-filtertype={\"mwr\"}\r\n                data-filterheroid={1}\r\n                label={<Box className={\"filterBarLabel\"}><img src={\"./trophy_a_w.png\"}/><span>{minWinRate + \"%\"}</span></Box>}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n\r\n        return (<Box className={\"filterBar\"}>\r\n            {items}\r\n        </Box>)\r\n    }\r\n    const renderHeroPacks = function () {\r\n        const items = []\r\n        const emptyMap = new Map<number, number>()\r\n        for (const i in heroPacks) {\r\n            items.push(<SelectedHeroPack additionalClasses={[\"withCurrentStat\"]} heroPack={heroPacks[i]}\r\n                                         heroProbs={emptyMap}\r\n                                         onHeroSelect={onHeroSelect} selectedHeroes={heroFilterInclude}\r\n                                         key={heroPacks[i].hIds.join(\",\")}/>)\r\n        }\r\n        return items\r\n    }\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            updateHeroPackInfo(props.heroPack, minWinRate, minFights, heroFilterInclude, heroFilterExclude)\r\n            setIsInitialized(true)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Box className={\"counterPackResult\"}>\r\n            {requestsInProgress > 0 && (\r\n                <Box>Loading...<HourglassBottomIcon/></Box>\r\n            )\r\n            }\r\n            {isUpdateOccurred && requestsInProgress === 0 && (\r\n                <Box>\r\n                    <Box><Divider>Фильтр<Button className={\"svgButton\"}><FilterAltIcon\r\n                        onClick={onFilterClick}/></Button></Divider>\r\n                        {filterOpened && (\r\n                            <CounterPackFilterModal onClose={handleModalClose} memoArray={memoArray}/>\r\n                        )}\r\n                        {renderFilterBar()}\r\n                    </Box>\r\n                    {heroPacks.length === 0 && (<Box className={\"counterPackNotFound\"}>\r\n                        <Box>Не нашли контр-паки у себя в статистике боев</Box>\r\n                        <span>Попробовать добавить в очередь на поиск на сервер обработки боёв?</span>\r\n                        <Button sx={{\r\n                            color: 'white',\r\n                            bgcolor: 'primary.light'\r\n                        }}>Найти контр-пак (пока не работает)</Button>\r\n                    </Box>)}\r\n                    {heroPacks.length > 0 && (<Box> <Divider>Контр-паки</Divider>\r\n                            <Box className={\"counterPackResultPacks\"}>\r\n                                {renderHeroPacks()}\r\n                            </Box>\r\n                        </Box>\r\n                    )}\r\n                </Box>)}\r\n        </Box>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Box, Divider} from \"@mui/material\";\r\nimport {SelectedHeroPack} from \"./SelectedHeroPack\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernGrid} from \"./HeroModernGrid\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeaderBlock} from \"./HeaderBlock\";\r\nimport {useLocation, useMatch, useNavigate, useParams} from \"react-router-dom\";\r\nimport {CounterPackResults} from \"./CounterPackResults\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\nconst messages = {\r\n    choose5Heroes: \"Выберите пачку из 5 героев для поиска\",\r\n}\r\n\r\nexport function CounterPackScreen(props: any) {\r\n    const params = useParams();\r\n    const match = useMatch(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [headerMessage, setHeaderMessage] = useState(messages.choose5Heroes);\r\n    const templateHeroPack = HeroData.getEmptyHeroPack()\r\n    const queryParams: any = new URLSearchParams(location?.search || \"\")\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n    if (queryParams.get(\"hids\")) {\r\n        const x = queryParams.get(\"hids\")?.split(\",\")\r\n        if (x && x.length <= 5) {\r\n            for (const z of x) {\r\n                templateHeroPack.hIds.push(~~z)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [heroPack, setHeroPack] = useState(templateHeroPack);\r\n    const [heroAvailable, setHeroAvailable] = useState([] as number[])\r\n    const [heroProbs, setHeroProbs] = useState(new Map<number, number>())\r\n    const [requestsInProgress, setRequestsInProgress] = useState(0)\r\n\r\n    const updateAvailableHeroes = function (pHeroPack: IHeroPack) {\r\n        const heroParams = [-1, -1, -1, -1, -1]\r\n        for (let i = 0; i < 5 && i < pHeroPack.hIds.length; i++) {\r\n            heroParams[i] = pHeroPack.hIds[i];\r\n        }\r\n        setRequestsInProgress(requestsInProgress + 2)\r\n        let url = MySettings.apiUrl+\"findLostPackHeroesStat/\"\r\n        fetch(url + heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let heroArray: number[] = []\r\n                    if (result['items']) {\r\n                        for (const j in result['items']) {\r\n                            const x = result['items'][j]['d']\r\n                            if (x) {\r\n                                if (!heroArray.includes(~~x)) {\r\n                                    heroArray.push(~~x)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    setHeroAvailable(heroArray)\r\n                },\r\n                (error) => {\r\n                    console.error(\"error req\", error)\r\n                    setHeroAvailable([])\r\n                }\r\n            ).finally(() => {\r\n            setRequestsInProgress(requestsInProgress - 1)\r\n        })\r\n\r\n        url = MySettings.apiUrl+\"packStat/\"\r\n        fetch(url + heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let heroArray: number[] = []\r\n                    if (result['items']) {\r\n                        for (const j in result['items']) {\r\n                            const x = result['items'][j]\r\n                            if (x) {\r\n                                const newHeroPack = HeroData.getEmptyHeroPack()\r\n                                newHeroPack.hIds = pHeroPack.hIds\r\n                                newHeroPack.extendedInfo = {\r\n                                    statusInfo: \"\",\r\n                                    ca: x.ca,\r\n                                    cd: x.cd,\r\n                                    wra: x.wra,\r\n                                    wrd: x.wrd,\r\n                                    wa: x.wa,\r\n                                    wd: x.wd,\r\n                                }\r\n                                setHeroPack(newHeroPack)\r\n                            }\r\n                        }\r\n                    }\r\n                    //console.log('setHeroAvailable',heroArray)\r\n                    //setHeroAvailable(heroArray)\r\n                },\r\n                (error) => {\r\n                    console.error(\"error req\", error)\r\n                    //setHeroAvailable([])\r\n                }\r\n            ).finally(() => {\r\n            setRequestsInProgress(requestsInProgress - 1)\r\n        })\r\n\r\n\r\n    }\r\n    const updateHeroPackInfo = function (pHeroPack: IHeroPack) {\r\n        navigate(\"/counterPack?hids=\" + pHeroPack.hIds.join(\",\"))\r\n        setHeroPack(pHeroPack)\r\n        updateAvailableHeroes(pHeroPack)\r\n        if (pHeroPack.hIds.length !== 5) {\r\n            setHeaderMessage(messages.choose5Heroes)\r\n        }\r\n    }\r\n    const changeHeaderMessage = function (newMessage: string) {\r\n        console.log(\"changeHeaderMessage\"+newMessage)\r\n        setHeaderMessage(newMessage)\r\n    }\r\n    const onHeroSelect = function (heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    updateHeroPackInfo(heroPack)\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                updateHeroPackInfo(heroPack)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!isInitialized && heroPack.hIds.length === 5) {\r\n            setIsInitialized(true)\r\n            updateHeroPackInfo(heroPack)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Box className={\"counterPackScreen\"}>\r\n            <HeaderBlock openMenuFunction={props.openMenuFunction}\r\n                         message={headerMessage}/>\r\n            {heroPack.hIds.length === 5 && (<Divider>Выбранный пак</Divider>)}\r\n            <SelectedHeroPack heroPack={heroPack} heroProbs={HeroData.zeroHeroProbMap}\r\n                              onHeroSelect={onHeroSelect} selectedHeroes={[]} additionalClasses={[]}/>\r\n            {heroPack.hIds.length < 5 && (\r\n                <HeroModernGrid additionalClasses={[]} heroProb={heroProbs} onClick={onHeroSelect}\r\n                                selectedHeroes={heroPack.hIds} highlightedHeroes={heroAvailable}/>\r\n            )}\r\n            {heroPack.hIds.length === 5 && (\r\n                <CounterPackResults changeHeaderMessageFunction={changeHeaderMessage} heroPack={heroPack}\r\n                                    params={queryParams}\r\n                                    mainUrl={\"/counterPack\" + (heroPack.hIds.length > 0 ? \"?hIds=\" + heroPack.hIds.join(\",\") : \"\")}/>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Box, Slider} from \"@mui/material\";\r\nimport {ModernSlider} from \"./ModernSlider\";\r\n\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n\r\ninterface IState {\r\n    minFights: number,\r\n    value: number,\r\n    filterMinFights: number,\r\n    filterMaxFights: number\r\n}\r\n\r\n\r\nexport class TestComponent extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={\r\n            minFights: 5,\r\n            value: 5,\r\n            filterMinFights: 0,\r\n            filterMaxFights: 100\r\n        }\r\n        this.changeMinFights=this.changeMinFights.bind(this)\r\n        this.renderSliderText=this.renderSliderText.bind(this)\r\n        this.changeValue=this.changeValue.bind(this)\r\n    }\r\n    changeMinFights(e:any,value: number | number [],activeThumb:any) {\r\n        if (!Array.isArray(value)) {\r\n            this.setState({minFights: value})\r\n        }\r\n    }\r\n    renderSliderText(value:number,index:number) {\r\n        return \"\"+value\r\n    }\r\n    changeValue(value:number) {\r\n        this.setState({value:value})\r\n    }\r\n    render() {\r\n        return (<Box className={\"modernSlider\"}>\r\n            <Slider\r\n                getAriaLabel={() => 'Minimum'}\r\n                value={this.state.minFights}\r\n                min={this.state.filterMinFights}\r\n                max={this.state.filterMaxFights}\r\n                onChange={this.changeMinFights}\r\n                getAriaValueText={this.renderSliderText}\r\n                color={\"secondary\"}\r\n                track=\"inverted\"\r\n                marks\r\n                step={1}\r\n                valueLabelDisplay=\"on\"\r\n                disableSwap\r\n            />\r\n            <ModernSlider min={this.state.filterMinFights} max={this.state.filterMaxFights} callback={this.changeValue} label={\"some\"}/>\r\n        </Box>)\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Slide, Tab, Tabs} from \"@mui/material\";\r\nimport {CounterPackScreen} from \"./CounterPackScreen\";\r\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\"\r\nimport {TestComponent} from \"./TestComponent\";\r\nimport GLogin from \"./GLogin\";\r\nimport GLogout from \"./GLogout\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    navMenuIndex: number,\r\n    navMenuOpened: boolean,\r\n}\r\n\r\nexport class MainScreen extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            navMenuIndex: 0,\r\n            navMenuOpened: false,\r\n        }\r\n        this.changeMenu = this.changeMenu.bind(this)\r\n        this.toggleMenu = this.toggleMenu.bind(this)\r\n    }\r\n\r\n\r\n    changeMenu(event: any, newValue: string) {\r\n        this.setState({\r\n            navMenuIndex: ~~newValue\r\n        })\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.setState({\r\n            navMenuOpened: !this.state.navMenuOpened\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //{!this.state.navMenuOpened && (\r\n        /*\r\n                     <GLogin/>\r\n                    <GLogout/>\r\n         */\r\n        return (\r\n            <HashRouter>\r\n                <Box className={\"mainScreen\"}\r\n                     sx={{flexGrow: 1, display: 'flex', width: '100vw', height: '100%', overflowX: 'hidden'}}>\r\n\r\n                    <Slide direction=\"right\" in={this.state.navMenuOpened}>\r\n                        <Box className={\"menuBox\"}>\r\n                            <Tabs orientation=\"vertical\"\r\n                                  variant=\"scrollable\"\r\n                                  value={this.state.navMenuIndex}\r\n                                  onChange={this.changeMenu}\r\n                                  aria-label=\"Vertical tabs example\"\r\n                                  sx={{borderRight: 1, borderColor: 'divider'}}>\r\n                                <Tab label=\"Item One\" id={\"vertical-tab-0\"} aria-controls={\"vertical-tabpanel-0\"}/>\r\n                                <Tab label=\"Item Two\" id={\"vertical-tab-1\"} aria-controls={\"vertical-tabpanel-1\"}/>\r\n                            </Tabs>\r\n                            <Box className={\"menuFadeBox\"} onClick={this.toggleMenu}/>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Box role=\"tabpanel\">\r\n                        <Routes>\r\n                            <Route path={\"/counterPack\"} element={\r\n                                <CounterPackScreen openMenuFunction={this.toggleMenu}\r\n                                                   />\r\n                            }/>\r\n                            <Route path={\"/test\"} element={\r\n                                <TestComponent/>\r\n                            }/>\r\n                            <Route path={\"*\"} element={\r\n                                <Navigate replace to=\"/counterPack\" />}\r\n                            />\r\n                        </Routes>\r\n                    </Box>\r\n                </Box>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { ThemeProvider } from '@mui/system';\r\nimport {HeroModeSelect} from \"./components\";\r\nimport {createTheme} from \"@mui/material\";\r\nimport {MySettings} from \"./types/MySettings\";\r\nimport {MainScreen} from \"./components2/MainScreen\";\r\n\r\nconst customTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#5d4037',\r\n            contrastText: '#fff',\r\n            light: '#8b6b61',\r\n            dark: '#321911',\r\n        },\r\n        secondary: {\r\n            light: '#ffc947',\r\n            main: '#ff9800',\r\n            dark: '#c66900',\r\n            contrastText: '#000',\r\n        }\r\n    }\r\n});\r\n\r\nfunction App() {\r\n    if (MySettings.mainVersion===1) {\r\n        return (\r\n            <ThemeProvider theme={customTheme}>\r\n                <HeroModeSelect currentMode={4}/>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (\r\n        <ThemeProvider theme={customTheme}>\r\n            <MainScreen/>\r\n        </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}