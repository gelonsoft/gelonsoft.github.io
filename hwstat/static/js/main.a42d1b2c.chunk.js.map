{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroModeSelect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","heroId","heroesList","get","a1","a2","i","length","result","Map","x","heroData","set","heroName","battleOrder","initHeroesList","z","padLeadingZeros","num","size","s","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","flexGrow","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","opacity","borderRadius","renderType","renderForHeroSelectGrid","renderForPackEmptySelected","renderForHeroCounterHeroGrid","renderForHeroPackGrid","minWidth","minHeight","React","Component","HeroCounterPackMode","currentMode","requestsInProgress","initialized","requestSeq","heroIds","heroLostPacks","heroCounterFilter","heroWinPacks","heroAttackerFilter","heroLostProbs","heroWinProbs","heroCounterProbs","heroAttackerProbs","selectHero","bind","deselectHero","filterCounterHero","filterAttackerHero","selectMode","updateHeroIds","heroParams","hIds","setState","url","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","push","extendedInfo","statusInfo","r","Array","from","keys","heroPackId","mmd","console","log","finally","requestId","getPacksData","j","Number","parseFloat","error","e","target","dataset","heroid","index","indexOf","splice","includes","value","newMode","Container","flexDirection","justifyContent","ToggleButtonGroup","exclusive","onChange","ToggleButton","Divider","Chip","label","onFilterCounterHero","HeroGrid","items","heroArray","values","undefined","sort","a","b","container","spacing","renderHeroes","HeroPackSelected","anchorEl","addToAttackQueue","addToDefenderQueue","seeCounterPacks","seeAttackerPacks","handleMenuClick","handleMenuClose","heroCount","heroes","h1","h2","currentTarget","renderHeroPack","id","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","HeroCounterHeroGrid","HeroCounterPackGrid","heroPack","hl","newHeropack","heroPackFull","Stack","direction","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","testqid","newQ","position","heroIdsA","heroIdsD","testQId","marginBottom","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","Button","variant","emptyMap","marginTop","disabled","renderA","renderB","renderSendButton","HeroOneFightMode","setMode","navigateToMode","mode","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","marginLeft","marginRight","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","extText","formatParameter","typ","showCloseButton","name","goodName","multiplier","unit","prec","HeroRouletteMode","HeroModeSelect","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a42d1b2c.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder:number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result:Map<number, Hero>=new Map<number,Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId=~~x\r\n        if (heroId>=1 && heroId<599) {\r\n            const heroData:any = HStorage.heroDescStorage[x]\r\n            result.set(heroId,{\r\n                heroId: heroId,\r\n                heroName: HStorage.localeStorage[\"LIB_HERO_NAME_\"+heroId],\r\n                battleOrder:heroData.battleOrder\r\n            })\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\nstatic getHeroById(heroId: number) {\r\n    return HeroData.heroesList.get(heroId)\r\n}\r\nstatic compareArrays (a1:any[],a2:any[]) {var i = a1.length; if (i !== a2.length) return false; while (i--) { if (a1[i] !== a2[i]) return false; } return true}\r\n\r\nstatic heroesList: Map<number, Hero> = initHeroesList()\r\n    static z = new Map([\r\n    [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n    [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n    [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n    [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n    [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n    [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n    [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n    [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n    [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n    [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n    [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n    [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n    [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n    [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n    [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n    [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n    [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n    [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n    [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n    [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n    [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n    [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n    [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n    [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n    [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n    [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n    [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n    [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n    [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n    [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n    [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n    [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n    [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n    [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n    [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n    [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n    [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n    [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n    [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n    [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n    [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n    [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n    [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n    [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n    [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n    [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n    [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n    [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n    [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n    [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n    [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n    [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n    [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n    [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box sx={{\r\n                maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>empty</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    heroLostProbs: Map<number, number>,\r\n    heroCounterProbs: Map<number, number>,\r\n    heroAttackerProbs: Map<number, number>,\r\n    heroLostPacks: IHeroPack[],\r\n    heroWinPacks: IHeroPack[],\r\n    heroWinProbs: Map<number,number>\r\n    heroCounterFilter: number[],\r\n    heroAttackerFilter: number[],\r\n    requestsInProgress: number,\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            heroWinPacks: [],\r\n            heroAttackerFilter: [],\r\n            requestsInProgress: 0,\r\n            heroLostProbs: new Map<number,number>(),\r\n            heroWinProbs: new Map<number,number>(),\r\n            heroCounterProbs: new Map<number,number>(),\r\n            heroAttackerProbs: new Map<number,number>(),\r\n            currentMode: props.currentMode\r\n        };\r\n        this.requestsInProgress=0\r\n        this.currentMode=props.currentMode\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n        this.filterAttackerHero = this.filterAttackerHero.bind(this)\r\n        this.selectMode=this.selectMode.bind(this)\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n    currentMode: number\r\n    requestsInProgress: number\r\n    initialized: boolean = false\r\n    requestSeq=0\r\n\r\n\r\n    getPacksData(heroIds:IHeroPack,currentMode:number) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"\"\r\n        if (currentMode===0) {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroes/\"\r\n        } else {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs = new Map<number, number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = []\r\n                            if (currentMode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n\r\n                            }\r\n                            cnt++\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:\"Win_rate:\"+(z.r*100).toFixed(1)+\"%\"}})\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                        if (currentMode===0) {\r\n                            console.log('ULP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                            )\r\n                        } else {\r\n                            console.log('UWP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroAttackerProbs: heroProbs, heroWinPacks: heroLostPacks}\r\n                            )\r\n                        }\r\n                    }\r\n                }).finally(()=>{\r\n                    this.requestsInProgress--\r\n                    this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: IHeroPack) {\r\n        const currentMode=this.currentMode\r\n        this.initialized=true\r\n        const requestId=this.requestSeq++\r\n            this.setState(\r\n                {heroIds: heroIds, heroLostProbs: new Map<number, number>(), heroLostPacks: [], heroWinProbs: new Map<number, number>(), heroWinPacks: [],heroCounterProbs:new Map<number, number>(),heroAttackerProbs:new Map<number,number>()}\r\n            )\r\n        if (heroIds.hIds.length == 5) {\r\n            this.getPacksData(heroIds,0)\r\n            this.getPacksData(heroIds,1)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n            console.log('RIP+1',requestId,this.state.requestsInProgress)\r\n            this.requestsInProgress++\r\n            let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        console.log(\"CS-S\",requestId,this.currentMode,0)\r\n                            let heroProbs = new Map<number, number>()\r\n                            if (result['items']) {\r\n                                for (const j in result['items']) {\r\n                                    if (result['items'][j]['d']) {\r\n                                        heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                    }\r\n                                }\r\n                            }\r\n                this.setState({\r\n                    heroLostProbs: heroProbs,\r\n                    heroIds: heroIds,\r\n                    heroLostPacks: []\r\n                });\r\n                            console.log('XXX2 nulled heroLostPacks:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                            this.setState({\r\n                                heroLostProbs: new Map<number, number>(),\r\n                                heroIds: heroIds,\r\n                                heroLostPacks: []\r\n                            });\r\n                    }\r\n                ).finally(()=>{\r\n                    console.log('ReqFin0 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n            this.requestsInProgress++\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        console.log(\"CS-S\",requestId,this.currentMode,1)\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroWinProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: []\r\n                        });\r\n                        console.log('XXX2 nulled win lost packs:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                        this.setState({\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: [],\r\n                            heroWinProbs: new Map<number, number>()\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                console.log('ReqFin1 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            }\r\n        }\r\n    }\r\n\r\n    filterAttackerHero(e: any) {\r\n        // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroAttackerFilter = this.state.heroAttackerFilter\r\n            const index = heroAttackerFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroAttackerFilter.splice(index, 1);\r\n            } else {\r\n                heroAttackerFilter.push(heroId)\r\n            }\r\n            this.setState({heroAttackerFilter: heroAttackerFilter})\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.hIds.includes(heroId) && heroIds.hIds.length < 5) {\r\n                heroIds.hIds.push(heroId)\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.hIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.hIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMode(e:any,value:string) {\r\n        const newMode=~~value\r\n        this.currentMode=newMode\r\n        console.log('Set mode ',newMode)\r\n        this.setState({currentMode:newMode})\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n\r\n    render() {\r\n        const currentMode=this.state.currentMode\r\n            if (this.state.heroIds.hIds.length == 5) {\r\n               /* if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                console.log('RE',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks)\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Counter-pack</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Attack-pack</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Selected pack\":\"Loading...just wait! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(currentMode===0?\"Counter heroes - fill free to filter packs\":\"Sucked heroes - fill free to filter packs\"):\"Loading...just wait!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={currentMode===0?this.state.heroCounterProbs:this.state.heroAttackerProbs}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={10+currentMode}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.state.currentMode===0?\"Counter hero packs\":\"Sucked defenders hero packs\"):\"Loading...just wait! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={20+currentMode}/>\r\n                    </Container>\r\n                )\r\n            } else {\r\n                /*if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                return (\r\n\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+this.currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Counter-pack</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Attack-pack</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.currentMode===0?\"Choose pack to attack\":\"Choose pack of winners\"):\"Loading...just wait!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid heroIds={this.state.heroIds} heroProbs={this.currentMode===0?this.state.heroLostProbs:this.state.heroWinProbs}\r\n                                      selectHero={this.selectHero} key={30+this.currentMode}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return b.heroProb-a.heroProb\r\n        })\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0})\r\n            }\r\n        }\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.hIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} className={\"heroGrid\"} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Box, Button, Grid, Menu, MenuItem, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    anchorEl: any,\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds,\r\n            anchorEl: null,\r\n        };\r\n        this.addToAttackQueue=this.addToAttackQueue.bind(this)\r\n        this.addToDefenderQueue=this.addToDefenderQueue.bind(this)\r\n        this.seeCounterPacks=this.seeCounterPacks.bind(this)\r\n        this.seeAttackerPacks=this.seeAttackerPacks.bind(this)\r\n        this.handleMenuClick=this.handleMenuClick.bind(this)\r\n        this.handleMenuClose=this.handleMenuClose.bind(this)\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.state.heroIds.hIds.length\r\n        const heroes = this.state.heroIds.hIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n\r\n    addToAttackQueue(e:any) {\r\n        console.log(\"addToAttackQueue\")\r\n    }\r\n    addToDefenderQueue(e:any) {\r\n        console.log(\"addToDefenderQueue\")\r\n    }\r\n    seeCounterPacks(e:any) {\r\n        console.log(\"seeCounterPacks\")\r\n    }\r\n    seeAttackerPacks(e:any) {\r\n        console.log(\"seeAttackerPacks\")\r\n    }\r\n\r\n    handleMenuClick(e:any) {\r\n        this.setState({anchorEl:e.currentTarget})\r\n    }\r\n    handleMenuClose(e:any) {\r\n        this.setState({anchorEl:null})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Box className={\"heroPackSelected\"} sx={{\r\n                bgcolor: 'primary.light'\r\n            }}>\r\n            {this.renderHeroPack()}\r\n                <Box\r\n                    id=\"demo-positioned-button\"\r\n                    aria-controls=\"demo-positioned-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                    onClick={this.handleMenuClick}\r\n                    className={\"heroButtonThreeDots\"}\r\n                >\r\n                    &#10247;\r\n                </Box>\r\n                <Box className={\"heroPackSelectedExtStatus\"}>{this.state.heroIds.extendedInfo?.statusInfo?this.state.heroIds.extendedInfo.statusInfo:\"\"}</Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={this.addToAttackQueue}>Add to Attack roulette (not implemented)</MenuItem>\r\n                    <MenuItem onClick={this.addToDefenderQueue}>Add to Defender roulette (not implemented)</MenuItem>\r\n                    <MenuItem onClick={this.seeCounterPacks}>See counter packs (not implemented)</MenuItem>\r\n                    <MenuItem onClick={this.seeAttackerPacks}>See sucked packs (not implemented)</MenuItem>\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        //if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x)\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n       // }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Box className={\"heroCounterHeroGrid\"} sx={{\r\n\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon,HeroPackSelected} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    heroLostPacks: IHeroPack[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: IHeroPack) {\r\n        const items = []\r\n        const hl=heroPack.hIds.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack.hIds[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const heroPackFull of this.props.heroLostPacks) {\r\n            const heroPack=heroPackFull.hIds\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            /*items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)*/\r\n                items.push(<HeroPackSelected  key={cnt++} heroIds={heroPackFull} deselectHero={this.props.onFilterCounterHero}/>)\r\n        }\r\n        if (items.length===0) {\r\n            items.push(\r\n                <Stack direction=\"row\" key={cnt++} sx={{\r\n                    bgcolor: 'primary.light',\r\n                    m:0.25\r\n                }}>empty</Stack>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark',\r\n\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},heroIdsD:{hIds:heroIdsD},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                marginBottom: '3px',\r\n                borderRadius: '10px',\r\n            }}key={i}>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n                </Box>\r\n                <Box className={\"heroQueueTwoVSBox\"}><span className={\"heroQueueTwoVSPosition\"}>{x.position}</span><span className={\"heroQueueTwoVSVS\"}>VS</span></Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Box><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box className={\"heroQueueTwoBox\"}>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            heroIdsD: props.heroIdsD ? props.heroIdsD : [],\r\n            displayEditA: props.heroIdsA.hIds.length===5,\r\n            displayEditD: props.heroIdsD.hIds.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds }})\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.hIds.length>0?\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Done</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.hIds.length>0?\r\n                        <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Done</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Choose Defender heroes\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && this.state.heroIdsD.hIds.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={{hIds:[]}} heroIdsD={{hIds:[]}} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Add to training</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Training queue</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            displayEditA: props.heroIdsA.hIds.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Done</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip\r\n                    label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            displayEditA: props.heroIdsA.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Done</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Choose Defender heroes\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    static formatParameter(x:any,name:string,goodName:string,multiplier:number,unit:string,prec:number) {\r\n        return x[name] && x[name]!==null && x[name]!==\"null\"?\"\"+goodName+\"=\"+(x[name]*multiplier).toFixed(prec)+unit+\", \":\"\"\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        let extText=\"\"\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumwinrate\",\"Sum_win_rate_as_attacker\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avgwinrate\",\"Average_win_rate_as_attacker\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntwinpacks\",\"Uniq_packs_tested_as_attacker\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsa\",\"Won_fights_as_attacker\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsa\",\"Total_fights_as_attacker\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumlossrate\",\"Sum_win_rate_as_defender\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avglossrate\",\"Average_win_rate_as_defender\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntlosspacks\",\"Uniq_packs_tested_as_defender\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsd\",\"Won_fights_as_defender\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsd\",\"Total_fights_as_defender\",1,\"\",0)\r\n\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}},testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>empty</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue added by user. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current top attacker packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current top defenders packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current classic packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={{hIds:[]}} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={{hIds:[]}} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Add attacker</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Attack queue</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Add defender</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Defenders list</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: ~~newMode})\r\n    }\r\n    setMode(e:any,value:string) {\r\n            this.setState({currentMode: ~~value})\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={{hIds:[]}} currentMode={0}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateFunction={this.navigateToMode} currentMode={1}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToMode} currentMode={0}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" color=\"primary\">Find pack</ToggleButton>\r\n                <ToggleButton value=\"2\" color=\"primary\">One fight</ToggleButton>\r\n                <ToggleButton value=\"3\" color=\"primary\">Roulette</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect","import React from 'react';\nimport './App.css';\n\nimport { ThemeProvider } from '@mui/system';\nimport {HeroModeSelect} from \"./components\";\nimport {createTheme} from \"@mui/material\";\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#5d4037',\n            contrastText: '#fff',\n            light: '#8b6b61',\n            dark: '#321911',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#000',\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <ThemeProvider theme={customTheme}>\n        <HeroModeSelect currentMode={0}/>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}