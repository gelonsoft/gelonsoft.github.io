{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","components/heroSelect.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","heroId","heroesList","get","a1","a2","i","length","result","Map","x","heroData","set","heroName","battleOrder","initHeroesList","z","padLeadingZeros","num","size","s","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","opacity","borderRadius","renderType","renderForHeroSelectGrid","renderForPackEmptySelected","renderForHeroCounterHeroGrid","renderForHeroPackGrid","minWidth","minHeight","React","Component","HeroSelect","initialized","heroIds","heroLostPacks","heroCounterFilter","selectHero","bind","deselectHero","filterCounterHero","fetch","method","body","JSON","stringify","then","res","json","cnt","heroProbs","lostPack","y","push","Array","from","keys","heroPackId","mmd","setState","heroCounterProbs","undefined","getPacksData","j","console","log","error","e","target","dataset","heroid","index","indexOf","splice","updateHeroCounterFilter","includes","updateHeroIds","Container","Divider","Chip","label","onFilterCounterHero","HeroGrid","items","heroArray","values","value","sort","a","b","container","spacing","justifyContent","renderHeroes","HeroPackSelected","heroCount","heroes","h1","h2","Stack","direction","renderHeroPack","HeroCounterHeroGrid","columns","HeroCounterPackGrid","heroPack","hl","newHeropack","renderOneHeroPack","margin","renderHeroPacks","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e157fa.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder:number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result:Map<number, Hero>=new Map<number,Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId=~~x\r\n        if (heroId>1 && heroId<599) {\r\n            const heroData:any = HStorage.heroDescStorage[x]\r\n            result.set(heroId,{\r\n                heroId: heroId,\r\n                heroName: HStorage.localeStorage[\"LIB_HERO_NAME_\"+heroId],\r\n                battleOrder:heroData.battleOrder\r\n            })\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\nstatic getHeroById(heroId: number) {\r\n    return HeroData.heroesList.get(heroId)\r\n}\r\nstatic compareArrays (a1:any[],a2:any[]) {var i = a1.length; if (i !== a2.length) return false; while (i--) { if (a1[i] !== a2[i]) return false; } return true}\r\n\r\nstatic heroesList: Map<number, Hero> = initHeroesList()\r\n    static z = new Map([\r\n    [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n    [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n    [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n    [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n    [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n    [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n    [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n    [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n    [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n    [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n    [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n    [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n    [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n    [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n    [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n    [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n    [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n    [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n    [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n    [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n    [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n    [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n    [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n    [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n    [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n    [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n    [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n    [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n    [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n    [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n    [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n    [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n    [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n    [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n    [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n    [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n    [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n    [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n    [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n    [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n    [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n    [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n    [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n    [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n    [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n    [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n    [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n    [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n    [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n    [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n    [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n    [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n    [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n    [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = ~~this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: 0,\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = ~~this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: 0,\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = ~~this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box sx={{\r\n                //width: '7em',\r\n                maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                //minWidth: '7.1em',\r\n                //width: 92,\r\n                //height: 102,\r\n                alignItems: 'flex-end',\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                m: 0.0,\r\n                borderRadius: 2,\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>empty</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import React from \"react\";\r\nimport {Box, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\n\r\ninterface IProps {\r\n    heroIds: number[]\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[],\r\n    heroProbs?: Map<number, number>,\r\n    heroCounterProbs?: Map<number, number>,\r\n    heroLostPacks: number[][],\r\n    heroCounterFilter: number[],\r\n}\r\n\r\nexport class HeroSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: []\r\n        };\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n    }\r\n    initialized: boolean = false\r\n\r\n\r\n    getPacksData(heroIds: number[]) {\r\n        this.initialized=true\r\n        fetch(\"https://webhooks.mongodb-realm.com/api/client/v2.0/app/application-0-kwiog/service/herosample/incoming_webhook/webhook0?secret=djjfhuiashdiuhas\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\"query\": {\"command\": \"findLostPackHeroes\", \"doc\": {\"hids\": heroIds}}})\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['resulta']) {\r\n                        const heroLostPacks = []\r\n                        var cnt = 0\r\n                        const heroProbs=new Map<number,number>()\r\n                        for (const x in result['resulta']) {\r\n                            const lostPack = []\r\n                            for (const y in result['resulta'][x]) {\r\n                                var heroId = result['resulta'][x][y]['$numberDouble']?result['resulta'][x][y]['$numberDouble']:result['resulta'][x][y]['$numberInt']\r\n\r\n                                if (heroId) {\r\n                                    lostPack.push(~~heroId)\r\n                                    var m = heroProbs.get(~~heroId)\r\n                                    if (m) {\r\n                                        m++\r\n                                    } else {\r\n                                        m=1\r\n                                    }\r\n                                    heroProbs.set(~~heroId,m)\r\n                                    cnt++\r\n                                }\r\n\r\n                            }\r\n                            heroLostPacks.push(lostPack)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd=heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt >0) heroProbs.set(~~heroPackId,100*mmd/cnt)\r\n                        }\r\n                        this.setState(\r\n                            {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                        )\r\n                    }\r\n                })\r\n    }\r\n\r\n    updateHeroIds(heroIds: number[]) {\r\n        this.setState(\r\n            {heroIds: heroIds, heroProbs: undefined, heroLostPacks: []}\r\n        )\r\n        if (heroIds.length == 5) {\r\n            this.getPacksData(heroIds)\r\n        } else {\r\n            fetch(\"https://webhooks.mongodb-realm.com/api/client/v2.0/app/application-0-kwiog/service/herosample/incoming_webhook/webhook0?secret=djjfhuiashdiuhas\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\"query\": {\"command\": \"findLostPackHeroesStat\", \"doc\": {\"hids\": heroIds}}})\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        var heroProbs = new Map<number, number>()\r\n                        if (result['resulta']) {\r\n                            for (var j in result['resulta']) {\r\n                                console.log('RES', result[j])\r\n                                if (result['resulta'][j]['$numberDouble']) {\r\n                                    heroProbs.set(~~j, result['resulta'][j]['$numberDouble'])\r\n                                }\r\n                                if (result['resulta'][j]['$numberInt']) {\r\n                                    heroProbs.set(~~j, result['resulta'][j]['$numberDouble'])\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroLostPacks: []\r\n                        });\r\n                    },\r\n                    // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n                    // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n                    (error) => {\r\n                        var heroProbs = new Map<number, number>()\r\n                        this.setState({\r\n                            heroProbs: undefined,\r\n                            heroIds: heroIds,\r\n                            heroLostPacks: []\r\n                        });\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    updateHeroCounterFilter(heroCounterFilter: number[]) {\r\n        this.setState({heroCounterFilter: heroCounterFilter})\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n        console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.updateHeroCounterFilter(heroCounterFilter)\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.updateHeroCounterFilter(heroCounterFilter)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.heroIds.length == 5 && this.state.heroLostPacks.length>0) {\r\n            if (!this.initialized) {this.getPacksData(this.state.heroIds)}\r\n            return (\r\n                <Container sx={{\r\n                    bgcolor: 'background.default'\r\n                }}>\r\n                    <Divider><Chip label={\"Selected pack\"}/></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                    <Divider><Chip label={\"Counter heroes - fill free to filter packs\"}/></Divider>\r\n                    <HeroCounterHeroGrid heroProbs={this.state.heroCounterProbs}\r\n                                         onFilterCounterHero={this.filterCounterHero}\r\n                                         heroCounterFilter={this.state.heroCounterFilter}/>\r\n                    <Divider><Chip label={\"Counter hero packs\"}/></Divider>\r\n                    <HeroCounterPackGrid heroLostPacks={this.state.heroLostPacks} onFilterCounterHero={this.filterCounterHero}\r\n                                         heroCounterFilter={this.state.heroCounterFilter}/>\r\n                </Container>\r\n            )\r\n        }\r\n    else\r\n        {\r\n            return (\r\n                <Container sx={{\r\n                    //width: '100%',\r\n                    m:0.25,\r\n                    p:0.25,\r\n                    bgcolor: 'background.default'\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                    <Divider><Chip label={\"Choose pack to attack\"}/></Divider>\r\n                    <Box sx={{\r\n                        m: 0,\r\n                        p: 0\r\n                    }}>\r\n                        <HeroGrid heroIds={this.state.heroIds} heroProbs={this.state.heroProbs}\r\n                                  selectHero={this.selectHero}/>\r\n                    </Box>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default HeroSelect;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[]\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            heroArray.push({heroId:value.heroId,heroProb:heroProb})\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return b.heroProb-a.heroProb\r\n        })\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Grid, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[]\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.state.heroIds.length\r\n        const heroes = this.state.heroIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Stack sx={{\r\n                justifyContent: 'center',\r\n\r\n                //width: '100%',\r\n                //minWidth: '40px',\r\n                //maxWidth: '80px'\r\n            }} direction=\"row\" spacing={1}>\r\n            {this.renderHeroPack()}\r\n            </Stack>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs?: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x)\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Grid container spacing={0} columns={5} sx={{\r\n            m: 0,\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    heroLostPacks: number[][]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: number[]) {\r\n        const items = []\r\n        const hl=heroPack.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const heroPack of this.props.heroLostPacks) {\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark'\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from 'react';\nimport './App.css';\n\nimport { ThemeProvider } from '@mui/system';\nimport {HeroSelect} from \"./components\";\nimport {createTheme} from \"@mui/material\";\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#5d4037',\n            contrastText: '#fff',\n            light: '#8b6b61',\n            dark: '#321911',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#000',\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <ThemeProvider theme={customTheme}>\n        <HeroSelect heroIds={[4,33,34,35]}/>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}