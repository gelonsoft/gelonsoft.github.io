{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","types/MyNavigator.ts","types/MySettings.ts","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroFAQ.tsx","components/heroBestPackMode.tsx","components/heroModeSelect.tsx","components2/HeroModernIcon.tsx","components2/SelectedHeroPack.tsx","components2/HeroModernGrid.tsx","components2/HeaderBlock.tsx","components2/ModernSlider.tsx","components2/CounterPackFilterModal.tsx","components2/CounterPackResults.tsx","components2/CounterPackScreen.tsx","components2/TestComponent.tsx","components2/GLogin.tsx","utils/refreshToken.tsx","components2/GLogout.tsx","components2/MainScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","a","r","x","hIds","extendedInfo","statusInfo","num","size","s","length","heroId","heroesList","get","bossList","a1","a2","i","emptyHeroProbMap","Map","heroNameRecognitionMap","zeroHeroProbMap","emptyHeroPack","heroIdsOrderedByName","emptyHero","heroName","battleOrder","allHeroesIds","result","heroData","heroRec","set","push","sort","b","initHeroesList","initBossList","z","padLeadingZeros","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","flexGrow","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","console","error","renderType","renderForPackEmptySelected","opacity","borderRadius","renderForHeroSelectGrid","renderForHeroCounterHeroGrid","renderForHeroPackGrid","React","Component","MyNavigator","window","location","href","indexOf","mode","currentPack","currentDefenderPack","setCurrentPack","setDefenderPack","heroModeSelect","navigateToTopMode","heroRouletteMode","navigateToMode","heroAddAttackerMode","setHeroPack","heroAddDefenderMode","heroCounterPackMode","updateHeroIds","undefined","heroOneFightMode","heroAddToTrainMode","setAttackHeroPack","setDefenderHeroPack","heroRouletteDefendersMode","heroRouletteAttackersQueueMode","disableClose","MySettings","mainVersion","apiUrl","HeroCounterPackMode","currentMode","requestsInProgress","initialized","requestSeq","heroIds","heroLostPacks","heroCounterFilter","heroWinPacks","heroAttackerFilter","heroLostProbs","heroWinProbs","heroCounterProbs","heroAttackerProbs","selectHero","bind","deselectHero","filterCounterHero","filterAttackerHero","selectMode","heroParams","setState","url","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","Number","parseFloat","w","t","Array","from","keys","heroPackId","mmd","finally","requestId","getPacksData","j","e","target","dataset","heroid","index","splice","includes","value","newMode","Container","flexDirection","justifyContent","ToggleButtonGroup","exclusive","onChange","ToggleButton","Divider","Chip","label","onFilterCounterHero","mainHeroPack","mainHeroPackType","emptyMessage","showAll","HeroGrid","items","heroArray","values","container","spacing","renderHeroes","HeroPackSelected","anchorEl","addToAttackQueue","addToDefenderQueue","seeCounterPacks","handleMenuClick","handleMenuClose","seeTrainMode","seeTrainModeA","seeTrainModeD","heroCount","heroes","h1","h2","navigate","heroIdsA","heroIdsD","currentTarget","menuItems","key","MenuItem","isPackHasBoss","renderHeroPack","id","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","renderMenuItems","HeroCounterHeroGrid","HeroCounterPackGrid","heroPack","hl","newHeropack","heroPackFull","Stack","direction","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","log","testqid","newQ","position","testQId","marginBottom","Button","isCloseDisabled","hidden","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","variant","emptyMap","marginTop","disabled","renderA","renderB","renderSendButton","HeroOneFightMode","setMode","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","marginLeft","marginRight","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","extText","formatParameter","typ","showCloseButton","name","goodName","multiplier","unit","prec","HeroRouletteMode","HeroFAQ","padding","HeroBestPackMode","heroesFilter","filterHero","updateHeroes","heroFilter","gMode","heroUniqMap","HeroModeSelect","rouletteSubMode","oneFightSubMode","navigateToTopFunction","HeroModernIcon","boxClassName","additionalClasses","isAdded","isRemoved","SelectedHeroPack","hId","onHeroSelect","navigator","clipboard","writeText","cwr","cc","Tooltip","title","renderHeroIcons","copyLink","wra","ca","wrd","cd","HeroModernGrid","addedHeroes","removedHeroes","selectedHeroes","highlightedHeroes","HeaderBlock","openMenuFunction","message","ModernSlider","useState","initial","minFights","setMinFights","marks","min","max","Slider","getAriaLabel","isArray","callback","getAriaValueText","track","step","valueLabelDisplay","disableSwap","CounterPackFilterModal","modalOpen","setModalOpen","memoArray","heroFilterInclude","setHeroFilterInclude","heroFilterExclude","setHeroFilterExclude","handleModalClose","Modal","filterMaxWinRate","filterMinWinRate","minWinRate","filterMaxFights","filterMinFights","newHeroFilterInclude","newHeroFilterExclude","includeIndex","excludeIndex","constructHeroFilter","pHeroFilter","escape","CounterPackResults","pMinFights","params","pHeroFilterInclude","split","pHeroFilterExclude","pMinWinRate","setMinWinRate","heroPacks","setHeroPacks","setRequestsInProgress","setTotalFound","setFilterMinWinRate","setFilterMaxWinRate","setFilterMinFights","setFilterMaxFights","filterOpened","setFilterOpened","isInitialized","setIsInitialized","isUpdateOccurred","setIsUpdateOccurred","setMemoArray","updateHeroPackInfo","pHeroPack","changeHeaderMessageFunction","nTotalFound","nFilterMinWinRate","nFilterMaxWinRate","nFilterMinFights","nFilterMaxFights","minwr","maxwr","minc","maxc","tc","wa","wd","Math","floor","onFilterClick","handleDeleteFilterChip","filterType","parentNode","filtertype","filterheroid","useEffect","newMemoArray","onDelete","deleteIcon","renderFilterBar","messages","CounterPackScreen","useParams","useMatch","useNavigate","useLocation","headerMessage","setHeaderMessage","templateHeroPack","getEmptyHeroPack","queryParams","URLSearchParams","search","heroAvailable","setHeroAvailable","newHeroPack","updateAvailableHeroes","newMessage","mainUrl","TestComponent","changeMinFights","renderSliderText","changeValue","activeThumb","GLogin","useGoogleLogin","onSuccess","profileObj","alert","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","localStorage","setItem","id_token","setTimeout","refreshTokenSetup","onFailure","clientId","isSignedIn","accessType","signIn","GLogout","signOut","useGoogleLogout","onLogoutSuccess","MainScreen","navMenuIndex","navMenuOpened","changeMenu","toggleMenu","event","newValue","width","height","overflowX","Slide","in","Tabs","orientation","borderRight","borderColor","Tab","role","path","element","replace","to","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e11d65.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nimport {IHeroPack} from \"./IHeroPack\";\r\n\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder: number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result: Map<number, Hero> = new Map<number, Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId = ~~x\r\n        if (heroId >= 1 && heroId < 599) {\r\n            const heroData: any = HStorage.heroDescStorage[x]\r\n            const heroName=HStorage.localeStorage[\"LIB_HERO_NAME_\" + heroId]\r\n            const heroRec={\r\n                heroId: heroId,\r\n                heroName: heroName,\r\n                battleOrder: heroData.battleOrder\r\n            }\r\n            result.set(heroId, heroRec)\r\n            HeroData.heroIdsOrderedByName.push(heroId)\r\n            HeroData.allHeroesIds.push(heroId)\r\n            HeroData.zeroHeroProbMap.set(heroId,0)\r\n            HeroData.heroNameRecognitionMap.set(heroName,heroId)\r\n        }\r\n        HeroData.heroIdsOrderedByName.sort((a,b)=> {\r\n            return (result.get(a)?.heroName || \"\")>(result.get(b)?.heroName || \"\")?1:-1\r\n        })\r\n    }\r\n    return result\r\n}\r\n\r\nfunction initBossList() {\r\n    const result = new Map<number,Hero>()\r\n    result.set(8010,{heroId:8010,heroName:\"Огонь\",battleOrder:0})\r\n    result.set(8011,{heroId:8011,heroName:\"Тьма\",battleOrder:0})\r\n    result.set(8012,{heroId:8012,heroName:\"Свет\",battleOrder:0})\r\n    result.set(8013,{heroId:8013,heroName:\"Земля\",battleOrder:0})\r\n    result.set(8014,{heroId:8014,heroName:\"Вода\",battleOrder:0})\r\n    result.set(8015,{heroId:8015,heroName:\"Воздух\",battleOrder:0})\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\n    static isPackHasBoss(a:number[]) {\r\n        let r=false\r\n        if (a) {\r\n            for( const x of a) {\r\n                r = r || (x>=8010 && x<=8015)\r\n            }\r\n        }\r\n        return r\r\n    }\r\n    static emptyHeroProbMap=new Map<number,number>()\r\n    static heroNameRecognitionMap=new Map<string,number>()\r\n    static zeroHeroProbMap=new Map<number,number>()\r\n    static emptyHeroPack: IHeroPack = {hIds: [], extendedInfo: {statusInfo: \"\"}}\r\n    static getEmptyHeroPack(): IHeroPack {\r\n        return {\r\n            hIds: [],\r\n            extendedInfo: {statusInfo: \"\"}\r\n        }\r\n    }\r\n    static heroIdsOrderedByName:number[] = []\r\n    static padLeadingZeros(num: number, size: number) {\r\n        let s = num + \"\";\r\n        while (s.length < size) s = \"0\" + s;\r\n        return s;\r\n    }\r\n\r\n    static getHeroById(heroId: number) {\r\n        return HeroData.heroesList.get(heroId) || HeroData.bossList.get(heroId)\r\n    }\r\n\r\n    static compareArrays(a1: any[], a2: any[]) {\r\n        var i = a1.length;\r\n        if (i !== a2.length) return false;\r\n        while (i--) {\r\n            if (a1[i] !== a2[i]) return false;\r\n        }\r\n        return true\r\n    }\r\n\r\n    static emptyHero: Hero = {heroId: 0, heroName: \"пусто\", battleOrder: 0}\r\n    static allHeroesIds: number[] = []\r\n    static heroesList: Map<number, Hero> = initHeroesList()\r\n    static bossList: Map<number,Hero> = initBossList()\r\n    static z = new Map([\r\n        [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n        [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n        [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n        [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n        [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n        [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n        [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n        [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n        [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n        [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n        [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n        [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n        [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n        [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n        [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n        [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n        [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n        [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n        [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n        [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n        [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n        [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n        [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n        [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n        [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n        [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n        [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n        [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n        [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n        [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n        [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n        [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n        [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n        [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n        [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n        [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n        [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n        [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n        [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n        [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n        [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n        [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n        [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n        [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n        [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n        [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n        [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n        [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n        [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n        [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n        [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n        [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n        [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n        [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n    ]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        } else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        } else {\r\n            console.error('HIC render',this.props.renderType,this.props.heroId)\r\n            return this.renderForPackEmptySelected()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n        this.renderForPackEmptySelected()\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box className={\"heroIconGridEmpty\"} sx={{\r\n                /*maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',*/\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n               /* fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,*/\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>пусто</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import {IHeroPack} from \"./IHeroPack\";\r\nimport {HeroModeSelect,HeroCounterPackMode} from \"../components\";\r\nimport HeroRouletteDefendersMode from \"../components/heroRouletteDefendersMode\";\r\nimport HeroRouletteAttackersQueueMode from \"../components/heroRouletteAttackersQueueMode\";\r\nimport HeroAddAttackerMode from \"../components/heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"../components/heroAddDefenderMode\";\r\nimport HeroRouletteMode from \"../components/heroRouletteMode\";\r\nimport HeroOneFightMode from \"../components/heroOneFightMode\";\r\nimport HeroAddToTrainMode from \"../components/heroAddToTrainMode\";\r\n\r\nexport class MyNavigator {\r\n    static heroModeSelect?:HeroModeSelect\r\n    static heroCounterPackMode?:HeroCounterPackMode\r\n    static heroRouletteDefendersMode?:HeroRouletteDefendersMode\r\n    static heroRouletteAttackersQueueMode?:HeroRouletteAttackersQueueMode\r\n    static heroAddAttackerMode?:HeroAddAttackerMode\r\n    static heroAddDefenderMode?:HeroAddDefenderMode\r\n    static heroRouletteMode?:HeroRouletteMode\r\n    static heroOneFightMode?:HeroOneFightMode\r\n    static heroAddToTrainMode?:HeroAddToTrainMode\r\n    static currentPack:IHeroPack = {hIds:[]}\r\n    static currentDefenderPack:IHeroPack = {hIds:[]}\r\n    static disableClose = window.location.href.indexOf(\"zzzz\")<0\r\n    static isCloseDisabled() {\r\n        return window.location.href.indexOf(\"zzzz\")<0\r\n    }\r\n    static navigate(mode:string,currentPack?:IHeroPack,currentDefenderPack?:IHeroPack) {\r\n        if (currentPack) {\r\n            MyNavigator.setCurrentPack(currentPack)\r\n        }\r\n        if (currentDefenderPack) {\r\n            MyNavigator.setDefenderPack(currentDefenderPack)\r\n        }\r\n        switch (mode) {\r\n            case \"RouletteAttackQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,0)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(0)\r\n                }\r\n                if (MyNavigator.heroAddAttackerMode && currentPack) {\r\n                    MyNavigator.heroAddAttackerMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"RouletteDefenderQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,2)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(2)\r\n                }\r\n                if (MyNavigator.heroAddDefenderMode && currentPack) {\r\n                    MyNavigator.heroAddDefenderMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"CounterPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(0)\r\n                }\r\n                if (MyNavigator.heroCounterPackMode && currentPack) {\r\n                    MyNavigator.heroCounterPackMode.updateHeroIds(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"OneFightPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(2,undefined,1)\r\n                }\r\n                if (MyNavigator.heroOneFightMode) {\r\n                    MyNavigator.heroOneFightMode.navigateToMode(1)\r\n                }\r\n                if (MyNavigator.heroAddToTrainMode) {\r\n                    if (currentPack) {\r\n                        MyNavigator.heroAddToTrainMode.setAttackHeroPack(currentPack)\r\n                    }\r\n                    if (currentDefenderPack) {\r\n                        MyNavigator.heroAddToTrainMode.setDefenderHeroPack(currentDefenderPack)\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static setCurrentPack(currentPack:IHeroPack) {\r\n        MyNavigator.currentPack=currentPack\r\n    }\r\n    static setDefenderPack(currentDefenderPack:IHeroPack) {\r\n        MyNavigator.currentDefenderPack=currentDefenderPack\r\n    }\r\n}","export class MySettings {\r\n    static mainVersion=1\r\n    static apiUrl=\"https://g92e0914be8be53-db202112141238.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat2/hws/\"\r\n}","import React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    heroLostProbs: Map<number, number>,\r\n    heroCounterProbs: Map<number, number>,\r\n    heroAttackerProbs: Map<number, number>,\r\n    heroLostPacks: IHeroPack[],\r\n    heroWinPacks: IHeroPack[],\r\n    heroWinProbs: Map<number,number>\r\n    heroCounterFilter: number[],\r\n    heroAttackerFilter: number[],\r\n    requestsInProgress: number,\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            heroWinPacks: [],\r\n            heroAttackerFilter: [],\r\n            requestsInProgress: 0,\r\n            heroLostProbs: new Map<number,number>(),\r\n            heroWinProbs: new Map<number,number>(),\r\n            heroCounterProbs: new Map<number,number>(),\r\n            heroAttackerProbs: new Map<number,number>(),\r\n            currentMode: props.currentMode\r\n        };\r\n        this.requestsInProgress=0\r\n        this.currentMode=props.currentMode\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n        this.filterAttackerHero = this.filterAttackerHero.bind(this)\r\n        this.selectMode=this.selectMode.bind(this)\r\n        this.updateHeroIds(this.state.heroIds)\r\n        MyNavigator.heroCounterPackMode=this\r\n        //console.log('created heroCounterPackMode',this.state.heroIds)\r\n    }\r\n    currentMode: number\r\n    requestsInProgress: number\r\n    initialized: boolean = false\r\n    requestSeq=0\r\n\r\n\r\n    getPacksData(heroIds:IHeroPack,currentMode:number) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=MySettings.apiUrl\r\n        if (currentMode===0) {\r\n            url+=\"findLostPackHeroes/\"\r\n        } else {\r\n            url+=\"findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs = new Map<number, number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = []\r\n                            if (currentMode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n\r\n                            }\r\n                            cnt++\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:\"win_rate=\"+(Number.parseFloat(z.r)*100).toFixed(1)+\"% won_fights=\"+z.w+\" total_fights=\"+z.t }})\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                        if (currentMode===0) {\r\n                            //console.log('ULP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                            )\r\n                        } else {\r\n                            //console.log('UWP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroAttackerProbs: heroProbs, heroWinPacks: heroLostPacks}\r\n                            )\r\n                        }\r\n                    }\r\n                }).finally(()=>{\r\n                    this.requestsInProgress--\r\n                    this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: IHeroPack) {\r\n        const currentMode=this.currentMode\r\n        this.initialized=true\r\n        const requestId=this.requestSeq++\r\n            this.setState(\r\n                {heroIds: heroIds, heroLostProbs: new Map<number, number>(), heroLostPacks: [], heroWinProbs: new Map<number, number>(), heroWinPacks: [],heroCounterProbs:new Map<number, number>(),heroAttackerProbs:new Map<number,number>()}\r\n            )\r\n        if (heroIds.hIds.length == 5) {\r\n            this.getPacksData(heroIds,0)\r\n            this.getPacksData(heroIds,1)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n            //console.log('RIP+1',requestId,this.state.requestsInProgress)\r\n            this.requestsInProgress++\r\n            let url=MySettings.apiUrl+\"findLostPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,0)\r\n                            let heroProbs = new Map<number, number>()\r\n                            if (result['items']) {\r\n                                for (const j in result['items']) {\r\n                                    if (result['items'][j]['d']) {\r\n                                        heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                    }\r\n                                }\r\n                            }\r\n                this.setState({\r\n                    heroLostProbs: heroProbs,\r\n                    heroIds: heroIds,\r\n                    heroLostPacks: []\r\n                });\r\n                            //console.log('XXX2 nulled heroLostPacks:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                            this.setState({\r\n                                heroLostProbs: new Map<number, number>(),\r\n                                heroIds: heroIds,\r\n                                heroLostPacks: []\r\n                            });\r\n                    }\r\n                ).finally(()=>{\r\n                    //console.log('ReqFin0 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n            this.requestsInProgress++\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n            url=MySettings.apiUrl+\"/findWinPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,1)\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroWinProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: []\r\n                        });\r\n                        //console.log('XXX2 nulled win lost packs:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                        this.setState({\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: [],\r\n                            heroWinProbs: new Map<number, number>()\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                //console.log('ReqFin1 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            }\r\n        }\r\n    }\r\n\r\n    filterAttackerHero(e: any) {\r\n        // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroAttackerFilter = this.state.heroAttackerFilter\r\n            const index = heroAttackerFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroAttackerFilter.splice(index, 1);\r\n            } else {\r\n                heroAttackerFilter.push(heroId)\r\n            }\r\n            this.setState({heroAttackerFilter: heroAttackerFilter})\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.hIds.includes(heroId) && heroIds.hIds.length < 5) {\r\n                heroIds.hIds.push(heroId)\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.hIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                heroIds.hIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMode(e:any,value:string) {\r\n        const newMode=~~value\r\n        this.currentMode=newMode\r\n        //console.log('Set mode ',newMode)\r\n        this.setState({currentMode:newMode})\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentMode=this.state.currentMode\r\n        //console.log('RENDER CPM',currentMode,this.state.heroIds)\r\n            if (this.state.heroIds.hIds.length == 5) {\r\n               /* if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                //console.log('RE',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Выбранный пак\":\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero} key={this.state.heroIds.hIds.join(\",\")}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(currentMode===0?\"Кто из героев побеждает твой пак - можешь здесь отфильтровать\":\"Кто из героев проиграл твоему паку - можешь здесь отфильтровать\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={currentMode===0?this.state.heroCounterProbs:this.state.heroAttackerProbs}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={10+currentMode}\r\n\r\n                        />\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.state.currentMode===0?\"Контр-паки\":\"Кто проиграл твоему паку\"):\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={20+currentMode}\r\n                                             mainHeroPack={this.state.heroIds} mainHeroPackType={currentMode===0?'d':'a'} emptyMessage={\"Не переживай. Этот пак еще не победил в \"+(currentMode===0?\"защите. Попробуй добавить его в защищающиеся в режиме рулетки, и если он победит, то тут появится результат.\":\"атаке. Попробуй добавить его в атакующие в режиме рулетки, и если он победит, то тут появится результат.\")}\r\n                        />\r\n                    </Container>\r\n                )\r\n            } else {\r\n                //console.log('RE2',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                /*if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                return (\r\n\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+this.currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.currentMode===0?\"Выбрать защитный пак\":\"Выбрать атакующий пак\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid showAll={true} heroIds={this.state.heroIds} heroProbs={this.currentMode===0?this.state.heroLostProbs:this.state.heroWinProbs}\r\n                                      selectHero={this.selectHero} key={30+this.currentMode}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>,\r\n    showAll: boolean\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (this.props.showAll || heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb,heroName:value.heroName})\r\n            }\r\n        }\r\n\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0,heroName:value.heroName})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return a.heroName>b.heroName?1:-1\r\n        })\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.hIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} className={\"heroGrid\"} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Box, Button, Grid, Menu, MenuItem, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    heroIdsA?: IHeroPack,\r\n    heroIdsD?: IHeroPack,\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    //heroIds: IHeroPack,\r\n    anchorEl: any,\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            //heroIds: props.heroIds,\r\n            anchorEl: null,\r\n        };\r\n        this.addToAttackQueue=this.addToAttackQueue.bind(this)\r\n        this.addToDefenderQueue=this.addToDefenderQueue.bind(this)\r\n        this.seeCounterPacks=this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick=this.handleMenuClick.bind(this)\r\n        this.handleMenuClose=this.handleMenuClose.bind(this)\r\n        this.seeTrainMode=this.seeTrainMode.bind(this)\r\n        this.seeTrainModeA=this.seeTrainModeA.bind(this)\r\n        this.seeTrainModeD=this.seeTrainModeD.bind(this)\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.props.heroIds.hIds.length\r\n        const heroes = this.props.heroIds.hIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n\r\n    addToAttackQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteAttackQueue\",this.props.heroIds)\r\n    }\r\n    addToDefenderQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteDefenderQueue\",this.props.heroIds)\r\n    }\r\n\r\n    seeCounterPacks(e:any) {\r\n        MyNavigator.navigate(\"CounterPack\",this.props.heroIds)\r\n    }\r\n\r\n    seeTrainMode(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIdsA,this.props.heroIdsD)\r\n    }\r\n    seeTrainModeA(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIds,undefined)\r\n    }\r\n    seeTrainModeD(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\", undefined,this.props.heroIdsD)\r\n    }\r\n\r\n    handleMenuClick(e:any) {\r\n        this.setState({anchorEl:e.currentTarget})\r\n    }\r\n    handleMenuClose(e:any) {\r\n        this.setState({anchorEl:null})\r\n    }\r\n    renderMenuItems() {\r\n        const menuItems:JSX.Element[]=[]\r\n        let key=0\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeCounterPacks}>Посмотреть кто побеждает</MenuItem>)\r\n        if (!HeroData.isPackHasBoss(this.props.heroIds.hIds)) {\r\n            menuItems.push(<MenuItem key={key++} onClick={this.addToAttackQueue}>Добавить в атакующие в\r\n                рулетку</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.addToDefenderQueue}>Добавить в защищающиеся в\r\n                рулетку</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeA}>Добавить в атакующие в Одну\r\n                битву</MenuItem>)\r\n            menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeD}>Добавить в защищающиеся в Одну\r\n                битву</MenuItem>)\r\n            if (this.props.heroIdsA !== undefined && this.props.heroIdsD !== undefined) menuItems.push(<MenuItem\r\n                key={key++} onClick={this.seeTrainMode}>Add to Train both packs</MenuItem>)\r\n        }\r\n        return menuItems\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box className={\"heroPackSelected\"} sx={{\r\n                bgcolor: 'primary.light'\r\n            }}>\r\n            {this.renderHeroPack()}\r\n                <Box\r\n                    id=\"demo-positioned-button\"\r\n                    aria-controls=\"demo-positioned-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                    onClick={this.handleMenuClick}\r\n                    className={\"heroButtonThreeDots\"}\r\n                >\r\n                    &#10247;\r\n                </Box>\r\n                <Box className={\"heroPackSelectedExtStatus\"}>{this.props.heroIds.extendedInfo?.statusInfo?this.props.heroIds.extendedInfo.statusInfo:\"\"}</Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {this.renderMenuItems()}\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        //if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x) || -1\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob,heroName:hero.heroName})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return a.heroName>b.heroName?1:-1\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n       // }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Box className={\"heroCounterHeroGrid\"} sx={{\r\n\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon,HeroPackSelected} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    mainHeroPack?: IHeroPack,\r\n    mainHeroPackType?: string,\r\n    heroLostPacks: IHeroPack[],\r\n    emptyMessage: string,\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: IHeroPack) {\r\n\r\n        const items = []\r\n        const hl=heroPack.hIds.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack.hIds[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder,heroName:hero.heroName})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return a.heroName>b.heroName?1:-1\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const j in this.props.heroLostPacks) {\r\n\r\n            const heroPackFull=this.props.heroLostPacks[j]\r\n            const heroPack=heroPackFull.hIds\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            /*items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)*/\r\n                items.push(<HeroPackSelected  key={heroPack.join(',')+this.props.mainHeroPack?.hIds?.join(',')+this.props.mainHeroPackType} heroIds={heroPackFull} heroIdsA={this.props.mainHeroPack?(this.props.mainHeroPackType==='a'?this.props.mainHeroPack:heroPackFull):undefined } heroIdsD={this.props.mainHeroPack?(this.props.mainHeroPackType==='d'?this.props.mainHeroPack:heroPackFull):undefined } deselectHero={this.props.onFilterCounterHero}/>)\r\n        }\r\n        if (items.length===0) {\r\n            items.push(\r\n                <Stack direction=\"row\" key={cnt++} sx={{\r\n                    bgcolor: 'primary.light',\r\n                    m:0.25\r\n                }}>{this.props.emptyMessage}</Stack>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        //console.log('RHCPG',this.props.heroLostPacks)\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark',\r\n\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport { MySettings } from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(MySettings.apiUrl+\"queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},heroIdsD:{hIds:heroIdsD},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                marginBottom: '3px',\r\n                borderRadius: '10px',\r\n            }}key={i}>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n                </Box>\r\n                <Box className={\"heroQueueTwoVSBox\"}><span className={\"heroQueueTwoVSPosition\"}>{x.position}</span><span className={\"heroQueueTwoVSVS\"}>VS</span></Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Button className={\"closeButton\"} sx={{\r\n                    display: MyNavigator.isCloseDisabled()?'none':'inline-flex'\r\n                }} hidden={MyNavigator.isCloseDisabled()} data-testqid={x.testQId}><img data-testqid={x.testQId} onClick={this.removeIcon} className={\"closeIcon\"} alt=\"Close\"  src={\"close_icon.png\"}/></Button>\r\n            </Box>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box className={\"heroQueueTwoBox\"}>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            heroIdsD: props.heroIdsD,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            displayEditD: props.heroIdsD.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        console.log('HeroAddToTrainMode created',this.state.heroIdsA,this.state.heroIdsD)\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setAttackHeroPack=this.setAttackHeroPack.bind(this)\r\n        this.setDefenderHeroPack=this.setDefenderHeroPack.bind(this)\r\n        MyNavigator.heroAddToTrainMode=this\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setAttackHeroPack(currentPack: IHeroPack) {\r\n        this.setState({heroIdsA:currentPack})\r\n    }\r\n\r\n    setDefenderHeroPack(currentDefenderPack: IHeroPack) {\r\n        this.setState({heroIdsD:currentDefenderPack})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds }})\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.hIds.length>0?\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                    <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA}  deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.hIds.length>0?\r\n                        <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && this.state.heroIdsD.hIds.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('RHATTM',this.state.heroIdsA,this.state.heroIdsD)\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateToTopFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n\r\n        MyNavigator.heroOneFightMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        console.log('heroOneFightMode-renderMode',MyNavigator.currentPack,MyNavigator.currentDefenderPack)\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={MyNavigator.currentPack} heroIdsD={MyNavigator.currentDefenderPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Добавить в очередь бой из 2х паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Очередь боев в обработке сервером</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddAttackerMode=this\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip\r\n                    label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddDefenderMode=this\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid showAll={false} heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteAttackersQueueMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(MySettings.apiUrl+\"queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box hidden={MyNavigator.isCloseDisabled()}><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteDefendersMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(MySettings.apiUrl+\"queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    static formatParameter(x:any,name:string,goodName:string,multiplier:number,unit:string,prec:number) {\r\n        return x[name] && x[name]!==null && x[name]!==\"null\"?\"\"+goodName+\"=\"+(x[name]*multiplier).toFixed(prec)+unit+\", \":\"\"\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(MySettings.apiUrl+\"queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        let extText=\"\"\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsd\",\"Всего_боев_в_роли_защищаегося\",1,\"\",0)\r\n\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}},testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>пусто</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton && !MyNavigator.isCloseDisabled()?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Очередь атаки добавленная пользователями. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в атаке. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в защите. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Паки от админа. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n        MyNavigator.heroRouletteMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                    className={\"heroMainMenuButtons\"}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Добавить в атакующие паки</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Список атакующих паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Добавить в защищающиеся паки</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Список защищающихся</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroFAQ extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render() {\r\n        return (<Box sx={{\r\n            padding: '1em 1em 1em 1em'\r\n        }}>\r\n            <h3>1. Что это за сервис?</h3>\r\n            <p>\r\n                Статистика боёв на полной прокачке в мобильной версии Хроник Хаоса. Здесь можно не просто тестировать пачки, а даже тестировать их против Легендарной Гидры(new!)\r\n            </p>\r\n            <h3>2. Как им пользоваться?</h3>\r\n            <p>\r\n                Вверху меню - нажимаешь, смотришь ;-)\r\n            </p>\r\n            <h3>3. Ну и что там в меню \"Найти кто или кого побеждает пак\"?</h3>\r\n            <p>\r\n                Есть два режима - \"Кто побеждает твой пак\" и \"Кого побеждает твой пак\". Если нужно объяснять смысл этих названий, то сочувствую твоим друзьям и родителям и искренне тебе завидую.<br/>\r\n                В этом режиме ты выбираешь из героев ниже пак. Список героев составлен только из тех, по кому есть статистика с победой в бою.<br/>\r\n                Если твоего пака здесь нет - попробуй победить в защите или нападении в режимах \"Одна битва\" или \"Рулетка\".\r\n            </p>\r\n            <h3>4. А что в меню \"Одна битва\"?</h3>\r\n            <p>\r\n                Здесь выбираешь атакующий пак, защищающийся пак и отправляешь на обработку бой. Твой бой добавится в очередь<br/>\r\n                Когда дайдет очередь до твоего боя (сервер бесплатный для тебя и не резиновый, делает по 3-5 боев в минуту)<br/>\r\n                Когда сервер обработает бой, он пропадет из очереди и его результаты попадут в статистику, а если атакующий пак победит, ты сможешь найти результаты по атакующему или защищающемуся паку в меню \"Найти кто или кого побеждает пак\"\r\n            </p>\r\n            <h3>5. А что в меню \"Рулетка\"?</h3>\r\n            <p>\r\n                Здесь есть набор паков (48+ шт.), которые защищаются (подменю \"Список защищающихся\"), включая головы Легендарной гидры<br/>\r\n                Ты можешь добавить свой пак в список защищающихся (подменю \"Добавить в защищающиеся паки\") или атакующих (\"Добавить в атакующие паки\")<br/>\r\n                Если сервер простаивает (нет команд, добавленных шаловливыми ручками как у тебя), то генерится рандомный пак и он пробует атаковать весь список защитных паков этой рулетки<br/>\r\n                Когда ты добавляешь свой пак в защищающиеся (подменю \"Добавить в защищающиеся паки\") в режиме рулетки, то он там висит только 6 часов (сервер нерезиновый, а таких как ты много)<br/>\r\n                Когда ты добавляешь свой пак в атакующие (\"Добавить в атакующие паки\"), то сервер бросает всё (да щас!ха-ха!) и стравливает твой атакующий пак с защищающимися паками из списка в подменю \"Список защищающихся\".<br/>\r\n            </p>\r\n            <h3>6. Как формируется список в подменю \"Список защищающихся\" из режима \"Рулетка\"?</h3>\r\n            <p>\r\n                Есть четыре группы:<br/>\r\n                1. Добавленные шаловливыми ручками такими как у тебя из меню (\"Добавить в защищающиеся паки\"). Они там держатся не больше 6 часов, потом умирают как и все живое<br/>\r\n                2. Топ 15 атакующих паков по статистике на этом сервере<br/>\r\n                3. Топ 15 защитных паков по статистике на этом сервере<br/>\r\n                4. Паки админа и головы Легендарной гидры. Аз есмь админ добавил сюда паки на свое усмотрение и не собираюсь их обсуждать<br/>\r\n            </p>\r\n            <h3>7. Как можно протестировать свою пачку против гидры?</h3>\r\n            <p>\r\n                Только если добавить ее в атакующие паки в режиме \"Рулетка\".\r\n            </p>\r\n            <h3>8. Где найти лучшие пачки?</h3>\r\n            <p>\r\n                <s>У нас в клубе!</s> В меню \"Топ паки\".\r\n            </p>\r\n            <h3>9. Имеет ли этот сервис какое-то отношение к Nexters?</h3>\r\n            <p>\r\n                Конечно же нет!\r\n            </p>\r\n            <h3>10. Как связаться с админом?</h3>\r\n            <p>\r\n                Пока только в комментариях под видео на моем канале (нажмите на значок Youtube вверху).\r\n            </p>\r\n        </Box>)\r\n    }\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React from \"react\";\r\nimport {Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterHeroGrid, HeroCounterPackGrid} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    heroesFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    heroesFilter: number[],\r\n    requestsInProgress: number,\r\n    heroIds: IHeroPack[],\r\n    heroProbs: Map<number,number>\r\n}\r\n\r\nexport class HeroBestPackMode extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        const heroProbs=new Map<number,number>()\r\n        this.state={\r\n            currentMode: props.currentMode,\r\n            heroesFilter: props.heroesFilter,\r\n            requestsInProgress: 0,\r\n            heroIds: [],\r\n            heroProbs: heroProbs\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.filterHero=this.filterHero.bind(this)\r\n        for (const x of HeroData.allHeroesIds) {\r\n            this.state.heroProbs.set(x,-1)\r\n        }\r\n        this.updateHeroes(props.heroesFilter,props.currentMode,heroProbs)\r\n    }\r\n    requestSeq: number =0\r\n    requestsInProgress: number =0\r\n\r\n    updateHeroes(heroFilter:number[],currentMode:number,heroProbs:Map<number,number>) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroFilter.length;i++) {heroParams[i]=heroFilter[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"https://g92e0914be8be53-db202112141238.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat2/hws/topPacks/\"\r\n        let gMode='a'\r\n        switch (currentMode) {\r\n            case 0: {gMode='a';break;}\r\n            case 1: {gMode='d';break;}\r\n            case 8010: {gMode='g8010';break;}\r\n            case 8011: {gMode='g8011';break;}\r\n            case 8012: {gMode='g8012';break;}\r\n            case 8013: {gMode='g8013';break;}\r\n            case 8014: {gMode='g8014';break;}\r\n            case 8015: {gMode='g8015';break;}\r\n        }\r\n\r\n        fetch(url+gMode+\"/0/0/0/\"+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        for (const x of Array.from(heroProbs.keys())) {\r\n                            heroProbs.set(x,-1)\r\n                        }\r\n                        const heroUniqMap=new Map<string,number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            //console.log('LPU '+lostPack.join(',')+\" wr=\"+(z['avgwinrate']*100).toFixed(1)+\" lr=\"+(z['avglossrate']*100).toFixed(1))\r\n\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m && m>=0) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n                            }\r\n                            cnt++\r\n                            let extText=\"\"\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsd\",\"Всего_боев_в_роли_защищаегося\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h0d\",\"Урон_гидре_огня\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h1d\",\"Урон_гидре_тьмы\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h2d\",\"Урон_гидре_света\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h3d\",\"Урон_гидре_земли\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h4d\",\"Урон_гидре_воды\",1/1000,\"k\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"h5d\",\"Урон_гидре_воздуха\",1/1000,\"k\",0)\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            if (!heroUniqMap.get(lostPack.join(','))) {\r\n                                heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:extText}})\r\n                                heroUniqMap.set(lostPack.join(','),1)\r\n                            }\r\n\r\n                            //console.log('HLP',heroLostPacks)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                            this.setState(\r\n                                {heroIds: heroLostPacks, heroProbs: heroProbs}\r\n                            )\r\n\r\n                    }\r\n                }).finally(()=>{\r\n            this.requestsInProgress--\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    filterHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroesFilter = this.state.heroesFilter\r\n            const index = heroesFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroesFilter.splice(index, 1);\r\n                this.setState({heroesFilter: heroesFilter})\r\n                this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n            } else {\r\n                if (heroesFilter.length<5) {\r\n                    heroesFilter.push(heroId)\r\n                    this.setState({heroesFilter: heroesFilter})\r\n                    this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setMode(e:any,value:string) {\r\n        const currentMode=~~value\r\n        const heroFilter:number[] = []\r\n        this.setState({currentMode:currentMode,heroesFilter:heroFilter})\r\n        this.updateHeroes(heroFilter,currentMode,this.state.heroProbs)\r\n    }\r\n\r\n    render() {\r\n        return (<Container sx={{\r\n            bgcolor: 'background.default',\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" color=\"primary\">Лучшие паки в атаке</ToggleButton>\r\n                <ToggleButton value=\"1\" color=\"primary\">Лучшие паки в защите</ToggleButton>\r\n                <ToggleButton value=\"8010\" color=\"primary\">Гидра Огня</ToggleButton>\r\n                <ToggleButton value=\"8011\" color=\"primary\">Гидра Тьмы</ToggleButton>\r\n                <ToggleButton value=\"8012\" color=\"primary\">Гидра Света</ToggleButton>\r\n                <ToggleButton value=\"8013\" color=\"primary\">Гидра Земли</ToggleButton>\r\n                <ToggleButton value=\"8014\" color=\"primary\">Гидра Воды</ToggleButton>\r\n                <ToggleButton value=\"8015\" color=\"primary\">Гидра Воздуха</ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Divider />\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Фильтр по героям\":\"Идет загрузка...просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterHeroGrid heroProbs={this.state.heroProbs}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={this.state.heroesFilter} key={10+this.state.currentMode+this.requestSeq}/>\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Лучшие паки\":\"Идет загрузка...просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterPackGrid heroLostPacks={this.state.heroIds}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={[]} key={20+this.state.currentMode+this.requestSeq} emptyMessage={\"Не переживай. Этот пак не набрал 10 побед в \"+(this.state.currentMode===0?\"атаке\":\"защите\")+\". Попробуй добавить его в \"+(this.state.currentMode===0?\"атакующие\":\"защищающиеся\")+\" режиме рулетки, и если он победит, то тут появится результат.\"}/>\r\n        </Container>)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {HeroFAQ} from \"./heroFAQ\";\r\nimport {HeroBestPackMode} from \"./heroBestPackMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    rouletteSubMode: number,\r\n    oneFightSubMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode,\r\n            rouletteSubMode: 0,\r\n            oneFightSubMode: 1\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToTopMode=this.navigateToTopMode.bind(this)\r\n        MyNavigator.heroModeSelect=this\r\n    }\r\n    navigateToTopMode(newMode:number,rouletteSubMode?:number,oneFightSubMode?:number) {\r\n        if (rouletteSubMode) {\r\n            this.setState({currentMode: newMode, rouletteSubMode: rouletteSubMode})\r\n        } else if (oneFightSubMode) {\r\n            this.setState({currentMode: newMode, oneFightSubMode: oneFightSubMode})\r\n        } else {\r\n            this.setState({currentMode: newMode})\r\n        }\r\n    }\r\n    setMode(e:any,value:string) {\r\n        this.navigateToTopMode(~~value)\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={MyNavigator.currentPack} currentMode={0} key={MyNavigator.currentPack.hIds.join(',')}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateToTopFunction={this.navigateToTopMode} currentMode={this.state.oneFightSubMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToTopMode} currentMode={this.state.rouletteSubMode} key={10+this.state.rouletteSubMode}/>)\r\n        } else if (currentMode===4) {\r\n            return (<HeroFAQ/>)\r\n        }else if (currentMode===5) {\r\n            return (<HeroBestPackMode heroesFilter={[]} currentMode={0}/>)\r\n        }\r\n        else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <Box className={\"heroHeader\"}><a target={\"_blank\"} href={\"https://www.youtube.com/channel/UCY_SEAvMIveeRAE_xMtNBKQ\"}><img src={\"./youtube-subscribe.gif\"} /> <span>Нажми сюда для просмотра видео<br/> с боями на полной прокачке</span> </a></Box>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"4\" color=\"primary\">FAQ</ToggleButton>\r\n                <ToggleButton value=\"0\" color=\"primary\">Найти кто или кого побеждает пак</ToggleButton>\r\n                <ToggleButton value=\"2\" color=\"primary\">Одна битва</ToggleButton>\r\n                <ToggleButton value=\"3\" color=\"primary\">Рулетка</ToggleButton>\r\n                <ToggleButton value=\"5\" color=\"primary\">Топ паки</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect;","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport AddCircleOutlineRoundedIcon from '@mui/icons-material/AddCircleOutlineRounded';\r\nimport DoDisturbOnOutlinedIcon from '@mui/icons-material/DoDisturbOnOutlined';\r\n\r\ninterface IProps {\r\n    heroId: number,\r\n    heroProb: number,\r\n    onClick: any,\r\n    additionalClasses: string[],\r\n    isAdded?: boolean,\r\n    isRemoved?: boolean\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroModernIcon extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.onClick=this.onClick.bind(this)\r\n    }\r\n    onClick(e:any) {\r\n        if (e?.target?.dataset?.heroid > 0) {\r\n            this.props.onClick(~~e.target.dataset.heroid)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let hero = HeroData.getHeroById(this.props.heroId)\r\n        //hero = HeroData.getHeroById(19);\r\n        const heroProb=this.props.heroProb||0\r\n        if (!hero) {\r\n            hero = HeroData.emptyHero\r\n        }\r\n        let boxClassName = \"heroModernIcon \"+this.props.additionalClasses.join(\" \")\r\n        return (\r\n            <Box className={boxClassName} data-heroid={hero.heroId} onClick={this.onClick} >\r\n                {this.props.isAdded !==undefined && this.props.isAdded && (<span className={\"someHeroIcon\"}><AddCircleOutlineRoundedIcon/></span>)}\r\n                {this.props.isRemoved !==undefined && this.props.isRemoved && (<span className={\"someHeroIcon\"}><DoDisturbOnOutlinedIcon/></span>)}\r\n                <span className={\"heroModernIconName\"}>{/*hero.heroId+\" \"+*/ hero.heroName}</span>\r\n                <span className={\"heroModernIconProb\"}>{heroProb > 0 ? heroProb.toFixed(2) + \"%\" : \"\"}</span>\r\n                <img  alt={\"\"}\r\n                     src={\"hero/\" + HeroData.padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Menu, MenuItem, Tooltip} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeroModernIcon} from \"./HeroModernIcon\";\r\nimport {HeroData} from \"../types\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\ninterface IProps {\r\n    heroPack: IHeroPack,\r\n    heroProbs: Map<number, number>,\r\n    onHeroSelect: any,\r\n    selectedHeroes: number[],\r\n    additionalClasses: string[],\r\n    currentPack?: IHeroPack,\r\n    currentInAttack?: boolean\r\n}\r\n\r\ninterface IState {\r\n    anchorEl: any,\r\n}\r\n\r\nexport class SelectedHeroPack extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n        }\r\n\r\n        this.seeCounterPacks = this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick = this.handleMenuClick.bind(this)\r\n        this.handleMenuClose = this.handleMenuClose.bind(this)\r\n    }\r\n\r\n    renderHeroIcons() {\r\n        this.props.heroPack.hIds.sort((a, b) => {\r\n            return (HeroData.getHeroById(a)?.battleOrder || 0) - (HeroData.getHeroById(b)?.battleOrder || 0)\r\n        })\r\n        const items: any = []\r\n        for (let i = 0; i < 5; i++) {\r\n            const hId = this.props.heroPack.hIds[i]\r\n            items.push(<HeroModernIcon key={i} additionalClasses={[]} heroId={hId}\r\n                                       heroProb={this.props.heroProbs.get(hId) || 0}\r\n                                       onClick={this.props.onHeroSelect}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    copyLink() {\r\n        navigator.clipboard.writeText(\"this.state.textToCopy\")\r\n    }\r\n\r\n    seeCounterPacks(e: any) {\r\n\r\n    }\r\n\r\n    handleMenuClick(e: any) {\r\n        this.setState({anchorEl: e.currentTarget})\r\n    }\r\n\r\n    handleMenuClose(e: any) {\r\n        this.setState({anchorEl: null})\r\n    }\r\n\r\n    renderMenuItems() {\r\n        const menuItems :JSX.Element[] = []\r\n        let key = 0\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeCounterPacks}>Посмотреть кто побеждает (не работает)</MenuItem>)\r\n        /*if (this.props.heroIdsA !== undefined && this.props.heroIdsD !== undefined) menuItems.push(<MenuItem key={key++} onClick={this.seeTrainMode}>Add to Train both packs</MenuItem>)*/\r\n        return menuItems\r\n    }\r\n\r\n    render() {\r\n        const additionalClasses = \"selectedHeroPack \" + this.props.additionalClasses.join(\" \")\r\n        return (\r\n            <Box className={additionalClasses}>\r\n                {this.props.heroPack?.extendedInfo?.cwr !== undefined && this.props.heroPack?.extendedInfo?.cc !== undefined &&\r\n                (<Box className={\"selectedHeroPackExtendedCurrent\"}>\r\n                    <Tooltip title={\"Процент побед выбранного пака\"}><span><img\r\n                        src={\"./trophy_a_w.png\"}/><span>{this.props.heroPack.extendedInfo.cwr + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Количество побед выбранного пака\"}><span><img\r\n                        src={\"./attack_w.png\"}/><span>{this.props.heroPack.extendedInfo.cc}</span></span></Tooltip>\r\n                </Box>)}\r\n                <Box className={\"selectedHeroPackIcons\"}>\r\n                    {this.renderHeroIcons()}\r\n                    <Box className={\"linkVerticalBar\"}>\r\n                        <Box id=\"demo-positioned-button\"\r\n                             aria-controls=\"demo-positioned-menu\"\r\n                             aria-haspopup=\"true\"\r\n                             aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                             onClick={this.handleMenuClick}><Tooltip title={\"Дополнительная информация\"}><MoreVertIcon/></Tooltip></Box>\r\n                        <Tooltip title={\"Копировать ссылку на пак\"}><LinkIcon onClick={this.copyLink}/></Tooltip>\r\n                    </Box>\r\n\r\n                </Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {this.renderMenuItems()}\r\n                </Menu>\r\n                <Box className={\"selectedHeroPackExtended\"}>\r\n                    <span>Всего:</span>\r\n                    <Tooltip title={\"Всего % побед в атаке\"}><span><img\r\n                        src={\"./trophy_a_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wra === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.wra) + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего побед в атаке\"}><span><img\r\n                        src={\"./attack_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.ca === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.ca}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего % побед в защите\"}><span><img\r\n                        src={\"./trophy_d_w.png\"}/><span>{(this.props.heroPack?.extendedInfo?.wrd === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.wrd) + \"%\"}</span></span></Tooltip>\r\n                    <Tooltip title={\"Всего побед в защите\"}><span><img\r\n                        src={\"./shield_w.png\"}/><span>{this.props.heroPack?.extendedInfo?.cd === undefined ? \"?\" : this.props.heroPack?.extendedInfo?.cd}</span></span></Tooltip>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernIcon} from \"./HeroModernIcon\";\r\n\r\ninterface IProps {\r\n    heroProb?: Map<number,number>,\r\n    onClick: any,\r\n    selectedHeroes: number[],\r\n    highlightedHeroes: number[],\r\n    addedHeroes?: number[],\r\n    removedHeroes?: number[],\r\n    additionalClasses: string[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroModernGrid extends React.Component<IProps, IState> {\r\n    renderHeroIcons() {\r\n        if (this.props.addedHeroes) {console.log('renderHeroIcons',this.props.addedHeroes,this.props.removedHeroes)}\r\n        const items=[]\r\n\r\n        for (const i in HeroData.heroIdsOrderedByName) {\r\n            const heroId=HeroData.heroIdsOrderedByName[i]\r\n            const prob=this.props.heroProb?.get(heroId) || 0\r\n            const additionalClasses=[\"heroIconSmall\"]\r\n            if (this.props.selectedHeroes.indexOf(heroId)>=0) {additionalClasses.push(\"mySelected\")}\r\n            if (this.props.highlightedHeroes.indexOf(heroId)<0) {additionalClasses.push(\"myNotHighlighted\")}\r\n            items.push(\r\n                <HeroModernIcon key={i} additionalClasses={additionalClasses} heroId={heroId} heroProb={prob} onClick={this.props.onClick} isAdded={this.props.addedHeroes?.includes(heroId)} isRemoved={this.props.removedHeroes?.includes(heroId)}/>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Box className={\"heroModernGrid \" + this.props.additionalClasses.join(\" \")}>\r\n                {this.renderHeroIcons()}\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\ninterface IProps {\r\n    message: string,\r\n    openMenuFunction:any\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeaderBlock extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = { }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box className={\"headerBlock\"}>\r\n                <MenuIcon onClick={this.props.openMenuFunction}/>\r\n                <Box>{this.props.message}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}","import {Box, Slider} from \"@mui/material\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nexport function ModernSlider(props: any) {\r\n    const [minFights, setMinFights] = useState(props.initial)\r\n    const marks=[{\r\n        value: props.min,\r\n        label: \"\"+props.min\r\n    }, {\r\n        value: props.max,\r\n        label: \"\"+props.max\r\n    }]\r\n    const changeValue = function (e: any, value: number | number []) {\r\n        if (!Array.isArray(value)) {\r\n            setMinFights(value)\r\n            props.callback(value)\r\n        }\r\n    }\r\n    const getSliderText = function (value: number) {\r\n        return \"\" + value\r\n    }\r\n\r\n    return (\r\n        <Box className={\"modernSlider\"}>\r\n        <Slider\r\n            getAriaLabel={() => props.label}\r\n            value={minFights}\r\n            min={props.min}\r\n            max={props.max}\r\n            marks={marks}\r\n            onChange={changeValue}\r\n            getAriaValueText={getSliderText}\r\n            color={\"secondary\"}\r\n            track=\"inverted\"\r\n            step={1}\r\n            valueLabelDisplay=\"on\"\r\n            disableSwap\r\n        />\r\n        </Box>\r\n    )\r\n\r\n}","import {Box, Button, Modal, Tooltip} from \"@mui/material\";\r\nimport {ModernSlider} from \"./ModernSlider\";\r\nimport {HeroModernGrid} from \"./HeroModernGrid\";\r\nimport React, {useState} from \"react\";\r\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\r\n\r\nexport function CounterPackFilterModal(props: any) {\r\n    const [modalOpen, setModalOpen] = useState(true)\r\n    const [heroFilterInclude, setHeroFilterInclude] = useState(props.memoArray.heroFilterInclude)\r\n    const [heroFilterExclude, setHeroFilterExclude] = useState(props.memoArray.heroFilterExclude)\r\n    const handleModalClose = function () {\r\n        setModalOpen(false)\r\n        props.memoArray.heroFilterInclude = heroFilterInclude\r\n        props.memoArray.heroFilterExclude = heroFilterExclude\r\n        props.onClose(props.memoArray)\r\n    }\r\n    const changeMinWinRate = function (value: number) {\r\n        props.memoArray.minWinRate = value\r\n    }\r\n    const changeMinFights = function (value: number) {\r\n        props.memoArray.minFights = value\r\n    }\r\n    const onHeroGridClick = function (heroId: number) {\r\n        //console.log('onHeroGridClick', heroId, heroFilterInclude, heroFilterExclude)\r\n        const newHeroFilterInclude = [...heroFilterInclude]\r\n        const newHeroFilterExclude = [...heroFilterExclude]\r\n        const includeIndex = newHeroFilterInclude.indexOf(heroId)\r\n        const excludeIndex = newHeroFilterExclude.indexOf(heroId)\r\n        if (includeIndex >= 0) {\r\n            newHeroFilterInclude.splice(includeIndex, 1)\r\n            setHeroFilterInclude(newHeroFilterInclude)\r\n            if (excludeIndex < 0) {\r\n                newHeroFilterExclude.push(heroId)\r\n                setHeroFilterExclude(newHeroFilterExclude)\r\n            }\r\n        } else if (excludeIndex >= 0) {\r\n            newHeroFilterExclude.splice(excludeIndex, 1)\r\n            setHeroFilterExclude(newHeroFilterExclude)\r\n        } else {\r\n            if (newHeroFilterInclude.length < 5) {\r\n                newHeroFilterInclude.push(heroId)\r\n                setHeroFilterInclude(newHeroFilterInclude)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className={\"myModal\"}\r\n            open={modalOpen}\r\n            onClose={handleModalClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box className={\"counterPackResultModalBox\"}>\r\n                <Button className={\"closeModal\"} onClick={handleModalClose}><CancelOutlinedIcon/></Button>\r\n                {props.memoArray.filterMaxWinRate>0 && (\r\n                <Box className={\"sliderRow\"}>\r\n                    <Tooltip title={\"Процент побед в атаке\"}><img src={\"./trophy_a_w.png\"}/></Tooltip>\r\n                    <ModernSlider min={props.memoArray.filterMinWinRate} max={props.memoArray.filterMaxWinRate}\r\n                                  label={\"some2\"}\r\n                                  initial={props.memoArray.minWinRate}\r\n                                  callback={changeMinWinRate}/>\r\n                </Box>\r\n                )}\r\n                {props.memoArray.filterMaxFights>0 && (\r\n                <Box className={\"sliderRow\"}>\r\n                    <Tooltip title={\"Количество побед в атаке\"}><img src={\"./attack_w.png\"}/></Tooltip>\r\n                    <ModernSlider min={props.memoArray.filterMinFights} max={props.memoArray.filterMaxFights}\r\n                                  label={\"some1\"}\r\n                                  initial={props.memoArray.minFights}\r\n                                  callback={changeMinFights}/>\r\n                </Box>\r\n                )}\r\n                <span>Фильтр по героям</span>\r\n                <HeroModernGrid additionalClasses={[\"heroIconTiny\"]} highlightedHeroes={[]}\r\n                                onClick={onHeroGridClick} selectedHeroes={[]} addedHeroes={heroFilterInclude}\r\n                                removedHeroes={heroFilterExclude}/>\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Box, Button, Chip, Divider} from \"@mui/material\";\r\nimport HourglassBottomIcon from '@mui/icons-material/HourglassBottom';\r\nimport {HeroData} from \"../types\";\r\nimport {SelectedHeroPack} from \"./SelectedHeroPack\";\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {CounterPackFilterModal} from \"./CounterPackFilterModal\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\nfunction constructHeroFilter(pHeroFilter: number[]) {\r\n    let result = \"%\"\r\n    pHeroFilter.sort((a,b) => {\r\n        return a-b\r\n    })\r\n    for (let i = 0; i <= 5 && i < pHeroFilter.length; i++) {\r\n        result += ':' + pHeroFilter[i] + ':%'\r\n    }\r\n    return escape(result)\r\n}\r\n\r\nexport function CounterPackResults(props: any) {\r\n    let pMinFights = 0;\r\n    if (props.params.get(\"minFightsCount\")) {\r\n        const x = ~~props.params.get(\"minFightsCount\")\r\n        if (x >= 0) {\r\n            pMinFights = x\r\n        }\r\n    }\r\n    const pHeroFilterInclude = []\r\n    if (props.params.get(\"heroFilterInclude\")) {\r\n        const x = props.params.get(\"heroFilterInclude\")?.split(\",\") || []\r\n        for (let i = 0; i < 5 && i < x.length; i++) {\r\n            if (HeroData.getHeroById(~~x[i])) {\r\n                pHeroFilterInclude.push(~~x[i])\r\n            }\r\n        }\r\n    }\r\n    const pHeroFilterExclude = []\r\n    if (props.params.get(\"heroFilterExclude\")) {\r\n        const x = props.params.get(\"heroFilterExclude\")?.split(\",\") || []\r\n        for (let i = 0; i < 5 && i < x.length; i++) {\r\n            if (HeroData.getHeroById(~~x[i])) {\r\n                pHeroFilterExclude.push(~~x[i])\r\n            }\r\n        }\r\n    }\r\n    let pMinWinRate = 0\r\n    if (props.params.get(\"minWinRate\")) {\r\n        const x = ~~props.params.get(\"minWinRate\")\r\n        if (x >= 0 && x <= 100) {\r\n            pMinWinRate = x\r\n        }\r\n    }\r\n    const [minWinRate, setMinWinRate] = useState(pMinWinRate)\r\n    const [minFights, setMinFights] = useState(pMinFights)\r\n    const [heroFilterInclude, setHeroFilterInclude] = useState(pHeroFilterInclude)\r\n    const [heroFilterExclude, setHeroFilterExclude] = useState(pHeroFilterExclude)\r\n    const [heroPacks, setHeroPacks] = useState([] as IHeroPack[])\r\n    const [requestsInProgress, setRequestsInProgress] = useState(0)\r\n    const [, setTotalFound] = useState(0)\r\n    const [filterMinWinRate, setFilterMinWinRate] = useState(0)\r\n    const [filterMaxWinRate, setFilterMaxWinRate] = useState(0)\r\n    const [filterMinFights, setFilterMinFights] = useState(0)\r\n    const [filterMaxFights, setFilterMaxFights] = useState(0)\r\n    const [filterOpened, setFilterOpened] = useState(false)\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n    const [isUpdateOccurred, setIsUpdateOccurred] = useState(false)\r\n    const [memoArray, setMemoArray] = useState({\r\n        minWinRate: minWinRate,\r\n        minFights: minFights,\r\n        heroFilterInclude: heroFilterInclude,\r\n        heroFilterExclude: heroFilterExclude,\r\n        filterMinFights: filterMinFights,\r\n        filterMaxFights: filterMaxFights,\r\n        filterMinWinRate: filterMinWinRate,\r\n        filterMaxWinRate: filterMaxWinRate,\r\n        requestsInProgress: 0\r\n    })\r\n    const updateHeroPackInfo = function (pHeroPack: IHeroPack, pMinWinRate: number, pMinFights: number, pHeroFilterInclude: number[], pHeroFilterExclude: number[]) {\r\n        if (pHeroPack.hIds.length === 5) {\r\n            let url = MySettings.apiUrl+\"lostPacks/\"\r\n            const heroParams = [-1, -1, -1, -1, -1]\r\n            for (let i = 0; i < 5 && i < pHeroPack.hIds.length; i++) {\r\n                heroParams[i] = pHeroPack.hIds[i];\r\n            }\r\n            props.changeHeaderMessageFunction(\"Загружаем контр-паки из статистики...\")\r\n            url += heroParams.join(\"/\")\r\n            url += \"/\" + pMinWinRate + \"/\" + pMinFights + \"/\"\r\n            url += constructHeroFilter(pHeroFilterInclude) + \"/\"\r\n            url += constructHeroFilter(pHeroFilterExclude.length === 0 ? [-2] : pHeroFilterExclude)\r\n            memoArray.requestsInProgress++\r\n            setRequestsInProgress(memoArray.requestsInProgress)\r\n            fetch(url, {\r\n                method: \"GET\"\r\n            }).then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        let nTotalFound = 0\r\n                        if (result['items']) {\r\n                            const heroLostPacks = []\r\n                            let nFilterMinWinRate = 0\r\n                            let nFilterMaxWinRate = 0\r\n                            let nFilterMinFights = 0\r\n                            let nFilterMaxFights = 0\r\n\r\n                            for (const x in result['items']) {\r\n                                const z = result['items'][x]\r\n                                let lostPack = []\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                                if (!isUpdateOccurred) {\r\n                                    nFilterMinWinRate = z.minwr\r\n                                    nFilterMaxWinRate = z.maxwr\r\n                                    nFilterMinFights = z.minc\r\n                                    nFilterMaxFights = z.maxc\r\n                                }\r\n                                nTotalFound = z.tc\r\n                                heroLostPacks.push({\r\n                                    hIds: lostPack,\r\n                                    extendedInfo: {\r\n                                        statusInfo: \"\",\r\n                                        wra: z.wra,\r\n                                        wrd: z.wrd,\r\n                                        ca: z.ca,\r\n                                        cd: z.cd,\r\n                                        wa: z.wa,\r\n                                        wd: z.wd,\r\n                                        cc: z.cc,\r\n                                        cwr: z.cwr\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            setHeroPacks(heroLostPacks)\r\n                            if (!isUpdateOccurred) {\r\n                                setFilterMinWinRate(Math.floor(nFilterMinWinRate))\r\n                                setFilterMaxWinRate(Math.floor(nFilterMaxWinRate))\r\n                                setFilterMinFights(nFilterMinFights)\r\n                                setFilterMaxFights(nFilterMaxFights)\r\n                            }\r\n                            setTotalFound(nTotalFound)\r\n\r\n                        }\r\n                        if (!isUpdateOccurred) setIsUpdateOccurred(true)\r\n                        props.changeHeaderMessageFunction(\"Нашли \" + nTotalFound + \" контр-паков\")\r\n                    }).finally(() => {\r\n                memoArray.requestsInProgress--\r\n                setRequestsInProgress(memoArray.requestsInProgress)\r\n            })\r\n        }\r\n\r\n    }\r\n    const onHeroSelect = function () {\r\n    }\r\n    const onFilterClick = function () {\r\n        setMemoArray(\r\n            {\r\n                minWinRate: minWinRate,\r\n                minFights: minFights,\r\n                heroFilterInclude: heroFilterInclude,\r\n                heroFilterExclude: heroFilterExclude,\r\n                filterMinFights: filterMinFights,\r\n                filterMaxFights: filterMaxFights,\r\n                filterMinWinRate: filterMinWinRate,\r\n                filterMaxWinRate: filterMaxWinRate,\r\n                requestsInProgress: memoArray.requestsInProgress\r\n            }\r\n        )\r\n        setFilterOpened(true)\r\n    }\r\n    const handleModalClose = function (newMemoArray: any) {\r\n        if (newMemoArray.minWinRate === filterMinWinRate) {\r\n            newMemoArray.minWinRate = 0\r\n        }\r\n        setMinWinRate(newMemoArray.minWinRate)\r\n        if (newMemoArray.minFights === filterMinFights) {\r\n            newMemoArray.minFights = 0\r\n        }\r\n        setMinFights(newMemoArray.minFights)\r\n        const newHeroFilterInclude = [...newMemoArray.heroFilterInclude]\r\n        const newHeroFilterExclude = [...newMemoArray.heroFilterExclude]\r\n        setHeroFilterInclude(newHeroFilterInclude)\r\n        setHeroFilterExclude(newHeroFilterExclude)\r\n        setMemoArray(newMemoArray)\r\n        setFilterOpened(false)\r\n        updateHeroPackInfo(props.heroPack, newMemoArray.minWinRate, newMemoArray.minFights, newHeroFilterInclude, newHeroFilterExclude)\r\n    }\r\n    const handleDeleteFilterChip = function (e: any) {\r\n        let filterType = undefined\r\n        let heroId = undefined\r\n        if (e?.target?.parentNode?.parentNode?.dataset?.filtertype) {\r\n            filterType = e?.target?.parentNode?.parentNode?.dataset?.filtertype\r\n            heroId = ~~e?.target?.parentNode?.parentNode?.dataset?.filterheroid\r\n        } else if (e?.target?.parentNode?.dataset?.filtertype) {\r\n            filterType = e?.target?.parentNode?.dataset?.filtertype\r\n            heroId = ~~e?.target?.parentNode?.dataset?.filterheroid\r\n        }\r\n        if (filterType && heroId) {\r\n            switch (filterType) {\r\n                case \"include\": {\r\n                    const index = heroFilterInclude.indexOf(heroId)\r\n                    if (index >= 0) {\r\n                        const newHeroFilterInclude = [...heroFilterInclude]\r\n                        newHeroFilterInclude.splice(index, 1)\r\n                        setHeroFilterInclude(newHeroFilterInclude)\r\n                        updateHeroPackInfo(props.heroPack, minWinRate, minFights, newHeroFilterInclude, heroFilterExclude)\r\n                    }\r\n                    break;\r\n                }\r\n                case \"exclude\": {\r\n                    const index = heroFilterExclude.indexOf(heroId)\r\n                    if (index >= 0) {\r\n                        const newHeroFilterExclude = [...heroFilterExclude]\r\n                        newHeroFilterExclude.splice(index, 1)\r\n                        setHeroFilterExclude(newHeroFilterExclude)\r\n                        updateHeroPackInfo(props.heroPack, minWinRate, minFights, heroFilterInclude, newHeroFilterExclude)\r\n                    }\r\n                    break;\r\n                }\r\n                case \"mwr\": {\r\n                    setMinWinRate(0)\r\n                    updateHeroPackInfo(props.heroPack, 0, minFights, heroFilterInclude, heroFilterExclude)\r\n                    break;\r\n                }\r\n                case \"mf\": {\r\n                    setMinFights(0)\r\n                    updateHeroPackInfo(props.heroPack, minWinRate, 0, heroFilterInclude, heroFilterExclude)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const renderFilterBar = function () {\r\n        const items = []\r\n        for (const x of heroFilterInclude) {\r\n            items.push(<Chip\r\n                data-filtertype={\"include\"}\r\n                data-filterheroid={x}\r\n                label={\"+\" + HeroData.getHeroById(x)?.heroName || \"\" + x}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        for (const x of heroFilterExclude) {\r\n            items.push(<Chip\r\n                data-filtertype={\"exclude\"}\r\n                data-filterheroid={x}\r\n                label={\"-\" + HeroData.getHeroById(x)?.heroName || \"\" + x}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        if (minFights > 0) {\r\n            items.push(<Chip\r\n                data-filtertype={\"mf\"}\r\n                data-filterheroid={1}\r\n                label={<Box className={\"filterBarLabel\"}><img src={\"./attack_w.png\"}/><span>{minFights}</span></Box>}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n        if (minWinRate > 0) {\r\n            items.push(<Chip\r\n                data-filtertype={\"mwr\"}\r\n                data-filterheroid={1}\r\n                label={<Box className={\"filterBarLabel\"}><img src={\"./trophy_a_w.png\"}/><span>{minWinRate + \"%\"}</span></Box>}\r\n                onClick={onFilterClick}\r\n                onDelete={handleDeleteFilterChip}\r\n                deleteIcon={<DeleteIcon/>}\r\n                variant=\"outlined\"\r\n            />)\r\n        }\r\n\r\n        return (<Box className={\"filterBar\"}>\r\n            {items}\r\n        </Box>)\r\n    }\r\n    const renderHeroPacks = function () {\r\n        const items = []\r\n        const emptyMap = new Map<number, number>()\r\n        for (const i in heroPacks) {\r\n            items.push(<SelectedHeroPack additionalClasses={[\"withCurrentStat\"]} heroPack={heroPacks[i]}\r\n                                         heroProbs={emptyMap}\r\n                                         onHeroSelect={onHeroSelect} selectedHeroes={heroFilterInclude}\r\n                                         key={heroPacks[i].hIds.join(\",\")}/>)\r\n        }\r\n        return items\r\n    }\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            updateHeroPackInfo(props.heroPack, minWinRate, minFights, heroFilterInclude, heroFilterExclude)\r\n            setIsInitialized(true)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Box className={\"counterPackResult\"}>\r\n            {requestsInProgress > 0 && (\r\n                <Box>Loading...<HourglassBottomIcon/></Box>\r\n            )\r\n            }\r\n            {isUpdateOccurred && requestsInProgress === 0 && (\r\n                <Box>\r\n                    <Box><Divider>Фильтр<Button className={\"svgButton\"}><FilterAltIcon\r\n                        onClick={onFilterClick}/></Button></Divider>\r\n                        {filterOpened && (\r\n                            <CounterPackFilterModal onClose={handleModalClose} memoArray={memoArray}/>\r\n                        )}\r\n                        {renderFilterBar()}\r\n                    </Box>\r\n                    {heroPacks.length === 0 && (<Box className={\"counterPackNotFound\"}>\r\n                        <Box>Не нашли контр-паки у себя в статистике боев</Box>\r\n                        <span>Попробовать добавить в очередь на поиск на сервер обработки боёв?</span>\r\n                        <Button sx={{\r\n                            color: 'white',\r\n                            bgcolor: 'primary.light'\r\n                        }}>Найти контр-пак (пока не работает)</Button>\r\n                    </Box>)}\r\n                    {heroPacks.length > 0 && (<Box> <Divider>Контр-паки</Divider>\r\n                            <Box className={\"counterPackResultPacks\"}>\r\n                                {renderHeroPacks()}\r\n                            </Box>\r\n                        </Box>\r\n                    )}\r\n                </Box>)}\r\n        </Box>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Box, Divider} from \"@mui/material\";\r\nimport {SelectedHeroPack} from \"./SelectedHeroPack\";\r\nimport {HeroData} from \"../types\";\r\nimport {HeroModernGrid} from \"./HeroModernGrid\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {HeaderBlock} from \"./HeaderBlock\";\r\nimport {useLocation, useMatch, useNavigate, useParams} from \"react-router-dom\";\r\nimport {CounterPackResults} from \"./CounterPackResults\";\r\nimport {MySettings} from \"../types/MySettings\";\r\n\r\nconst messages = {\r\n    choose5Heroes: \"Выберите пачку из 5 героев для поиска\",\r\n}\r\n\r\nexport function CounterPackScreen(props: any) {\r\n    const params = useParams();\r\n    const match = useMatch(\"\");\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [headerMessage, setHeaderMessage] = useState(messages.choose5Heroes);\r\n    const templateHeroPack = HeroData.getEmptyHeroPack()\r\n    const queryParams: any = new URLSearchParams(location?.search || \"\")\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n    if (queryParams.get(\"hids\")) {\r\n        const x = queryParams.get(\"hids\")?.split(\",\")\r\n        if (x && x.length <= 5) {\r\n            for (const z of x) {\r\n                templateHeroPack.hIds.push(~~z)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [heroPack, setHeroPack] = useState(templateHeroPack);\r\n    const [heroAvailable, setHeroAvailable] = useState([] as number[])\r\n    const [heroProbs, setHeroProbs] = useState(new Map<number, number>())\r\n    const [requestsInProgress, setRequestsInProgress] = useState(0)\r\n\r\n    const updateAvailableHeroes = function (pHeroPack: IHeroPack) {\r\n        const heroParams = [-1, -1, -1, -1, -1]\r\n        for (let i = 0; i < 5 && i < pHeroPack.hIds.length; i++) {\r\n            heroParams[i] = pHeroPack.hIds[i];\r\n        }\r\n        setRequestsInProgress(requestsInProgress + 2)\r\n        let url = MySettings.apiUrl+\"findLostPackHeroesStat/\"\r\n        fetch(url + heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let heroArray: number[] = []\r\n                    if (result['items']) {\r\n                        for (const j in result['items']) {\r\n                            const x = result['items'][j]['d']\r\n                            if (x) {\r\n                                if (!heroArray.includes(~~x)) {\r\n                                    heroArray.push(~~x)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    setHeroAvailable(heroArray)\r\n                },\r\n                (error) => {\r\n                    console.error(\"error req\", error)\r\n                    setHeroAvailable([])\r\n                }\r\n            ).finally(() => {\r\n            setRequestsInProgress(requestsInProgress - 1)\r\n        })\r\n\r\n        url = MySettings.apiUrl+\"packStat/\"\r\n        fetch(url + heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let heroArray: number[] = []\r\n                    if (result['items']) {\r\n                        for (const j in result['items']) {\r\n                            const x = result['items'][j]\r\n                            if (x) {\r\n                                const newHeroPack = HeroData.getEmptyHeroPack()\r\n                                newHeroPack.hIds = pHeroPack.hIds\r\n                                newHeroPack.extendedInfo = {\r\n                                    statusInfo: \"\",\r\n                                    ca: x.ca,\r\n                                    cd: x.cd,\r\n                                    wra: x.wra,\r\n                                    wrd: x.wrd,\r\n                                    wa: x.wa,\r\n                                    wd: x.wd,\r\n                                }\r\n                                setHeroPack(newHeroPack)\r\n                            }\r\n                        }\r\n                    }\r\n                    //console.log('setHeroAvailable',heroArray)\r\n                    //setHeroAvailable(heroArray)\r\n                },\r\n                (error) => {\r\n                    console.error(\"error req\", error)\r\n                    //setHeroAvailable([])\r\n                }\r\n            ).finally(() => {\r\n            setRequestsInProgress(requestsInProgress - 1)\r\n        })\r\n\r\n\r\n    }\r\n    const updateHeroPackInfo = function (pHeroPack: IHeroPack) {\r\n        navigate(\"/counterPack?hids=\" + pHeroPack.hIds.join(\",\"))\r\n        setHeroPack(pHeroPack)\r\n        updateAvailableHeroes(pHeroPack)\r\n        if (pHeroPack.hIds.length !== 5) {\r\n            setHeaderMessage(messages.choose5Heroes)\r\n        }\r\n    }\r\n    const changeHeaderMessage = function (newMessage: string) {\r\n        console.log(\"changeHeaderMessage\"+newMessage)\r\n        setHeaderMessage(newMessage)\r\n    }\r\n    const onHeroSelect = function (heroId: number) {\r\n        if (HeroData.allHeroesIds.includes(heroId)) {\r\n            const index = heroPack.hIds.indexOf(heroId)\r\n            if (index < 0) {\r\n                if (heroPack.hIds.length < 5) {\r\n                    heroPack.hIds.push(heroId)\r\n                    heroPack.extendedInfo = {statusInfo: \"\"}\r\n                    updateHeroPackInfo(heroPack)\r\n                }\r\n            } else {\r\n                heroPack.extendedInfo = {statusInfo: \"\"}\r\n                heroPack.hIds.splice(index, 1);\r\n                updateHeroPackInfo(heroPack)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!isInitialized && heroPack.hIds.length === 5) {\r\n            setIsInitialized(true)\r\n            updateHeroPackInfo(heroPack)\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Box className={\"counterPackScreen\"}>\r\n            <HeaderBlock openMenuFunction={props.openMenuFunction}\r\n                         message={headerMessage}/>\r\n            {heroPack.hIds.length === 5 && (<Divider>Выбранный пак</Divider>)}\r\n            <SelectedHeroPack heroPack={heroPack} heroProbs={HeroData.zeroHeroProbMap}\r\n                              onHeroSelect={onHeroSelect} selectedHeroes={[]} additionalClasses={[]}/>\r\n            {heroPack.hIds.length < 5 && (\r\n                <HeroModernGrid additionalClasses={[]} heroProb={heroProbs} onClick={onHeroSelect}\r\n                                selectedHeroes={heroPack.hIds} highlightedHeroes={heroAvailable}/>\r\n            )}\r\n            {heroPack.hIds.length === 5 && (\r\n                <CounterPackResults changeHeaderMessageFunction={changeHeaderMessage} heroPack={heroPack}\r\n                                    params={queryParams}\r\n                                    mainUrl={\"/counterPack\" + (heroPack.hIds.length > 0 ? \"?hIds=\" + heroPack.hIds.join(\",\") : \"\")}/>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Box, Slider} from \"@mui/material\";\r\nimport {ModernSlider} from \"./ModernSlider\";\r\n\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n\r\ninterface IState {\r\n    minFights: number,\r\n    value: number,\r\n    filterMinFights: number,\r\n    filterMaxFights: number\r\n}\r\n\r\n\r\nexport class TestComponent extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={\r\n            minFights: 5,\r\n            value: 5,\r\n            filterMinFights: 0,\r\n            filterMaxFights: 100\r\n        }\r\n        this.changeMinFights=this.changeMinFights.bind(this)\r\n        this.renderSliderText=this.renderSliderText.bind(this)\r\n        this.changeValue=this.changeValue.bind(this)\r\n    }\r\n    changeMinFights(e:any,value: number | number [],activeThumb:any) {\r\n        if (!Array.isArray(value)) {\r\n            this.setState({minFights: value})\r\n        }\r\n    }\r\n    renderSliderText(value:number,index:number) {\r\n        return \"\"+value\r\n    }\r\n    changeValue(value:number) {\r\n        this.setState({value:value})\r\n    }\r\n    render() {\r\n        return (<Box className={\"modernSlider\"}>\r\n            <Slider\r\n                getAriaLabel={() => 'Minimum'}\r\n                value={this.state.minFights}\r\n                min={this.state.filterMinFights}\r\n                max={this.state.filterMaxFights}\r\n                onChange={this.changeMinFights}\r\n                getAriaValueText={this.renderSliderText}\r\n                color={\"secondary\"}\r\n                track=\"inverted\"\r\n                marks\r\n                step={1}\r\n                valueLabelDisplay=\"on\"\r\n                disableSwap\r\n            />\r\n            <ModernSlider min={this.state.filterMinFights} max={this.state.filterMaxFights} callback={this.changeValue} label={\"some\"}/>\r\n        </Box>)\r\n    }\r\n}","import React from 'react';\r\nimport { useGoogleLogin } from 'react-google-login';\r\nimport { refreshTokenSetup } from '../utils/refreshToken';\r\nconst clientId =\r\n    '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\r\nfunction GLogin() {\r\n    const onSuccess = (res:any) => {\r\n        console.log('Login Success: currentUser:', res.profileObj);\r\n        alert(\r\n            `Logged in successfully welcome ${res.profileObj.name} 😍.\\n`\r\n        );\r\n        refreshTokenSetup(res);\r\n    };\r\n\r\n    const onFailure = (res:any) => {\r\n        console.log('Login failed: res:', res);\r\n        alert(\r\n            `Failed to login`\r\n        );\r\n    };\r\n\r\n    const { signIn } = useGoogleLogin({\r\n        onSuccess,\r\n        onFailure,\r\n        clientId,\r\n        isSignedIn: true,\r\n        accessType: 'offline',\r\n    });\r\n\r\n    return (\r\n        <button onClick={signIn} className=\"button\">\r\n            <img src={\"google.svg\"} alt=\"google login\" className=\"icon\"/>\r\n            <span className=\"buttonText\">Sign in with Google</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default GLogin;","export const refreshTokenSetup = (res:any) => {\r\n    // Timing to renew access token\r\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n    const refreshToken = async () => {\r\n        const newAuthRes = await res.reloadAuthResponse();\r\n        refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n        console.log('newAuthRes:', newAuthRes);\r\n        // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n        localStorage.setItem('authToken', newAuthRes.id_token);\r\n\r\n        // Setup the other timer after the first one\r\n        setTimeout(refreshToken, refreshTiming);\r\n    };\r\n\r\n    // Setup first refresh timer\r\n    setTimeout(refreshToken, refreshTiming);\r\n};","import React from 'react';\r\nimport { useGoogleLogout } from 'react-google-login';\r\n\r\nconst clientId =\r\n    '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\r\n\r\nfunction GLogout() {\r\n    const onLogoutSuccess = () => {\r\n        console.log('Logged out Success');\r\n        alert('Logged out Successfully ✌');\r\n    };\r\n\r\n    const onFailure = () => {\r\n        console.log('Handle failure cases');\r\n    };\r\n\r\n    const { signOut } = useGoogleLogout({\r\n        clientId,\r\n        onLogoutSuccess,\r\n        onFailure,\r\n    });\r\n\r\n    return (\r\n        <button onClick={signOut} className=\"button\">\r\n            <img src={\"google.svg\"} alt=\"google login\" className=\"icon\"/>\r\n\r\n            <span className=\"buttonText\">Sign out</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default GLogout;","import React from \"react\";\r\nimport {Box, Slide, Tab, Tabs} from \"@mui/material\";\r\nimport {CounterPackScreen} from \"./CounterPackScreen\";\r\nimport {HashRouter, Navigate, Route, Routes} from \"react-router-dom\"\r\nimport {TestComponent} from \"./TestComponent\";\r\nimport GLogin from \"./GLogin\";\r\nimport GLogout from \"./GLogout\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    navMenuIndex: number,\r\n    navMenuOpened: boolean,\r\n}\r\n\r\nexport class MainScreen extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            navMenuIndex: 0,\r\n            navMenuOpened: false,\r\n        }\r\n        this.changeMenu = this.changeMenu.bind(this)\r\n        this.toggleMenu = this.toggleMenu.bind(this)\r\n    }\r\n\r\n\r\n    changeMenu(event: any, newValue: string) {\r\n        this.setState({\r\n            navMenuIndex: ~~newValue\r\n        })\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.setState({\r\n            navMenuOpened: !this.state.navMenuOpened\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //{!this.state.navMenuOpened && (\r\n        return (\r\n            <HashRouter>\r\n                <Box className={\"mainScreen\"}\r\n                     sx={{flexGrow: 1, display: 'flex', width: '100vw', height: '100%', overflowX: 'hidden'}}>\r\n                    <GLogin/>\r\n                    <GLogout/>\r\n                    <Slide direction=\"right\" in={this.state.navMenuOpened}>\r\n                        <Box className={\"menuBox\"}>\r\n                            <Tabs orientation=\"vertical\"\r\n                                  variant=\"scrollable\"\r\n                                  value={this.state.navMenuIndex}\r\n                                  onChange={this.changeMenu}\r\n                                  aria-label=\"Vertical tabs example\"\r\n                                  sx={{borderRight: 1, borderColor: 'divider'}}>\r\n                                <Tab label=\"Item One\" id={\"vertical-tab-0\"} aria-controls={\"vertical-tabpanel-0\"}/>\r\n                                <Tab label=\"Item Two\" id={\"vertical-tab-1\"} aria-controls={\"vertical-tabpanel-1\"}/>\r\n                            </Tabs>\r\n                            <Box className={\"menuFadeBox\"} onClick={this.toggleMenu}/>\r\n                        </Box>\r\n                    </Slide>\r\n                    <Box role=\"tabpanel\">\r\n                        <Routes>\r\n                            <Route path={\"/counterPack\"} element={\r\n                                <CounterPackScreen openMenuFunction={this.toggleMenu}\r\n                                                   />\r\n                            }/>\r\n                            <Route path={\"/test\"} element={\r\n                                <TestComponent/>\r\n                            }/>\r\n                            <Route path={\"*\"} element={\r\n                                <Navigate replace to=\"/counterPack\" />}\r\n                            />\r\n                        </Routes>\r\n                    </Box>\r\n                </Box>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { ThemeProvider } from '@mui/system';\r\nimport {HeroModeSelect} from \"./components\";\r\nimport {createTheme} from \"@mui/material\";\r\nimport {MySettings} from \"./types/MySettings\";\r\nimport {MainScreen} from \"./components2/MainScreen\";\r\n\r\nconst customTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#5d4037',\r\n            contrastText: '#fff',\r\n            light: '#8b6b61',\r\n            dark: '#321911',\r\n        },\r\n        secondary: {\r\n            light: '#ffc947',\r\n            main: '#ff9800',\r\n            dark: '#c66900',\r\n            contrastText: '#000',\r\n        }\r\n    }\r\n});\r\n\r\nfunction App() {\r\n    if (MySettings.mainVersion===1) {\r\n        return (\r\n            <ThemeProvider theme={customTheme}>\r\n                <HeroModeSelect currentMode={4}/>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (\r\n        <ThemeProvider theme={customTheme}>\r\n            <MainScreen/>\r\n        </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}