{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","types/MyNavigator.ts","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroFAQ.tsx","components/heroBestPackMode.tsx","components/heroModeSelect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","heroId","heroesList","get","a1","a2","i","length","allHeroesIds","result","Map","x","heroData","set","heroName","battleOrder","push","initHeroesList","z","padLeadingZeros","num","size","s","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","flexGrow","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","opacity","borderRadius","renderType","renderForHeroSelectGrid","renderForPackEmptySelected","renderForHeroCounterHeroGrid","renderForHeroPackGrid","minWidth","minHeight","React","Component","MyNavigator","window","location","href","indexOf","mode","currentPack","currentDefenderPack","setCurrentPack","setDefenderPack","heroModeSelect","navigateToTopMode","heroRouletteMode","navigateToMode","heroAddAttackerMode","setHeroPack","heroAddDefenderMode","heroCounterPackMode","updateHeroIds","undefined","heroOneFightMode","heroAddToTrainMode","setAttackHeroPack","setDefenderHeroPack","heroRouletteDefendersMode","heroRouletteAttackersQueueMode","hIds","disableClose","HeroCounterPackMode","currentMode","requestsInProgress","initialized","requestSeq","heroIds","heroLostPacks","heroCounterFilter","heroWinPacks","heroAttackerFilter","heroLostProbs","heroWinProbs","heroCounterProbs","heroAttackerProbs","selectHero","bind","deselectHero","filterCounterHero","filterAttackerHero","selectMode","heroParams","setState","url","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","extendedInfo","statusInfo","Number","parseFloat","r","w","t","Array","from","keys","heroPackId","mmd","finally","requestId","getPacksData","j","error","console","e","target","dataset","heroid","index","splice","includes","value","newMode","Container","flexDirection","justifyContent","ToggleButtonGroup","exclusive","onChange","ToggleButton","Divider","Chip","label","onFilterCounterHero","mainHeroPack","mainHeroPackType","HeroGrid","items","heroArray","values","sort","a","b","container","spacing","renderHeroes","HeroPackSelected","anchorEl","addToAttackQueue","addToDefenderQueue","seeCounterPacks","handleMenuClick","handleMenuClose","seeTrainMode","seeTrainModeA","seeTrainModeD","heroCount","heroes","h1","h2","navigate","heroIdsA","heroIdsD","currentTarget","menuItems","key","MenuItem","renderHeroPack","id","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","renderMenuItems","HeroCounterHeroGrid","HeroCounterPackGrid","heroPack","hl","newHeropack","heroPackFull","Stack","direction","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","log","testqid","newQ","position","testQId","marginBottom","Button","isCloseDisabled","hidden","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","variant","emptyMap","marginTop","disabled","renderA","renderB","renderSendButton","HeroOneFightMode","setMode","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","marginLeft","marginRight","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","extText","formatParameter","typ","showCloseButton","name","goodName","multiplier","unit","prec","HeroRouletteMode","HeroFAQ","padding","HeroBestPackMode","heroesFilter","filterHero","updateHeroes","heroFilter","heroUniqMap","HeroModeSelect","rouletteSubMode","oneFightSubMode","navigateToTopFunction","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e4c4e3.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder:number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result:Map<number, Hero>=new Map<number,Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId=~~x\r\n        if (heroId>=1 && heroId<599) {\r\n            const heroData:any = HStorage.heroDescStorage[x]\r\n            result.set(heroId,{\r\n                heroId: heroId,\r\n                heroName: HStorage.localeStorage[\"LIB_HERO_NAME_\"+heroId],\r\n                battleOrder:heroData.battleOrder\r\n            })\r\n            HeroData.allHeroesIds.push(heroId)\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\nstatic getHeroById(heroId: number) {\r\n    return HeroData.heroesList.get(heroId)\r\n}\r\nstatic compareArrays (a1:any[],a2:any[]) {var i = a1.length; if (i !== a2.length) return false; while (i--) { if (a1[i] !== a2[i]) return false; } return true}\r\nstatic allHeroesIds: number[] = []\r\nstatic heroesList: Map<number, Hero> = initHeroesList()\r\n    static z = new Map([\r\n    [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n    [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n    [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n    [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n    [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n    [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n    [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n    [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n    [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n    [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n    [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n    [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n    [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n    [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n    [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n    [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n    [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n    [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n    [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n    [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n    [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n    [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n    [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n    [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n    [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n    [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n    [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n    [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n    [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n    [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n    [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n    [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n    [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n    [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n    [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n    [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n    [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n    [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n    [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n    [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n    [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n    [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n    [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n    [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n    [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n    [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n    [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n    [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n    [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n    [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n    [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n    [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n    [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n    [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={\"\"} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    {prob}\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box sx={{\r\n                maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>пусто</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import {IHeroPack} from \"./IHeroPack\";\r\nimport {HeroModeSelect,HeroCounterPackMode} from \"../components\";\r\nimport HeroRouletteDefendersMode from \"../components/heroRouletteDefendersMode\";\r\nimport HeroRouletteAttackersQueueMode from \"../components/heroRouletteAttackersQueueMode\";\r\nimport HeroAddAttackerMode from \"../components/heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"../components/heroAddDefenderMode\";\r\nimport HeroRouletteMode from \"../components/heroRouletteMode\";\r\nimport HeroOneFightMode from \"../components/heroOneFightMode\";\r\nimport HeroAddToTrainMode from \"../components/heroAddToTrainMode\";\r\n\r\nexport class MyNavigator {\r\n    static heroModeSelect?:HeroModeSelect\r\n    static heroCounterPackMode?:HeroCounterPackMode\r\n    static heroRouletteDefendersMode?:HeroRouletteDefendersMode\r\n    static heroRouletteAttackersQueueMode?:HeroRouletteAttackersQueueMode\r\n    static heroAddAttackerMode?:HeroAddAttackerMode\r\n    static heroAddDefenderMode?:HeroAddDefenderMode\r\n    static heroRouletteMode?:HeroRouletteMode\r\n    static heroOneFightMode?:HeroOneFightMode\r\n    static heroAddToTrainMode?:HeroAddToTrainMode\r\n    static currentPack:IHeroPack = {hIds:[]}\r\n    static currentDefenderPack:IHeroPack = {hIds:[]}\r\n    static disableClose = window.location.href.indexOf(\"zzzz\")<0\r\n    static isCloseDisabled() {\r\n        return window.location.href.indexOf(\"zzzz\")<0\r\n    }\r\n    static navigate(mode:string,currentPack?:IHeroPack,currentDefenderPack?:IHeroPack) {\r\n        if (currentPack) {\r\n            MyNavigator.setCurrentPack(currentPack)\r\n        }\r\n        if (currentDefenderPack) {\r\n            MyNavigator.setDefenderPack(currentDefenderPack)\r\n        }\r\n        switch (mode) {\r\n            case \"RouletteAttackQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,0)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(0)\r\n                }\r\n                if (MyNavigator.heroAddAttackerMode && currentPack) {\r\n                    MyNavigator.heroAddAttackerMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"RouletteDefenderQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,2)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(2)\r\n                }\r\n                if (MyNavigator.heroAddDefenderMode && currentPack) {\r\n                    MyNavigator.heroAddDefenderMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"CounterPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(0)\r\n                }\r\n                if (MyNavigator.heroCounterPackMode && currentPack) {\r\n                    MyNavigator.heroCounterPackMode.updateHeroIds(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"OneFightPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(2,undefined,1)\r\n                }\r\n                if (MyNavigator.heroOneFightMode) {\r\n                    MyNavigator.heroOneFightMode.navigateToMode(1)\r\n                }\r\n                if (MyNavigator.heroAddToTrainMode) {\r\n                    if (currentPack) {\r\n                        MyNavigator.heroAddToTrainMode.setAttackHeroPack(currentPack)\r\n                    }\r\n                    if (currentDefenderPack) {\r\n                        MyNavigator.heroAddToTrainMode.setDefenderHeroPack(currentDefenderPack)\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static setCurrentPack(currentPack:IHeroPack) {\r\n        MyNavigator.currentPack=currentPack\r\n    }\r\n    static setDefenderPack(currentDefenderPack:IHeroPack) {\r\n        MyNavigator.currentDefenderPack=currentDefenderPack\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    heroLostProbs: Map<number, number>,\r\n    heroCounterProbs: Map<number, number>,\r\n    heroAttackerProbs: Map<number, number>,\r\n    heroLostPacks: IHeroPack[],\r\n    heroWinPacks: IHeroPack[],\r\n    heroWinProbs: Map<number,number>\r\n    heroCounterFilter: number[],\r\n    heroAttackerFilter: number[],\r\n    requestsInProgress: number,\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            heroWinPacks: [],\r\n            heroAttackerFilter: [],\r\n            requestsInProgress: 0,\r\n            heroLostProbs: new Map<number,number>(),\r\n            heroWinProbs: new Map<number,number>(),\r\n            heroCounterProbs: new Map<number,number>(),\r\n            heroAttackerProbs: new Map<number,number>(),\r\n            currentMode: props.currentMode\r\n        };\r\n        this.requestsInProgress=0\r\n        this.currentMode=props.currentMode\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n        this.filterAttackerHero = this.filterAttackerHero.bind(this)\r\n        this.selectMode=this.selectMode.bind(this)\r\n        this.updateHeroIds(this.state.heroIds)\r\n        MyNavigator.heroCounterPackMode=this\r\n        //console.log('created heroCounterPackMode',this.state.heroIds)\r\n    }\r\n    currentMode: number\r\n    requestsInProgress: number\r\n    initialized: boolean = false\r\n    requestSeq=0\r\n\r\n\r\n    getPacksData(heroIds:IHeroPack,currentMode:number) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"\"\r\n        if (currentMode===0) {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroes/\"\r\n        } else {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs = new Map<number, number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = []\r\n                            if (currentMode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n\r\n                            }\r\n                            cnt++\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:\"win_rate=\"+(Number.parseFloat(z.r)*100).toFixed(1)+\"% won_fights=\"+z.w+\" total_fights=\"+z.t }})\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                        if (currentMode===0) {\r\n                            //console.log('ULP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                            )\r\n                        } else {\r\n                            //console.log('UWP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroAttackerProbs: heroProbs, heroWinPacks: heroLostPacks}\r\n                            )\r\n                        }\r\n                    }\r\n                }).finally(()=>{\r\n                    this.requestsInProgress--\r\n                    this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: IHeroPack) {\r\n        const currentMode=this.currentMode\r\n        this.initialized=true\r\n        const requestId=this.requestSeq++\r\n            this.setState(\r\n                {heroIds: heroIds, heroLostProbs: new Map<number, number>(), heroLostPacks: [], heroWinProbs: new Map<number, number>(), heroWinPacks: [],heroCounterProbs:new Map<number, number>(),heroAttackerProbs:new Map<number,number>()}\r\n            )\r\n        if (heroIds.hIds.length == 5) {\r\n            this.getPacksData(heroIds,0)\r\n            this.getPacksData(heroIds,1)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n            //console.log('RIP+1',requestId,this.state.requestsInProgress)\r\n            this.requestsInProgress++\r\n            let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,0)\r\n                            let heroProbs = new Map<number, number>()\r\n                            if (result['items']) {\r\n                                for (const j in result['items']) {\r\n                                    if (result['items'][j]['d']) {\r\n                                        heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                    }\r\n                                }\r\n                            }\r\n                this.setState({\r\n                    heroLostProbs: heroProbs,\r\n                    heroIds: heroIds,\r\n                    heroLostPacks: []\r\n                });\r\n                            //console.log('XXX2 nulled heroLostPacks:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                            this.setState({\r\n                                heroLostProbs: new Map<number, number>(),\r\n                                heroIds: heroIds,\r\n                                heroLostPacks: []\r\n                            });\r\n                    }\r\n                ).finally(()=>{\r\n                    //console.log('ReqFin0 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n            this.requestsInProgress++\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,1)\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroWinProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: []\r\n                        });\r\n                        //console.log('XXX2 nulled win lost packs:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                        this.setState({\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: [],\r\n                            heroWinProbs: new Map<number, number>()\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                //console.log('ReqFin1 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            }\r\n        }\r\n    }\r\n\r\n    filterAttackerHero(e: any) {\r\n        // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroAttackerFilter = this.state.heroAttackerFilter\r\n            const index = heroAttackerFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroAttackerFilter.splice(index, 1);\r\n            } else {\r\n                heroAttackerFilter.push(heroId)\r\n            }\r\n            this.setState({heroAttackerFilter: heroAttackerFilter})\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.hIds.includes(heroId) && heroIds.hIds.length < 5) {\r\n                heroIds.hIds.push(heroId)\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.hIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                heroIds.hIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMode(e:any,value:string) {\r\n        const newMode=~~value\r\n        this.currentMode=newMode\r\n        //console.log('Set mode ',newMode)\r\n        this.setState({currentMode:newMode})\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentMode=this.state.currentMode\r\n        //console.log('RENDER CPM',currentMode,this.state.heroIds)\r\n            if (this.state.heroIds.hIds.length == 5) {\r\n               /* if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                //console.log('RE',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Выбранный пак\":\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero} key={this.state.heroIds.hIds.join(\",\")}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(currentMode===0?\"Кто из героев побеждает твой пак - можешь здесь отфильтровать\":\"Кто из героев проиграл твоему паку - можешь здесь отфильтровать\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={currentMode===0?this.state.heroCounterProbs:this.state.heroAttackerProbs}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={10+currentMode}\r\n\r\n                        />\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.state.currentMode===0?\"Контр-паки\":\"Кто проиграл твоему паку\"):\"Идет загрузка...Просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={20+currentMode}\r\n                                             mainHeroPack={this.state.heroIds} mainHeroPackType={currentMode===0?'d':'a'}\r\n                        />\r\n                    </Container>\r\n                )\r\n            } else {\r\n                //console.log('RE2',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                /*if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                return (\r\n\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+this.currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Кто побеждает твой пак</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Кого побеждает твой пак</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.currentMode===0?\"Выбрать защитный пак\":\"Выбрать атакующий пак\"):\"Идет загрузка...Просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid heroIds={this.state.heroIds} heroProbs={this.currentMode===0?this.state.heroLostProbs:this.state.heroWinProbs}\r\n                                      selectHero={this.selectHero} key={30+this.currentMode}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return b.heroProb-a.heroProb\r\n        })\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0})\r\n            }\r\n        }\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.hIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} className={\"heroGrid\"} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Box, Button, Grid, Menu, MenuItem, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    heroIdsA?: IHeroPack,\r\n    heroIdsD?: IHeroPack,\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    //heroIds: IHeroPack,\r\n    anchorEl: any,\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            //heroIds: props.heroIds,\r\n            anchorEl: null,\r\n        };\r\n        this.addToAttackQueue=this.addToAttackQueue.bind(this)\r\n        this.addToDefenderQueue=this.addToDefenderQueue.bind(this)\r\n        this.seeCounterPacks=this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick=this.handleMenuClick.bind(this)\r\n        this.handleMenuClose=this.handleMenuClose.bind(this)\r\n        this.seeTrainMode=this.seeTrainMode.bind(this)\r\n        this.seeTrainModeA=this.seeTrainModeA.bind(this)\r\n        this.seeTrainModeD=this.seeTrainModeD.bind(this)\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.props.heroIds.hIds.length\r\n        const heroes = this.props.heroIds.hIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n\r\n    addToAttackQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteAttackQueue\",this.props.heroIds)\r\n    }\r\n    addToDefenderQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteDefenderQueue\",this.props.heroIds)\r\n    }\r\n\r\n    seeCounterPacks(e:any) {\r\n        MyNavigator.navigate(\"CounterPack\",this.props.heroIds)\r\n    }\r\n\r\n    seeTrainMode(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIdsA,this.props.heroIdsD)\r\n    }\r\n    seeTrainModeA(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\",this.props.heroIds,undefined)\r\n    }\r\n    seeTrainModeD(e:any) {\r\n        MyNavigator.navigate(\"OneFightPack\", undefined,this.props.heroIdsD)\r\n    }\r\n\r\n    handleMenuClick(e:any) {\r\n        this.setState({anchorEl:e.currentTarget})\r\n    }\r\n    handleMenuClose(e:any) {\r\n        this.setState({anchorEl:null})\r\n    }\r\n    renderMenuItems() {\r\n        const menuItems=[]\r\n        let key=0\r\n        menuItems.push(<MenuItem key={key++} onClick={this.addToAttackQueue}>Add to Attack roulette</MenuItem>)\r\n        menuItems.push(<MenuItem key={key++} onClick={this.addToDefenderQueue}>Add to Defender roulette</MenuItem>)\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeCounterPacks}>See counter packs</MenuItem>)\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeA}>Add to Train as Attacker</MenuItem>)\r\n        menuItems.push(<MenuItem key={key++} onClick={this.seeTrainModeD}>Add to Train as Defender</MenuItem>)\r\n        if (this.props.heroIdsA !== undefined && this.props.heroIdsD !== undefined) menuItems.push(<MenuItem key={key++} onClick={this.seeTrainMode}>Add to Train both packs</MenuItem>)\r\n        return menuItems\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box className={\"heroPackSelected\"} sx={{\r\n                bgcolor: 'primary.light'\r\n            }}>\r\n            {this.renderHeroPack()}\r\n                <Box\r\n                    id=\"demo-positioned-button\"\r\n                    aria-controls=\"demo-positioned-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                    onClick={this.handleMenuClick}\r\n                    className={\"heroButtonThreeDots\"}\r\n                >\r\n                    &#10247;\r\n                </Box>\r\n                <Box className={\"heroPackSelectedExtStatus\"}>{this.props.heroIds.extendedInfo?.statusInfo?this.props.heroIds.extendedInfo.statusInfo:\"\"}</Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    {this.renderMenuItems()}\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        //if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x)\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n       // }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Box className={\"heroCounterHeroGrid\"} sx={{\r\n\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon,HeroPackSelected} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    mainHeroPack?: IHeroPack,\r\n    mainHeroPackType?: string,\r\n    heroLostPacks: IHeroPack[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: IHeroPack) {\r\n\r\n        const items = []\r\n        const hl=heroPack.hIds.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack.hIds[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const j in this.props.heroLostPacks) {\r\n\r\n            const heroPackFull=this.props.heroLostPacks[j]\r\n            const heroPack=heroPackFull.hIds\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            /*items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)*/\r\n                items.push(<HeroPackSelected  key={heroPack.join(',')+this.props.mainHeroPack?.hIds?.join(',')+this.props.mainHeroPackType} heroIds={heroPackFull} heroIdsA={this.props.mainHeroPack?(this.props.mainHeroPackType==='a'?this.props.mainHeroPack:heroPackFull):undefined } heroIdsD={this.props.mainHeroPack?(this.props.mainHeroPackType==='d'?this.props.mainHeroPack:heroPackFull):undefined } deselectHero={this.props.onFilterCounterHero}/>)\r\n        }\r\n        if (items.length===0) {\r\n            items.push(\r\n                <Stack direction=\"row\" key={cnt++} sx={{\r\n                    bgcolor: 'primary.light',\r\n                    m:0.25\r\n                }}>empty</Stack>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        //console.log('RHCPG',this.props.heroLostPacks)\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark',\r\n\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},heroIdsD:{hIds:heroIdsD},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                marginBottom: '3px',\r\n                borderRadius: '10px',\r\n            }}key={i}>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n                </Box>\r\n                <Box className={\"heroQueueTwoVSBox\"}><span className={\"heroQueueTwoVSPosition\"}>{x.position}</span><span className={\"heroQueueTwoVSVS\"}>VS</span></Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Button className={\"closeButton\"} sx={{\r\n                    display: MyNavigator.isCloseDisabled()?'none':'inline-flex'\r\n                }} hidden={MyNavigator.isCloseDisabled()} data-testqid={x.testQId}><img data-testqid={x.testQId} onClick={this.removeIcon} className={\"closeIcon\"} alt=\"Close\"  src={\"close_icon.png\"}/></Button>\r\n            </Box>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box className={\"heroQueueTwoBox\"}>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            heroIdsD: props.heroIdsD,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            displayEditD: props.heroIdsD.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        console.log('HeroAddToTrainMode created',this.state.heroIdsA,this.state.heroIdsD)\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setAttackHeroPack=this.setAttackHeroPack.bind(this)\r\n        this.setDefenderHeroPack=this.setDefenderHeroPack.bind(this)\r\n        MyNavigator.heroAddToTrainMode=this\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setAttackHeroPack(currentPack: IHeroPack) {\r\n        this.setState({heroIdsA:currentPack})\r\n    }\r\n\r\n    setDefenderHeroPack(currentDefenderPack: IHeroPack) {\r\n        this.setState({heroIdsD:currentDefenderPack})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds }})\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.hIds.length>0?\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA}  deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.hIds.length>0?\r\n                        <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Готово</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && this.state.heroIdsD.hIds.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('RHATTM',this.state.heroIdsA,this.state.heroIdsD)\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateToTopFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n\r\n        MyNavigator.heroOneFightMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        console.log('heroOneFightMode-renderMode',MyNavigator.currentPack,MyNavigator.currentDefenderPack)\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={MyNavigator.currentPack} heroIdsD={MyNavigator.currentDefenderPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Добавить в очередь бой из 2х паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Очередь боев в обработке сервером</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddAttackerMode=this\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip\r\n                    label={this.state.requestsInProgress > 0 ? \"Идет загрузка...просто жди!\" : \"Выбери атакующих героев\"}/></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Атакующий пак\"} /></Divider>\r\n\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddDefenderMode=this\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Готово</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Выбери защищающихся героев\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...просто жди!\":\"Защищающийся пак\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Изменить</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Отправить</Button>)\r\n        } else {\r\n            return (<Button disabled>Выбери героев перед отправкой</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteAttackersQueueMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box hidden={MyNavigator.isCloseDisabled()}><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteDefendersMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    static formatParameter(x:any,name:string,goodName:string,multiplier:number,unit:string,prec:number) {\r\n        return x[name] && x[name]!==null && x[name]!==\"null\"?\"\"+goodName+\"=\"+(x[name]*multiplier).toFixed(prec)+unit+\", \":\"\"\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        let extText=\"\"\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsd\",\"Всего_боев_в_роли_защищаегося\",1,\"\",0)\r\n\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}},testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>пусто</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box className={\"heroBoxQueueWithNum\"} sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton && !MyNavigator.isCloseDisabled()?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Текущая очередь атаки added by user. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в аренде. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Топ паков в защите. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Идет загрузка...Просто жди!\":\"Паки от админа. Нажмите сюда для обновления\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n        MyNavigator.heroRouletteMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Добавить в атакующие паки</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Список атакующих паков</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Добавить в защищающиеся паки</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Список защищающихся</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroFAQ extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render() {\r\n        return (<Box sx={{\r\n            padding: '1em 1em 1em 1em'\r\n        }}>\r\n            <h3>1. Что это за сервис?</h3>\r\n            <p>\r\n                Статистика боёв на полной прокачке в мобильной версии Хроник Хаоса\r\n            </p>\r\n            <h3>2. Как им пользоваться?</h3>\r\n            <p>\r\n                Вверху меню - нажимаешь, смотришь ;-)\r\n            </p>\r\n            <h3>3. Ну и что там в меню \"Найти кто или кого побеждает пак\"?</h3>\r\n            <p>\r\n                Есть два режима - \"Кто побеждает твой пак\" и \"Кого побеждает твой пак\". Если нужно объяснять смысл этих названий, то сочувствую твоим друзьям и родителям и искренне тебе завидую.<br/>\r\n                В этом режиме ты выбираешь из героев ниже пак. Список героев составлен только из тех, по кому есть статистика с победой в бою.<br/>\r\n                Если твоего пака здесь нет - попробуй победить в защите или нападении в режимах \"Одна битва\" или \"Рулетка\".\r\n            </p>\r\n            <h3>4. А что в меню \"Одна битва\"?</h3>\r\n            <p>\r\n                Здесь выбираешь атакующий пак, защищающийся пак и отправляешь на обработку бой. Твой бой добавится в очередь<br/>\r\n                Когда дайдет очередь до твоего боя (сервер бесплатный для тебя и не резиновый, делает по 3-5 боев в минуту)<br/>\r\n                Когда сервер обработает бой, он пропадет из очереди и его результаты попадут в статистику, а если атакующий пак победит, ты сможешь найти результаты по атакующему или защищающемуся паку в меню \"Найти кто или кого побеждает пак\"\r\n            </p>\r\n            <h3>5. А что в меню \"Рулетка\"?</h3>\r\n            <p>\r\n                Здесь есть набор паков (48+ шт.), которые защищаются (подменю \"Список защищающихся\")<br/>\r\n                Ты можешь добавить свой пак в список защищающихся (подменю \"Добавить в защищающиеся паки\") или атакующих (\"Добавить в атакующие паки\")<br/>\r\n                Если сервер простаивает (нет команд, добавленных шаловливыми ручками как у тебя), то генерится рандомный пак и он пробует атаковать весь список защитных паков этой рулетки<br/>\r\n                Когда ты добавляешь свой пак в защищающиеся (подменю \"Добавить в защищающиеся паки\") в режиме рулетки, то он там висит только 6 часов (сервер нерезиновый, а таких как ты много)<br/>\r\n                Когда ты добавляешь свой пак в атакующие (\"Добавить в атакующие паки\"), то сервер бросает всё (да щас!ха-ха!) и стравливает твой атакующий пак с защищающимися паками из списка в подменю \"Список защищающихся\".<br/>\r\n            </p>\r\n            <h3>6. Как формируется список в подменю \"Список защищающихся\" из режима \"Рулетка\"?</h3>\r\n            <p>\r\n                Есть четыре группы:<br/>\r\n                1. Добавленные шаловливыми ручками такими как у тебя из меню (\"Добавить в защищающиеся паки\"). Они там держатся не больше 6 часов, потом умирают как и все живое<br/>\r\n                2. Топ 15 атакующих паков по статистике на этом сервере<br/>\r\n                3. Топ 15 защитных паков по статистике на этом сервере<br/>\r\n                4. Паки админа. Аз есмь админ добавил сюда паки на свое усмотрение и не собираюсь их обсуждать<br/>\r\n            </p>\r\n            <h3>7. Имеет ли этот сервис какое-то отношение к Nexters?</h3>\r\n            <p>\r\n                Ты сам посмотри на это убожество. Сервис слепил из подручных коричневых масс и деревянных изделий быстрее, чем твой папа и мама постарались над твоим зачатием. Для тех, кто не понял - конечно же нет.\r\n            </p>\r\n        </Box>)\r\n    }\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React from \"react\";\r\nimport {Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterHeroGrid, HeroCounterPackGrid} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    heroesFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    heroesFilter: number[],\r\n    requestsInProgress: number,\r\n    heroIds: IHeroPack[],\r\n    heroProbs: Map<number,number>\r\n}\r\n\r\nexport class HeroBestPackMode extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        const heroProbs=new Map<number,number>()\r\n        this.state={\r\n            currentMode: props.currentMode,\r\n            heroesFilter: props.heroesFilter,\r\n            requestsInProgress: 0,\r\n            heroIds: [],\r\n            heroProbs: heroProbs\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.filterHero=this.filterHero.bind(this)\r\n        for (const x of HeroData.allHeroesIds) {\r\n            this.state.heroProbs.set(x,-1)\r\n        }\r\n        this.updateHeroes(props.heroesFilter,props.currentMode,heroProbs)\r\n    }\r\n    requestSeq: number =0\r\n    requestsInProgress: number =0\r\n\r\n    updateHeroes(heroFilter:number[],currentMode:number,heroProbs:Map<number,number>) {\r\n\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroFilter.length;i++) {heroParams[i]=heroFilter[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/topPacks/\"\r\n        fetch(url+(currentMode===0?'a':'d')+\"/0/0/0/\"+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        for (const x of Array.from(heroProbs.keys())) {\r\n                            heroProbs.set(x,-1)\r\n                        }\r\n                        const heroUniqMap=new Map<string,number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            console.log('LPU '+lostPack.join(',')+\" wr=\"+(z['avgwinrate']*100).toFixed(1)+\" lr=\"+(z['avglossrate']*100).toFixed(1))\r\n\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m && m>=0) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n                            }\r\n                            cnt++\r\n                            let extText=\"\"\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumwinrate\",\"Рейтинг_побед_в_роли_атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avgwinrate\",\"Процент_побед_в_роли_атакующего\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntwinpacks\",\"Всего_пачек_защищалось_от_этого_пака\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsa\",\"Выиграно_боев_в_роли_атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsa\",\"Всего_боев_в_роли_атакующего\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumlossrate\",\"Рейтинг_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avglossrate\",\"Процент_побед_в_роли_защищающегося\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntlosspacks\",\"Всего_пачек_атаковало_этого_пак\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsd\",\"Выиграно_боев_в_роли_защищаегося\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsd\",\"Всего_боев_в_роли_защищаегося\",1,\"\",0)\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            if (!heroUniqMap.get(lostPack.join(','))) {\r\n                                heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:extText}})\r\n                                heroUniqMap.set(lostPack.join(','),1)\r\n                            }\r\n\r\n                            //console.log('HLP',heroLostPacks)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                            this.setState(\r\n                                {heroIds: heroLostPacks, heroProbs: heroProbs}\r\n                            )\r\n\r\n                    }\r\n                }).finally(()=>{\r\n            this.requestsInProgress--\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    filterHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroesFilter = this.state.heroesFilter\r\n            const index = heroesFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroesFilter.splice(index, 1);\r\n                this.setState({heroesFilter: heroesFilter})\r\n                this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n            } else {\r\n                if (heroesFilter.length<5) {\r\n                    heroesFilter.push(heroId)\r\n                    this.setState({heroesFilter: heroesFilter})\r\n                    this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setMode(e:any,value:string) {\r\n        const currentMode=~~value\r\n        const heroFilter:number[] = []\r\n        this.setState({currentMode:currentMode,heroesFilter:heroFilter})\r\n        this.updateHeroes(heroFilter,currentMode,this.state.heroProbs)\r\n    }\r\n\r\n    render() {\r\n        return (<Container sx={{\r\n            bgcolor: 'background.default',\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" color=\"primary\">Лучшие паки в атаке</ToggleButton>\r\n                <ToggleButton value=\"1\" color=\"primary\">Лучшие паки в защите</ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Divider />\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Фильтр по героям\":\"Идет загрузка...просто жди!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterHeroGrid heroProbs={this.state.heroProbs}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={this.state.heroesFilter} key={10+this.state.currentMode+this.requestSeq}/>\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Лучшие паки\":\"Идет загрузка...просто жди! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterPackGrid heroLostPacks={this.state.heroIds}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={[]} key={20+this.state.currentMode+this.requestSeq}/>\r\n        </Container>)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {HeroFAQ} from \"./heroFAQ\";\r\nimport {HeroBestPackMode} from \"./heroBestPackMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    rouletteSubMode: number,\r\n    oneFightSubMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode,\r\n            rouletteSubMode: 0,\r\n            oneFightSubMode: 1\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToTopMode=this.navigateToTopMode.bind(this)\r\n        MyNavigator.heroModeSelect=this\r\n    }\r\n    navigateToTopMode(newMode:number,rouletteSubMode?:number,oneFightSubMode?:number) {\r\n        if (rouletteSubMode) {\r\n            this.setState({currentMode: newMode, rouletteSubMode: rouletteSubMode})\r\n        } else if (oneFightSubMode) {\r\n            this.setState({currentMode: newMode, oneFightSubMode: oneFightSubMode})\r\n        } else {\r\n            this.setState({currentMode: newMode})\r\n        }\r\n    }\r\n    setMode(e:any,value:string) {\r\n        this.navigateToTopMode(~~value)\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={MyNavigator.currentPack} currentMode={0} key={MyNavigator.currentPack.hIds.join(',')}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateToTopFunction={this.navigateToTopMode} currentMode={this.state.oneFightSubMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToTopMode} currentMode={this.state.rouletteSubMode} key={10+this.state.rouletteSubMode}/>)\r\n        } else if (currentMode===4) {\r\n            return (<HeroFAQ/>)\r\n        }else if (currentMode===5) {\r\n            return (<HeroBestPackMode heroesFilter={[]} currentMode={0}/>)\r\n        }\r\n        else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <Box className={\"heroHeader\"}><a target={\"_blank\"} href={\"https://www.youtube.com/channel/UCY_SEAvMIveeRAE_xMtNBKQ\"}><img src={\"./youtube-subscribe.gif\"} /> <span>Нажми сюда для просмотра видео<br/> с боями на полной прокачке</span> </a></Box>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"4\" color=\"primary\">FAQ</ToggleButton>\r\n                <ToggleButton value=\"0\" color=\"primary\">Найти кто или кого побеждает пак</ToggleButton>\r\n                <ToggleButton value=\"2\" color=\"primary\">Одна битва</ToggleButton>\r\n                <ToggleButton value=\"3\" color=\"primary\">Рулетка</ToggleButton>\r\n                <ToggleButton value=\"5\" color=\"primary\">Топ паки</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect;","import React from 'react';\nimport './App.css';\n\nimport { ThemeProvider } from '@mui/system';\nimport {HeroModeSelect} from \"./components\";\nimport {createTheme} from \"@mui/material\";\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#5d4037',\n            contrastText: '#fff',\n            light: '#8b6b61',\n            dark: '#321911',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#000',\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <ThemeProvider theme={customTheme}>\n        <HeroModeSelect currentMode={4}/>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}