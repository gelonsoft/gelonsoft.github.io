{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","types/MyNavigator.ts","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroOneFightMode.tsx","components/heroAddAttackerMode.tsx","components/heroAddDefenderMode.tsx","components/heroRouletteAttackersQueueMode.tsx","components/heroRouletteDefendersMode.tsx","components/heroRouletteMode.tsx","components/heroFAQ.tsx","components/heroBestPackMode.tsx","components/heroModeSelect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","heroId","heroesList","get","a1","a2","i","length","allHeroesIds","result","Map","x","heroData","set","heroName","battleOrder","push","initHeroesList","z","padLeadingZeros","num","size","s","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","flexGrow","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","opacity","borderRadius","renderType","renderForHeroSelectGrid","renderForPackEmptySelected","renderForHeroCounterHeroGrid","renderForHeroPackGrid","minWidth","minHeight","React","Component","MyNavigator","mode","currentPack","setCurrentPack","heroModeSelect","navigateToTopMode","heroRouletteMode","navigateToMode","heroAddAttackerMode","setHeroPack","heroAddDefenderMode","heroCounterPackMode","updateHeroIds","heroRouletteDefendersMode","heroRouletteAttackersQueueMode","hIds","disableClose","HeroCounterPackMode","currentMode","requestsInProgress","initialized","requestSeq","heroIds","heroLostPacks","heroCounterFilter","heroWinPacks","heroAttackerFilter","heroLostProbs","heroWinProbs","heroCounterProbs","heroAttackerProbs","selectHero","bind","deselectHero","filterCounterHero","filterAttackerHero","selectMode","console","log","heroParams","setState","url","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","d1","d2","d3","d4","d5","extendedInfo","statusInfo","Number","parseFloat","r","w","t","Array","from","keys","heroPackId","mmd","finally","requestId","getPacksData","j","error","e","target","dataset","heroid","index","indexOf","splice","includes","value","newMode","Container","flexDirection","justifyContent","ToggleButtonGroup","exclusive","onChange","ToggleButton","Divider","Chip","label","onFilterCounterHero","HeroGrid","items","heroArray","values","undefined","sort","a","b","container","spacing","renderHeroes","HeroPackSelected","anchorEl","addToAttackQueue","addToDefenderQueue","seeCounterPacks","handleMenuClick","handleMenuClose","heroCount","heroes","h1","h2","navigate","currentTarget","renderHeroPack","id","Menu","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","HeroCounterHeroGrid","HeroCounterPackGrid","heroPack","hl","newHeropack","heroPackFull","Stack","direction","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","testqid","newQ","position","heroIdsA","heroIdsD","testQId","marginBottom","hidden","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","headers","JSON","stringify","navigateFunction","newState","Button","variant","emptyMap","marginTop","disabled","renderA","renderB","renderSendButton","HeroOneFightMode","setMode","renderMode","HeroAddAttackerMode","HeroAddDefenderMode","HeroRouletteAttackersQueueMode","marginLeft","marginRight","HeroRouletteDefendersMode","queueItemsUser","queueItemsTopD","queueItemsTopA","queueItemsClassic","newQPlayer","newQAttacker","newQDefender","newQClassic","extText","formatParameter","typ","showCloseButton","name","goodName","multiplier","unit","prec","HeroRouletteMode","HeroFAQ","HeroBestPackMode","heroesFilter","filterHero","updateHeroes","heroFilter","HeroModeSelect","rouletteSubMode","navigateToTopFunction","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549b4275.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder:number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result:Map<number, Hero>=new Map<number,Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId=~~x\r\n        if (heroId>=1 && heroId<599) {\r\n            const heroData:any = HStorage.heroDescStorage[x]\r\n            result.set(heroId,{\r\n                heroId: heroId,\r\n                heroName: HStorage.localeStorage[\"LIB_HERO_NAME_\"+heroId],\r\n                battleOrder:heroData.battleOrder\r\n            })\r\n            HeroData.allHeroesIds.push(heroId)\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\nstatic getHeroById(heroId: number) {\r\n    return HeroData.heroesList.get(heroId)\r\n}\r\nstatic compareArrays (a1:any[],a2:any[]) {var i = a1.length; if (i !== a2.length) return false; while (i--) { if (a1[i] !== a2[i]) return false; } return true}\r\nstatic allHeroesIds: number[] = []\r\nstatic heroesList: Map<number, Hero> = initHeroesList()\r\n    static z = new Map([\r\n    [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n    [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n    [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n    [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n    [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n    [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n    [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n    [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n    [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n    [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n    [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n    [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n    [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n    [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n    [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n    [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n    [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n    [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n    [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n    [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n    [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n    [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n    [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n    [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n    [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n    [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n    [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n    [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n    [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n    [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n    [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n    [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n    [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n    [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n    [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n    [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n    [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n    [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n    [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n    [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n    [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n    [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n    [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n    [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n    [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n    [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n    [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n    [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n    [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n    [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n    [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n    [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n    [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n    [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0 !important',\r\n                flexGrow: 0,\r\n                maxWidth: 'max-content',\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} className={\"heroIconGrid\"} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: '0px !important',\r\n                maxWidth: 'max-content',\r\n                flexGrow: 0,\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: '0px !important',\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  className={\"heroIconGrid\"} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box sx={{\r\n                maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                flexBasis: '0px !important',\r\n                flexGrow: 0,\r\n                m: 0.0,\r\n                borderRadius: 2,\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>empty</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import {IHeroPack} from \"./IHeroPack\";\r\nimport {HeroModeSelect,HeroCounterPackMode} from \"../components\";\r\nimport HeroRouletteDefendersMode from \"../components/heroRouletteDefendersMode\";\r\nimport HeroRouletteAttackersQueueMode from \"../components/heroRouletteAttackersQueueMode\";\r\nimport HeroAddAttackerMode from \"../components/heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"../components/heroAddDefenderMode\";\r\nimport HeroRouletteMode from \"../components/heroRouletteMode\";\r\n\r\nexport class MyNavigator {\r\n    static heroModeSelect?:HeroModeSelect\r\n    static heroCounterPackMode?:HeroCounterPackMode\r\n    static heroRouletteDefendersMode?:HeroRouletteDefendersMode\r\n    static heroRouletteAttackersQueueMode?:HeroRouletteAttackersQueueMode\r\n    static heroAddAttackerMode?:HeroAddAttackerMode\r\n    static heroAddDefenderMode?:HeroAddDefenderMode\r\n    static heroRouletteMode?:HeroRouletteMode\r\n    static currentPack:IHeroPack = {hIds:[]}\r\n    static disableClose = true\r\n    static navigate(mode:string,currentPack?:IHeroPack) {\r\n        if (currentPack) {\r\n            MyNavigator.setCurrentPack(currentPack)\r\n        }\r\n        switch (mode) {\r\n            case \"RouletteAttackQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,0)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(0)\r\n                }\r\n                if (MyNavigator.heroAddAttackerMode && currentPack) {\r\n                    MyNavigator.heroAddAttackerMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"RouletteDefenderQueue\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(3,2)\r\n                }\r\n                if (MyNavigator.heroRouletteMode) {\r\n                    MyNavigator.heroRouletteMode.navigateToMode(2)\r\n                }\r\n                if (MyNavigator.heroAddDefenderMode && currentPack) {\r\n                    MyNavigator.heroAddDefenderMode.setHeroPack(currentPack)\r\n                }\r\n                break;\r\n            }\r\n            case \"CounterPack\": {\r\n                if (MyNavigator.heroModeSelect) {\r\n                    MyNavigator.heroModeSelect.navigateToTopMode(0)\r\n                }\r\n                if (MyNavigator.heroCounterPackMode && currentPack) {\r\n                    MyNavigator.heroCounterPackMode.updateHeroIds(currentPack)\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    static setCurrentPack(currentPack:IHeroPack) {\r\n        MyNavigator.currentPack=currentPack\r\n    }\r\n}","import React from \"react\";\r\nimport {Box, Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack,\r\n    heroLostProbs: Map<number, number>,\r\n    heroCounterProbs: Map<number, number>,\r\n    heroAttackerProbs: Map<number, number>,\r\n    heroLostPacks: IHeroPack[],\r\n    heroWinPacks: IHeroPack[],\r\n    heroWinProbs: Map<number,number>\r\n    heroCounterFilter: number[],\r\n    heroAttackerFilter: number[],\r\n    requestsInProgress: number,\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            heroWinPacks: [],\r\n            heroAttackerFilter: [],\r\n            requestsInProgress: 0,\r\n            heroLostProbs: new Map<number,number>(),\r\n            heroWinProbs: new Map<number,number>(),\r\n            heroCounterProbs: new Map<number,number>(),\r\n            heroAttackerProbs: new Map<number,number>(),\r\n            currentMode: props.currentMode\r\n        };\r\n        this.requestsInProgress=0\r\n        this.currentMode=props.currentMode\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n        this.filterAttackerHero = this.filterAttackerHero.bind(this)\r\n        this.selectMode=this.selectMode.bind(this)\r\n        this.updateHeroIds(this.state.heroIds)\r\n        MyNavigator.heroCounterPackMode=this\r\n        console.log('created heroCounterPackMode',this.state.heroIds)\r\n    }\r\n    currentMode: number\r\n    requestsInProgress: number\r\n    initialized: boolean = false\r\n    requestSeq=0\r\n\r\n\r\n    getPacksData(heroIds:IHeroPack,currentMode:number) {\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"\"\r\n        if (currentMode===0) {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroes/\"\r\n        } else {\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroes/\"\r\n        }\r\n        fetch(url+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs = new Map<number, number>()\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = []\r\n                            if (currentMode === 0) {\r\n                                lostPack = [~~z.a1, ~~z.a2, ~~z.a3, ~~z.a4, ~~z.a5]\r\n                            } else {\r\n                                lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n                            }\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n\r\n                            }\r\n                            cnt++\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:\"win_rate=\"+(Number.parseFloat(z.r)*100).toFixed(1)+\"% won_fights=\"+z.w+\" total_fights=\"+z.t }})\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                        if (currentMode===0) {\r\n                            //console.log('ULP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                            )\r\n                        } else {\r\n                            //console.log('UWP',currentMode,heroLostPacks)\r\n                            this.setState(\r\n                                {heroIds: heroIds, heroAttackerProbs: heroProbs, heroWinPacks: heroLostPacks}\r\n                            )\r\n                        }\r\n                    }\r\n                }).finally(()=>{\r\n                    this.requestsInProgress--\r\n                    this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: IHeroPack) {\r\n        const currentMode=this.currentMode\r\n        this.initialized=true\r\n        const requestId=this.requestSeq++\r\n            this.setState(\r\n                {heroIds: heroIds, heroLostProbs: new Map<number, number>(), heroLostPacks: [], heroWinProbs: new Map<number, number>(), heroWinPacks: [],heroCounterProbs:new Map<number, number>(),heroAttackerProbs:new Map<number,number>()}\r\n            )\r\n        if (heroIds.hIds.length == 5) {\r\n            this.getPacksData(heroIds,0)\r\n            this.getPacksData(heroIds,1)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.hIds.length;i++) {heroParams[i]=heroIds.hIds[i];}\r\n            //console.log('RIP+1',requestId,this.state.requestsInProgress)\r\n            this.requestsInProgress++\r\n            let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,0)\r\n                            let heroProbs = new Map<number, number>()\r\n                            if (result['items']) {\r\n                                for (const j in result['items']) {\r\n                                    if (result['items'][j]['d']) {\r\n                                        heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                    }\r\n                                }\r\n                            }\r\n                this.setState({\r\n                    heroLostProbs: heroProbs,\r\n                    heroIds: heroIds,\r\n                    heroLostPacks: []\r\n                });\r\n                            //console.log('XXX2 nulled heroLostPacks:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                            this.setState({\r\n                                heroLostProbs: new Map<number, number>(),\r\n                                heroIds: heroIds,\r\n                                heroLostPacks: []\r\n                            });\r\n                    }\r\n                ).finally(()=>{\r\n                    //console.log('ReqFin0 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n            this.requestsInProgress++\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n            url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findWinPackHeroesStat/\"\r\n            fetch(url+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        //console.log(\"CS-S\",requestId,this.currentMode,1)\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroWinProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: []\r\n                        });\r\n                        //console.log('XXX2 nulled win lost packs:',heroIds)\r\n                    },\r\n                    (error) => {\r\n                        console.error(\"error req\",requestId,error)\r\n                        this.setState({\r\n                            heroIds: heroIds,\r\n                            heroWinPacks: [],\r\n                            heroWinProbs: new Map<number, number>()\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                //console.log('ReqFin1 ',requestId)\r\n                this.requestsInProgress--\r\n                this.setState({requestsInProgress:this.requestsInProgress})\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.setState({heroCounterFilter: heroCounterFilter})\r\n            }\r\n        }\r\n    }\r\n\r\n    filterAttackerHero(e: any) {\r\n        // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroAttackerFilter = this.state.heroAttackerFilter\r\n            const index = heroAttackerFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroAttackerFilter.splice(index, 1);\r\n            } else {\r\n                heroAttackerFilter.push(heroId)\r\n            }\r\n            this.setState({heroAttackerFilter: heroAttackerFilter})\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.hIds.includes(heroId) && heroIds.hIds.length < 5) {\r\n                heroIds.hIds.push(heroId)\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.hIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.extendedInfo={statusInfo:\"\"}\r\n                heroIds.hIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMode(e:any,value:string) {\r\n        const newMode=~~value\r\n        this.currentMode=newMode\r\n        //console.log('Set mode ',newMode)\r\n        this.setState({currentMode:newMode})\r\n        this.updateHeroIds(this.state.heroIds)\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentMode=this.state.currentMode\r\n        //console.log('RENDER CPM',currentMode,this.state.heroIds)\r\n            if (this.state.heroIds.hIds.length == 5) {\r\n               /* if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                //console.log('RE',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Counter-pack</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Attack-pack</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Selected pack\":\"Loading...just wait! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero} key={this.state.heroIds.hIds.join(\",\")}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(currentMode===0?\"Counter heroes - fill free to filter packs\":\"Sucked heroes - fill free to filter packs\"):\"Loading...just wait!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={currentMode===0?this.state.heroCounterProbs:this.state.heroAttackerProbs}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={10+currentMode}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.state.currentMode===0?\"Counter hero packs\":\"Sucked defenders hero packs\"):\"Loading...just wait! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks}\r\n                                             onFilterCounterHero={currentMode===0?this.filterCounterHero:this.filterAttackerHero}\r\n                                             heroCounterFilter={currentMode===0?this.state.heroCounterFilter:this.state.heroAttackerFilter} key={20+currentMode}/>\r\n                    </Container>\r\n                )\r\n            } else {\r\n                //console.log('RE2',currentMode,currentMode===0?this.state.heroLostPacks:this.state.heroWinPacks,this.state.heroIds)\r\n                /*if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }*/\r\n                return (\r\n\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default',\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"flex-start\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                        <ToggleButtonGroup\r\n                            color=\"secondary\"\r\n                            value={\"\"+this.currentMode}\r\n                            exclusive\r\n                            onChange={this.selectMode}\r\n                        >\r\n                            <ToggleButton value=\"0\" color=\"primary\">Counter-pack</ToggleButton>\r\n                            <ToggleButton value=\"1\" color=\"primary\">Attack-pack</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?(this.currentMode===0?\"Choose pack to attack\":\"Choose pack of winners\"):\"Loading...just wait!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid heroIds={this.state.heroIds} heroProbs={this.currentMode===0?this.state.heroLostProbs:this.state.heroWinProbs}\r\n                                      selectHero={this.selectHero} key={30+this.currentMode}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>\r\n}\r\n\r\ninterface IState {\r\n    heroIds: IHeroPack\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return b.heroProb-a.heroProb\r\n        })\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0})\r\n            }\r\n        }\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.hIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} className={\"heroGrid\"} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Box, Button, Grid, Menu, MenuItem, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    heroIds: IHeroPack,\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    //heroIds: IHeroPack,\r\n    anchorEl: any,\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            //heroIds: props.heroIds,\r\n            anchorEl: null,\r\n        };\r\n        this.addToAttackQueue=this.addToAttackQueue.bind(this)\r\n        this.addToDefenderQueue=this.addToDefenderQueue.bind(this)\r\n        this.seeCounterPacks=this.seeCounterPacks.bind(this)\r\n        this.handleMenuClick=this.handleMenuClick.bind(this)\r\n        this.handleMenuClose=this.handleMenuClose.bind(this)\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.props.heroIds.hIds.length\r\n        const heroes = this.props.heroIds.hIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n\r\n    addToAttackQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteAttackQueue\",this.props.heroIds)\r\n    }\r\n    addToDefenderQueue(e:any) {\r\n        MyNavigator.navigate(\"RouletteDefenderQueue\",this.props.heroIds)\r\n    }\r\n\r\n    seeCounterPacks(e:any) {\r\n        MyNavigator.navigate(\"CounterPack\",this.props.heroIds)\r\n    }\r\n\r\n    handleMenuClick(e:any) {\r\n        this.setState({anchorEl:e.currentTarget})\r\n    }\r\n    handleMenuClose(e:any) {\r\n        this.setState({anchorEl:null})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box className={\"heroPackSelected\"} sx={{\r\n                bgcolor: 'primary.light'\r\n            }}>\r\n            {this.renderHeroPack()}\r\n                <Box\r\n                    id=\"demo-positioned-button\"\r\n                    aria-controls=\"demo-positioned-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={this.state.anchorEl ? 'true' : undefined}\r\n                    onClick={this.handleMenuClick}\r\n                    className={\"heroButtonThreeDots\"}\r\n                >\r\n                    &#10247;\r\n                </Box>\r\n                <Box className={\"heroPackSelectedExtStatus\"}>{this.props.heroIds.extendedInfo?.statusInfo?this.props.heroIds.extendedInfo.statusInfo:\"\"}</Box>\r\n                <Menu\r\n                    id=\"demo-positioned-menu\"\r\n                    aria-labelledby=\"demo-positioned-button\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={!!this.state.anchorEl}\r\n                    onClose={this.handleMenuClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={this.addToAttackQueue}>Add to Attack roulette</MenuItem>\r\n                    <MenuItem onClick={this.addToDefenderQueue}>Add to Defender roulette</MenuItem>\r\n                    <MenuItem onClick={this.seeCounterPacks}>See counter packs</MenuItem>\r\n                </Menu>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        //if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x)\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n       // }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Box className={\"heroCounterHeroGrid\"} sx={{\r\n\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon,HeroPackSelected} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    heroLostPacks: IHeroPack[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: IHeroPack) {\r\n\r\n        const items = []\r\n        const hl=heroPack.hIds.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack.hIds[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const heroPackFull of this.props.heroLostPacks) {\r\n            const heroPack=heroPackFull.hIds\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            /*items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)*/\r\n                items.push(<HeroPackSelected  key={cnt++} heroIds={heroPackFull} deselectHero={this.props.onFilterCounterHero}/>)\r\n        }\r\n        if (items.length===0) {\r\n            items.push(\r\n                <Stack direction=\"row\" key={cnt++} sx={{\r\n                    bgcolor: 'primary.light',\r\n                    m:0.25\r\n                }}>empty</Stack>\r\n            )\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        console.log('RHCPG',this.props.heroLostPacks)\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark',\r\n\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},heroIdsD:{hIds:heroIdsD},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                marginBottom: '3px',\r\n                borderRadius: '10px',\r\n            }}key={i}>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n                </Box>\r\n                <Box className={\"heroQueueTwoVSBox\"}><span className={\"heroQueueTwoVSPosition\"}>{x.position}</span><span className={\"heroQueueTwoVSVS\"}>VS</span></Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Box hidden={MyNavigator.disableClose}><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null)\r\n            </Box>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box className={\"heroQueueTwoBox\"}>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    heroIdsD: IHeroPack,\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            heroIdsD: props.heroIdsD ? props.heroIdsD : [],\r\n            displayEditA: props.heroIdsA.hIds.length===5,\r\n            displayEditD: props.heroIdsD.hIds.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds }})\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.hIds.length>0?\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Done</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.hIds.length>0?\r\n                        <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Done</Button>\r\n                        :\r\n                        null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Choose Defender heroes\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditD}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && this.state.heroIdsD.hIds.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateToTopFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroOneFightMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={{hIds:[]}} heroIdsD={{hIds:[]}} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Add to training</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Training queue</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroOneFightMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddAttackerMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.hIds.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddAttackerMode=this\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(1)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Done</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip\r\n                    label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddAttackerMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box className={\"heroADBox\"}><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\"  className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddAttackerMode;","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\n\r\ninterface IProps {\r\n    heroIdsA: IHeroPack\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: IHeroPack,\r\n    displayEditA: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddDefenderMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA,\r\n            displayEditA: props.heroIdsA.length!==5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n        this.setHeroPack=this.setHeroPack.bind(this)\r\n        MyNavigator.heroAddDefenderMode=this\r\n    }\r\n\r\n    sendToQueue() {\r\n        const body:any={\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1,\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.hIds.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsA.hIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(3)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    setHeroPack(heroPack:IHeroPack) {\r\n        this.setState({heroIdsA:heroPack,displayEditA:heroPack.hIds.length!==5})\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:{hIds:heroIds} })\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA.hIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:{hIds:heroIds}})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA() {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                {this.state.heroIdsA.hIds.length>0?\r\n                    <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Done</Button>\r\n                    :\r\n                    null}\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Choose Defender heroes\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddDefenderMode.emptyMap}\r\n                          selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box  className={\"heroADBox\"}>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                <Button variant=\"outlined\" className={\"heroEditPackButton\"} onClick={this.toggleEditA}>Edit</Button>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.hIds.length>0 && !this.state.displayEditA) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddDefenderMode;","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteAttackersQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteAttackersQueueMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRA/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        newQ.push({position:position,heroIdsA:{hIds:heroIdsA},testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box hidden={MyNavigator.disableClose}><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteAttackersQueueMode","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\nimport {IHeroPack} from \"../types/IHeroPack\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: IHeroPack,\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItemsUser: IQueueItem[]\r\n    queueItemsTopD: IQueueItem[]\r\n    queueItemsTopA: IQueueItem[]\r\n    queueItemsClassic: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItemsUser: IQueueItem[],\r\n    queueItemsTopD: IQueueItem[],\r\n    queueItemsTopA: IQueueItem[],\r\n    queueItemsClassic: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroRouletteDefendersMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItemsUser: props.queueItemsUser,\r\n            queueItemsTopD: props.queueItemsTopD,\r\n            queueItemsTopA: props.queueItemsTopA,\r\n            queueItemsClassic: props.queueItemsClassic,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n        MyNavigator.heroRouletteDefendersMode=this\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    static formatParameter(x:any,name:string,goodName:string,multiplier:number,unit:string,prec:number) {\r\n        return x[name] && x[name]!==null && x[name]!==\"null\"?\"\"+goodName+\"=\"+(x[name]*multiplier).toFixed(prec)+unit+\", \":\"\"\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queueRD/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQPlayer:IQueueItem[]=[]\r\n                    const newQAttacker:IQueueItem[]=[]\r\n                    const newQDefender:IQueueItem[]=[]\r\n                    const newQClassic:IQueueItem[]=[]\r\n                    const position:any={'u':1,'a':1,'d':1,'c':1}\r\n                    for (const i in result.items) {\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsA.push(~~x['d'+j])}}\r\n                        let extText=\"\"\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumwinrate\",\"Sum_win_rate_as_attacker\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avgwinrate\",\"Average_win_rate_as_attacker\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntwinpacks\",\"Uniq_packs_tested_as_attacker\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsa\",\"Won_fights_as_attacker\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsa\",\"Total_fights_as_attacker\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"sumlossrate\",\"Sum_win_rate_as_defender\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"avglossrate\",\"Average_win_rate_as_defender\",100,\"%\",1)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntlosspacks\",\"Uniq_packs_tested_as_defender\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"winsd\",\"Won_fights_as_defender\",1,\"\",0)\r\n                        extText+=HeroRouletteDefendersMode.formatParameter(x,\"cntfightsd\",\"Total_fights_as_defender\",1,\"\",0)\r\n\r\n                        if (x.typ==='u') {\r\n                            newQPlayer.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}},testQId:x['testq_id']})\r\n                        } else if (x.typ==='a') {\r\n                            newQAttacker.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='d') {\r\n                            newQDefender.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        } else if (x.typ==='c') {\r\n                            newQClassic.push({position:position[x.typ]++,heroIdsA:{hIds:heroIdsA,extendedInfo:{statusInfo:extText}}})\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        queueItemsUser: newQPlayer,\r\n                        queueItemsTopD: newQDefender,\r\n                        queueItemsTopA: newQAttacker,\r\n                        queueItemsClassic: newQClassic\r\n                    })\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue(queueItems:IQueueItem[],showCloseButton:boolean) {\r\n        const items=[]\r\n        if (queueItems.length===0) {\r\n            return (<Box>empty</Box>)\r\n        } else {\r\n        queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in queueItems) {\r\n            const x=queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                {showCloseButton && !MyNavigator.disableClose?<Box><img data-testqid={x.testQId} className={\"closeIcon\"} alt=\"close\" onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>:null}\r\n            </Box>)\r\n        }\r\n        return items\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue added by user. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue(this.state.queueItemsUser,true)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current top attacker packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopA,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current top defenders packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsTopD,false)}</Box>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current classic packs. Click here to refresh all\"} onClick={this.refreshQueue}/></Divider>\r\n                <Box>{this.renderQueue(this.state.queueItemsClassic,false)}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteDefendersMode","import React from \"react\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\nimport HeroAddAttackerMode from \"./heroAddAttackerMode\";\r\nimport HeroAddDefenderMode from \"./heroAddDefenderMode\";\r\nimport HeroRouletteAttackersQueueMode from \"./heroRouletteAttackersQueueMode\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n}\r\n\r\nexport class HeroRouletteMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n        MyNavigator.heroRouletteMode=this\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroAddAttackerMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroRouletteAttackersQueueMode queueItems={[]}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroAddDefenderMode heroIdsA={MyNavigator.currentPack} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteDefendersMode queueItemsUser={[]} queueItemsTopA={[]} queueItemsTopD={[]} queueItemsClassic={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <ToggleButtonGroup\r\n                    color=\"secondary\"\r\n                    value={\"\"+this.state.currentMode}\r\n                    exclusive\r\n                    onChange={this.setMode}\r\n                >\r\n                    <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Add attacker</ToggleButton>\r\n                    <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Attack queue</ToggleButton>\r\n                    <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Add defender</ToggleButton>\r\n                    <ToggleButton value=\"3\" data-mode={3} color=\"primary\">Defenders list</ToggleButton>\r\n                </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroRouletteMode","import React from \"react\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroFAQ extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state={}\r\n    }\r\n    render() {\r\n        return (<Box>\r\n            <h3>1. Что это за сервис?</h3>\r\n            <p>\r\n                Статистика боёв на полной прокачке в мобильной версии Хроник Хаоса\r\n            </p>\r\n            <h3>2. Как им пользоваться?</h3>\r\n            <p>\r\n                Вверху меню - нажимаешь, смотришь ;-)\r\n            </p>\r\n            <h3>3. Ну и что там в меню \"Find Pack\"?</h3>\r\n            <p>\r\n                Есть два режима - \"Counter-pack\" и \"Attack-pack\".<br/>\r\n                В режиме \"Counter-pack\" ты можешь найти пак, который побеждаешь выбранный тобой.<br/>\r\n                В режиме \"Attack-pack\" ты ищешь какие паки побеждает выбранный тобою пак\r\n            </p>\r\n            <h3>4. А что в меню \"One fight\"?</h3>\r\n            <p>\r\n                Здесь выбираешь атакующий пак, защищающийся пак и отправляешь на обработку бой. Твой бой добавится в очередь<br/>\r\n                Когда дайдет очередь до твоего боя (сервер бесплатный для тебя и не резиновый, делает по 3-5 боев в минуту)<br/>\r\n                Когда сервер обработает бой, его результаты попадут в статистику и ты сможешь найти результаты в меню \"Find Pack\"\r\n            </p>\r\n            <h3>5. А что в меню \"Roulette\"?</h3>\r\n            <p>\r\n                Здесь есть набор паков (48+ шт.), которые защищаются (подменю \"Defenders list\")<br/>\r\n                Ты можешь добавить свой пак в список защищающихся (подменю \"Add defender\") или атакующих (\"Add attacker\")<br/>\r\n                Если сервер простаивает (нет команд, добавленных шаловливыми ручками как у тебя), то генерится рандомный пак и он пробует атаковать весь список защитных паков этой рулетки<br/>\r\n                Когда ты добавляешь свой пак в защищающиеся (подменю \"Add defender\") в режиме рулетки, то он там висит только 6 часов (сервер нерезиновый, а таких как ты много)<br/>\r\n                Когда ты добавляешь свой пак в атакующие (\"Add attacker\"), то сервер бросает всё (да щас!ха-ха!) и стравливает твой атакующий пак с защищающимися паками из списка в подменю \"Defenders list\".<br/>\r\n            </p>\r\n            <h3>6. Как формируется список в подменю \"Defenders list\" из режима \"Roulette\"?</h3>\r\n            <p>\r\n                Есть четыре группы:<br/>\r\n                1. Добавленные шаловливыми ручками такими как у тебя из меню (\"Add attacker\"). Они там держатся не больше 6 часов, потом умирают как и все живое<br/>\r\n                2. Топ 15 атакующих паков по статистике на этом сервере<br/>\r\n                3. Топ 15 защитных паков по статистике на этом сервере<br/>\r\n                4. Классические паки. Аз есмь админ добавил сюда паки на свой усмотрение и не собираюсь их обсуждать<br/>\r\n            </p>\r\n            <h3>7. Имеет ли этот сервис какое-то отношение к Nexters?</h3>\r\n            <p>\r\n                Ты сам посмотри на это убожество. Сервис слепил из подручных коричневых масс и деревянных изделий быстрее, чем твой папа и мама старались над твоим зачатием. Для тех, кто не понял - конечно же нет.\r\n            </p>\r\n        </Box>)\r\n    }\r\n}","import {IHeroPack} from \"../types/IHeroPack\";\r\nimport React from \"react\";\r\nimport {Chip, Container, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport {HeroCounterHeroGrid, HeroCounterPackGrid} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\nimport HeroRouletteDefendersMode from \"./heroRouletteDefendersMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number,\r\n    heroesFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    heroesFilter: number[],\r\n    requestsInProgress: number,\r\n    heroIds: IHeroPack[],\r\n    heroProbs: Map<number,number>\r\n}\r\n\r\nexport class HeroBestPackMode extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        const heroProbs=new Map<number,number>()\r\n        this.state={\r\n            currentMode: props.currentMode,\r\n            heroesFilter: props.heroesFilter,\r\n            requestsInProgress: 0,\r\n            heroIds: [],\r\n            heroProbs: heroProbs\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.filterHero=this.filterHero.bind(this)\r\n        for (const x of HeroData.allHeroesIds) {\r\n            this.state.heroProbs.set(x,-1)\r\n        }\r\n        this.updateHeroes(props.heroesFilter,props.currentMode,heroProbs)\r\n    }\r\n    requestSeq: number =0\r\n    requestsInProgress: number =0\r\n\r\n    updateHeroes(heroFilter:number[],currentMode:number,heroProbs:Map<number,number>) {\r\n\r\n        const requestId=this.requestSeq++\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroFilter.length;i++) {heroParams[i]=heroFilter[i];}\r\n        this.requestsInProgress++\r\n        this.setState({requestsInProgress:this.requestsInProgress})\r\n        let url=\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/topPacks/\"\r\n        fetch(url+(currentMode===0?'a':'d')+\"/0/0/0/\"+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        for (const x of Array.from(heroProbs.keys())) {\r\n                            heroProbs.set(x,-1)\r\n                        }\r\n                        for (const x in result['items']) {\r\n                            const z = result['items'][x]\r\n                            let lostPack = [~~z.d1, ~~z.d2, ~~z.d3, ~~z.d4, ~~z.d5]\r\n\r\n                            for (const heroId of lostPack) {\r\n                                let m = heroProbs.get(~~heroId)\r\n                                if (m && m>=0) {\r\n                                    m++\r\n                                } else {\r\n                                    m = 1\r\n                                }\r\n                                heroProbs.set(~~heroId, m)\r\n                            }\r\n                            cnt++\r\n                            let extText=\"\"\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumwinrate\",\"Sum_win_rate_as_attacker\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avgwinrate\",\"Average_win_rate_as_attacker\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntwinpacks\",\"Uniq_packs_tested_as_attacker\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsa\",\"Won_fights_as_attacker\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsa\",\"Total_fights_as_attacker\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"sumlossrate\",\"Sum_win_rate_as_defender\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"avglossrate\",\"Average_win_rate_as_defender\",100,\"%\",1)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntlosspacks\",\"Uniq_packs_tested_as_defender\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"winsd\",\"Won_fights_as_defender\",1,\"\",0)\r\n                            extText+=HeroRouletteDefendersMode.formatParameter(z,\"cntfightsd\",\"Total_fights_as_defender\",1,\"\",0)\r\n                            //lostPack.push(Number.parseFloat(z.r))\r\n                            //console.log('XXX5',z)\r\n                            heroLostPacks.push({hIds:lostPack,extendedInfo:{statusInfo:extText}})\r\n                            console.log('HLP',heroLostPacks)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd = heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt > 0) heroProbs.set(~~heroPackId, 100 * mmd / cnt)\r\n                        }\r\n                            this.setState(\r\n                                {heroIds: heroLostPacks, heroProbs: heroProbs}\r\n                            )\r\n\r\n                    }\r\n                }).finally(()=>{\r\n            this.requestsInProgress--\r\n            this.setState({requestsInProgress:this.requestsInProgress})\r\n        })\r\n    }\r\n\r\n    filterHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroesFilter = this.state.heroesFilter\r\n            const index = heroesFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroesFilter.splice(index, 1);\r\n                this.setState({heroesFilter: heroesFilter})\r\n                this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n            } else {\r\n                if (heroesFilter.length<5) {\r\n                    heroesFilter.push(heroId)\r\n                    this.setState({heroesFilter: heroesFilter})\r\n                    this.updateHeroes(heroesFilter,this.state.currentMode,this.state.heroProbs)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setMode(e:any,value:string) {\r\n        const currentMode=~~value\r\n        const heroFilter:number[] = []\r\n        this.setState({currentMode:currentMode,heroesFilter:heroFilter})\r\n        this.updateHeroes(heroFilter,currentMode,this.state.heroProbs)\r\n    }\r\n\r\n    render() {\r\n        return (<Container sx={{\r\n            bgcolor: 'background.default',\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" color=\"primary\">Best attack packs</ToggleButton>\r\n                <ToggleButton value=\"1\" color=\"primary\">Best defender packs</ToggleButton>\r\n            </ToggleButtonGroup>\r\n            <Divider />\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Heroes - fill free to filter packs\":\"Loading...just wait!(\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterHeroGrid heroProbs={this.state.heroProbs}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={this.state.heroesFilter} key={10+this.state.currentMode+this.requestSeq}/>\r\n            <Divider><Chip label={this.state.requestsInProgress === 0?\"Best packs\":\"Loading...just wait! (\"+this.state.requestsInProgress+\")\"}/></Divider>\r\n            <HeroCounterPackGrid heroLostPacks={this.state.heroIds}\r\n                                 onFilterCounterHero={this.filterHero}\r\n                                 heroCounterFilter={[]} key={20+this.state.currentMode+this.requestSeq}/>\r\n        </Container>)\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroOneFightMode from \"./heroOneFightMode\";\r\nimport HeroRouletteMode from \"./heroRouletteMode\";\r\nimport {MyNavigator} from \"../types/MyNavigator\";\r\nimport {HeroFAQ} from \"./heroFAQ\";\r\nimport {HeroBestPackMode} from \"./heroBestPackMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number,\r\n    rouletteSubMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode,\r\n            rouletteSubMode: 0\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToTopMode=this.navigateToTopMode.bind(this)\r\n        MyNavigator.heroModeSelect=this\r\n    }\r\n    navigateToTopMode(newMode:number,rouletteSubMode?:number) {\r\n        if (rouletteSubMode) {\r\n            this.setState({currentMode: newMode,rouletteSubMode:rouletteSubMode})\r\n        } else {\r\n            this.setState({currentMode: newMode})\r\n        }\r\n\r\n    }\r\n    setMode(e:any,value:string) {\r\n        this.navigateToTopMode(~~value)\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={MyNavigator.currentPack} currentMode={0} key={MyNavigator.currentPack.hIds.join(',')}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroOneFightMode navigateToTopFunction={this.navigateToTopMode} currentMode={1}/>)\r\n        } else if (currentMode===3) {\r\n            return (<HeroRouletteMode navigateFunction={this.navigateToTopMode} currentMode={this.state.rouletteSubMode} key={10+this.state.rouletteSubMode}/>)\r\n        } else if (currentMode===4) {\r\n            return (<HeroFAQ/>)\r\n        }else if (currentMode===5) {\r\n            return (<HeroBestPackMode heroesFilter={[]} currentMode={0}/>)\r\n        }\r\n        else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={\"\"+this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"4\" color=\"primary\">FAQ</ToggleButton>\r\n                <ToggleButton value=\"0\" color=\"primary\">Find pack</ToggleButton>\r\n                <ToggleButton value=\"2\" color=\"primary\">One fight</ToggleButton>\r\n                <ToggleButton value=\"3\" color=\"primary\">Roulette</ToggleButton>\r\n                <ToggleButton value=\"5\" color=\"primary\">Best packs</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect","import React from 'react';\nimport './App.css';\n\nimport { ThemeProvider } from '@mui/system';\nimport {HeroModeSelect} from \"./components\";\nimport {createTheme} from \"@mui/material\";\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#5d4037',\n            contrastText: '#fff',\n            light: '#8b6b61',\n            dark: '#321911',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#000',\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <ThemeProvider theme={customTheme}>\n        <HeroModeSelect currentMode={4}/>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}