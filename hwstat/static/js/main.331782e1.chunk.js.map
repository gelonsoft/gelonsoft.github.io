{"version":3,"sources":["types/HStorage.ts","types/heroesUtils.ts","components/heroIcon.tsx","components/heroCounterPackMode.tsx","components/heroGrid.tsx","components/heroPackSelected.tsx","components/heroCounterHeroGrid.tsx","components/heroCounterPackGrid.tsx","components/heroFightQueueMode.tsx","components/heroAddToTrainMode.tsx","components/heroModeSelect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HStorage","heroDescStorage","heroLevelExpStorage","heroLevelStorage","ruleStorage","powerStatStorage","powerPerStat","artifactWeaponPowerMultiplierStorage","artifactWeaponPowerMultiplier","skillStorage","artifactIdStorage","artifactBattleEffectStorage","artifactTypeStorage","gearStorage","runeLevelStorage","runeTypeStorage","skinStorage","localeStorage","titanGiftStorage","HeroData","heroId","heroesList","get","a1","a2","i","length","result","Map","x","heroData","set","heroName","battleOrder","initHeroesList","z","padLeadingZeros","num","size","s","HeroIcon","props","state","isSelected","hero","this","getHeroById","prob","heroProb","className","toFixed","Grid","item","xs","md","sx","bgcolor","color","m","textAlign","fontSize","fontWeight","flexBasis","maxWidth","Box","alignItems","display","flexWrap","p","onClick","OnClick","alt","src","opacity","borderRadius","renderType","renderForHeroSelectGrid","renderForPackEmptySelected","renderForHeroCounterHeroGrid","renderForHeroPackGrid","minWidth","minHeight","React","Component","HeroCounterPackMode","initialized","heroIds","heroLostPacks","heroCounterFilter","requestsInProgress","selectHero","bind","deselectHero","filterCounterHero","heroParams","setState","fetch","join","method","then","res","json","cnt","heroProbs","lostPack","a3","a4","a5","push","Number","parseFloat","r","Array","from","keys","heroPackId","mmd","heroCounterProbs","finally","undefined","getPacksData","j","error","e","target","dataset","heroid","index","indexOf","splice","updateHeroCounterFilter","includes","updateHeroIds","Container","Divider","Chip","label","onFilterCounterHero","HeroGrid","items","heroArray","values","value","sort","a","b","container","spacing","justifyContent","renderHeroes","HeroPackSelected","heroCount","heroes","h1","h2","Stack","direction","renderHeroPack","HeroCounterHeroGrid","columns","HeroCounterPackGrid","heroPack","hl","newHeropack","renderOneHeroPack","margin","renderHeroPacks","HeroFightQueueMode","queueItems","refreshQueue","removeIcon","console","log","testqid","newQ","position","heroIdsA","heroIdsD","testQId","marginBottom","marginLeft","marginRight","renderQueue","HeroAddToTrainMode","displayEditA","displayEditD","selectHeroA","deselectHeroA","selectHeroD","deselectHeroD","toggleEditA","toggleEditD","sendToQueue","body","d1","d2","d3","d4","d5","headers","JSON","stringify","navigateFunction","newState","alignSelf","Button","variant","emptyMap","marginTop","disabled","flexDirection","renderA","renderB","renderSendButton","HeroModeSelect","currentMode","setMode","navigateToMode","newMode","mode","ToggleButtonGroup","exclusive","onChange","ToggleButton","renderMode","customTheme","createTheme","palette","primary","main","contrastText","light","dark","secondary","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.331782e1.chunk.js","sourcesContent":["import skillStorage from \"../gameData/skill.json\";\r\nimport artifactIdStorage from '../gameData/artifact_id.json'\r\nimport artifactBattleEffectStorage from \"../gameData/artifact_battleEffect.json\";\r\nimport artifactTypeStorage from \"../gameData/artifact_type.json\";\r\nimport gearStorage from \"../gameData/inventoryItem_gear.json\";\r\nimport runeLevelStorage from \"../gameData/rune_level.json\";\r\nimport runeTypeStorage from '../gameData/rune_type.json'\r\nimport skinStorage from \"../gameData/skin.json\";\r\nimport localeStorage from \"../gameData/ru.json\";\r\nimport titanGiftStorage from \"../gameData/titanGift.json\";\r\nimport ruleStorage from \"../gameData/rule.json\";\r\nimport heroLevelStorage from \"../gameData/level_hero.json\";\r\nimport heroDescStorage from \"../gameData/hero.json\";\r\n\r\nexport class HStorage {\r\n    static heroDescStorage:any=heroDescStorage\r\n    static heroLevelExpStorage:any=heroLevelStorage\r\n    static heroLevelStorage:any=heroLevelStorage\r\n    static ruleStorage:any=ruleStorage\r\n    static powerStatStorage:any=ruleStorage.powerPerStat\r\n    static artifactWeaponPowerMultiplierStorage:any=ruleStorage.artifactWeaponPowerMultiplier\r\n    static skillStorage:any=skillStorage\r\n    static artifactIdStorage:any=artifactIdStorage\r\n    static artifactBattleEffectStorage:any=artifactBattleEffectStorage\r\n    static artifactTypeStorage:any=artifactTypeStorage\r\n    static gearStorage:any=gearStorage\r\n    static runeLevelStorage:any=runeLevelStorage\r\n    static runeTypeStorage:any=runeTypeStorage\r\n    static skinStorage:any=skinStorage\r\n    static localeStorage:any=localeStorage\r\n    static titanGiftStorage:any=titanGiftStorage\r\n}","import heroStorage from '../gameData/hero.json'\r\nimport localStorage from '../gameData/ru.json'\r\nimport {HStorage} from \"./HStorage\";\r\nexport type Hero = {\r\n    heroId: number,\r\n    heroName: string,\r\n    battleOrder:number\r\n}\r\n\r\nfunction initHeroesList() {\r\n    const result:Map<number, Hero>=new Map<number,Hero>()\r\n    for (const x in HStorage.heroDescStorage) {\r\n        const heroId=~~x\r\n        if (heroId>=1 && heroId<599) {\r\n            const heroData:any = HStorage.heroDescStorage[x]\r\n            result.set(heroId,{\r\n                heroId: heroId,\r\n                heroName: HStorage.localeStorage[\"LIB_HERO_NAME_\"+heroId],\r\n                battleOrder:heroData.battleOrder\r\n            })\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport class HeroData {\r\nstatic getHeroById(heroId: number) {\r\n    return HeroData.heroesList.get(heroId)\r\n}\r\nstatic compareArrays (a1:any[],a2:any[]) {var i = a1.length; if (i !== a2.length) return false; while (i--) { if (a1[i] !== a2[i]) return false; } return true}\r\n\r\nstatic heroesList: Map<number, Hero> = initHeroesList()\r\n    static z = new Map([\r\n    [1, {\"heroId\": 1, \"heroName\": \"Аврора\"}],\r\n    [2, {\"heroId\": 2, \"heroName\": \"Галахад\"}],\r\n    [3, {\"heroId\": 3, \"heroName\": \"Кира\"}],\r\n    [4, {\"heroId\": 4, \"heroName\": \"Астарот\"}],\r\n    [5, {\"heroId\": 5, \"heroName\": \"Кай\"}],\r\n    [6, {\"heroId\": 6, \"heroName\": \"Фобос\"}],\r\n    [7, {\"heroId\": 7, \"heroName\": \"Тея\"}],\r\n    [8, {\"heroId\": 8, \"heroName\": \"Сорвиголова\"}],\r\n    [9, {\"heroId\": 9, \"heroName\": \"Хайди\"}],\r\n    [10, {\"heroId\": 10, \"heroName\": \"Безликий\"}],\r\n    [11, {\"heroId\": 11, \"heroName\": \"Чабба\"}],\r\n    [12, {\"heroId\": 12, \"heroName\": \"Арахна\"}],\r\n    [13, {\"heroId\": 13, \"heroName\": \"Орион\"}],\r\n    [14, {\"heroId\": 14, \"heroName\": \"Фокс\"}],\r\n    [15, {\"heroId\": 15, \"heroName\": \"Джинджер\"}],\r\n    [16, {\"heroId\": 16, \"heroName\": \"Данте\"}],\r\n    [17, {\"heroId\": 17, \"heroName\": \"Моджо\"}],\r\n    [18, {\"heroId\": 18, \"heroName\": \"Судья\"}],\r\n    [19, {\"heroId\": 19, \"heroName\": \"Темная Звезда\"}],\r\n    [20, {\"heroId\": 20, \"heroName\": \"Артемис\"}],\r\n    [21, {\"heroId\": 21, \"heroName\": \"Маркус\"}],\r\n    [22, {\"heroId\": 22, \"heroName\": \"Пеппи\"}],\r\n    [23, {\"heroId\": 23, \"heroName\": \"Лиэн\"}],\r\n    [24, {\"heroId\": 24, \"heroName\": \"Тесак\"}],\r\n    [25, {\"heroId\": 25, \"heroName\": \"Исмаил\"}],\r\n    [26, {\"heroId\": 26, \"heroName\": \"Лилит\"}],\r\n    [27, {\"heroId\": 27, \"heroName\": \"Лютер\"}],\r\n    [28, {\"heroId\": 28, \"heroName\": \"Цин Мао\"}],\r\n    [29, {\"heroId\": 29, \"heroName\": \"Дориан\"}],\r\n    [30, {\"heroId\": 30, \"heroName\": \"Корнелиус\"}],\r\n    [31, {\"heroId\": 31, \"heroName\": \"Джет\"}],\r\n    [32, {\"heroId\": 32, \"heroName\": \"Гелиос\"}],\r\n    [33, {\"heroId\": 33, \"heroName\": \"Ларс\"}],\r\n    [34, {\"heroId\": 34, \"heroName\": \"Криста\"}],\r\n    [35, {\"heroId\": 35, \"heroName\": \"Йорген\"}],\r\n    [36, {\"heroId\": 36, \"heroName\": \"Майя\"}],\r\n    [37, {\"heroId\": 37, \"heroName\": \"Джу\"}],\r\n    [38, {\"heroId\": 38, \"heroName\": \"Эльмир\"}],\r\n    [39, {\"heroId\": 39, \"heroName\": \"Зири\"}],\r\n    [40, {\"heroId\": 40, \"heroName\": \"Небула\"}],\r\n    [41, {\"heroId\": 41, \"heroName\": \"К'арх\"}],\r\n    [42, {\"heroId\": 42, \"heroName\": \"Руфус\"}],\r\n    [43, {\"heroId\": 43, \"heroName\": \"Селеста\"}],\r\n    [44, {\"heroId\": 44, \"heroName\": \"Астрид и Лукас\"}],\r\n    [45, {\"heroId\": 45, \"heroName\": \"Сатори\"}],\r\n    [46, {\"heroId\": 46, \"heroName\": \"Марта\"}],\r\n    [47, {\"heroId\": 47, \"heroName\": \"Андвари\"}],\r\n    [49, {\"heroId\": 49, \"heroName\": \"Ясмин\"}],\r\n    [51, {\"heroId\": 51, \"heroName\": \"Ксе'Ша\"}],\r\n    [500, {\"heroId\": 500, \"heroName\": \"Себастьян\"}],\r\n    [501, {\"heroId\": 501, \"heroName\": \"Корвус\"}],\r\n    [502, {\"heroId\": 502, \"heroName\": \"Морриган\"}],\r\n    [503, {\"heroId\": 503, \"heroName\": \"Альванор\"}],\r\n    [504, {\"heroId\": 504, \"heroName\": \"Тристан\"}],\r\n]);\r\n}","import {default as React} from 'react'\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {Hero, HeroData} from \"../types\";\r\n\r\n//const { t, i18n } = useTranslation(\"ns1\")\r\n\r\nfunction padLeadingZeros(num: number, size: number) {\r\n    let s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\ninterface IProps {\r\n    heroId?: number,\r\n    isSelected: boolean,\r\n    OnClick?: any,\r\n    heroProb: number,\r\n    renderType: number\r\n}\r\n\r\ninterface IState {\r\n    heroId?: number,\r\n    isSelected: boolean\r\n}\r\n\r\nclass HeroIcon extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state={\r\n            heroId: props.heroId,\r\n            isSelected: props.isSelected\r\n        }\r\n    }\r\n\r\n    renderForHeroSelectGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = ~~this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} md={1} sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: 0,\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    renderForHeroCounterHeroGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = ~~this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item xs={1} sx={{\r\n                bgcolor: 'primary.main',\r\n                opacity: this.props.isSelected?'60%':'100%',\r\n                color: 'primary.contrastText',\r\n                m: 0.25,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                flexBasis: 0,\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName + \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderForHeroPackGrid() {\r\n        let hero: Hero | undefined\r\n        if (this.props.heroId)\r\n            hero = HeroData.getHeroById(this.props.heroId)\r\n        if (hero) {\r\n            //const url = \"url('hero/\" + padLeadingZeros(hero.heroId, 4) + \".png')\"\r\n            let prob = null\r\n            if (this.props.heroProb && this.props.heroProb>=0.0) {\r\n                let heroProb = ~~this.props.heroProb\r\n                prob=<span className={\"heroProb\"}>{heroProb.toFixed(2)}%</span>\r\n            }\r\n            return (<Grid item  sx={{\r\n                bgcolor: this.props.isSelected?'primary.light':'primary.main',\r\n                color: 'primary.contrastText',\r\n                m: '0% 0% 0% 0%',\r\n                borderRadius: 2,\r\n                textAlign: 'center',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                maxWidth: 'max-content'\r\n            }} key={hero.heroId}>\r\n                <Box sx={{\r\n                    maxWidth: '7.1em',\r\n                    alignItems: 'flex-end',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    p: '0px 0px 0px 0px !important',\r\n                    flexBasis: 0,\r\n                }}  >\r\n                    {prob}\r\n                    <img data-heroid={hero.heroId} onClick={this.props.OnClick} className={\"heroIcon\"} alt={hero.heroName} src={\"hero/\" + padLeadingZeros(hero.heroId, 4) + \".png\"}/>\r\n                    <span className={\"heroIconSpan\"}>{hero.heroName+ \" (\"+hero.heroId+\")\"}</span>\r\n                </Box>\r\n            </Grid>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        switch(this.props.renderType) {\r\n            case 0: return this.renderForHeroSelectGrid()\r\n            case 1: return this.renderForHeroSelectGrid()\r\n            case 2: return this.renderForPackEmptySelected()\r\n            case 10: return this.renderForHeroCounterHeroGrid()\r\n            case 15: return this.renderForHeroPackGrid()\r\n            case 20: return this.renderForHeroSelectGrid()\r\n        }\r\n    }\r\n\r\n    renderForPackEmptySelected() {\r\n            return <Box sx={{\r\n                maxWidth: '7.1em',\r\n                minWidth: '7.1em',\r\n                minHeight: '8.45em',\r\n                alignItems: 'flex-end',\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                fontSize: '0.6em',\r\n                fontWeight: '700',\r\n                textAlign: 'center',\r\n                m: 0.0,\r\n                borderRadius: 2,\r\n            }}>\r\n                <span className={\"heroIconSpan\"}>empty</span>\r\n            </Box>\r\n        }\r\n}\r\n\r\nexport default HeroIcon","import React from \"react\";\r\nimport {Box, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroCounterPackGrid, HeroCounterHeroGrid, HeroGrid, HeroPackSelected} from \"./index\";\r\n\r\ninterface IProps {\r\n    heroIds: number[]\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[],\r\n    heroProbs?: Map<number, number>,\r\n    heroCounterProbs?: Map<number, number>,\r\n    heroLostPacks: number[][],\r\n    heroCounterFilter: number[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroCounterPackMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds ? props.heroIds : [],\r\n            heroLostPacks: [],\r\n            heroCounterFilter: [],\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHero = this.selectHero.bind(this)\r\n        this.deselectHero = this.deselectHero.bind(this)\r\n        this.filterCounterHero = this.filterCounterHero.bind(this)\r\n    }\r\n    initialized: boolean = false\r\n\r\n\r\n    getPacksData(heroIds: number[]) {\r\n\r\n        const heroParams=[-1,-1,-1,-1,-1]\r\n        for (let i=0;i<5 && i<heroIds.length;i++) {heroParams[i]=heroIds[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroes/\"+heroParams.join(\"/\"), {\r\n            method: \"GET\"\r\n        }).then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n\r\n                    if (result['items']) {\r\n                        const heroLostPacks = []\r\n                        let cnt = 0\r\n                        const heroProbs=new Map<number,number>()\r\n                        for (const x in result['items']) {\r\n                            const z=result['items'][x]\r\n                            const lostPack = [~~z.a1,~~z.a2,~~z.a3,~~z.a4,~~z.a5]\r\n                            for (const heroId of lostPack) {\r\n                                    let m = heroProbs.get(~~heroId)\r\n                                    if (m) {\r\n                                        m++\r\n                                    } else {\r\n                                        m=1\r\n                                    }\r\n                                    heroProbs.set(~~heroId,m)\r\n\r\n                             }\r\n                            cnt++\r\n                            lostPack.push(Number.parseFloat(z.r))\r\n                            heroLostPacks.push(lostPack)\r\n                        }\r\n                        for (const heroPackId of Array.from(heroProbs.keys())) {\r\n                            const mmd=heroProbs.get(~~heroPackId)\r\n                            if (mmd && cnt >0) heroProbs.set(~~heroPackId,100*mmd/cnt)\r\n                        }\r\n                        this.setState(\r\n                            {heroIds: heroIds, heroCounterProbs: heroProbs, heroLostPacks: heroLostPacks}\r\n                        )\r\n                    }\r\n                }).finally(()=>{\r\n                    const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    updateHeroIds(heroIds: number[]) {\r\n        this.initialized=true\r\n        this.setState(\r\n            {heroIds: heroIds, heroProbs: undefined, heroLostPacks: []}\r\n        )\r\n        if (heroIds.length == 5) {\r\n            this.getPacksData(heroIds)\r\n        } else {\r\n            const heroParams=[-1,-1,-1,-1,-1]\r\n            for (let i=0;i<5 && i<heroIds.length;i++) {heroParams[i]=heroIds[i];}\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n            fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/findLostPackHeroesStat/\"+heroParams.join(\"/\"), {\r\n                method: \"GET\"\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        let heroProbs = new Map<number, number>()\r\n                        if (result['items']) {\r\n                            for (const j in result['items']) {\r\n                                if (result['items'][j]['d']) {\r\n                                    heroProbs.set(~~result['items'][j]['d'], Number.parseFloat(result['items'][j]['prob']))\r\n                                }\r\n                            }\r\n                        }\r\n                        this.setState({\r\n                            heroProbs: heroProbs,\r\n                            heroIds: heroIds,\r\n                            heroLostPacks: []\r\n                        });\r\n                    },\r\n                    // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n                    // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n                    (error) => {\r\n                        let heroProbs = new Map<number, number>()\r\n                        this.setState({\r\n                            heroProbs: undefined,\r\n                            heroIds: heroIds,\r\n                            heroLostPacks: []\r\n                        });\r\n                    }\r\n                ).finally(()=>{\r\n                const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n            })\r\n        }\r\n    }\r\n\r\n    updateHeroCounterFilter(heroCounterFilter: number[]) {\r\n        this.setState({heroCounterFilter: heroCounterFilter})\r\n    }\r\n\r\n    filterCounterHero(e: any) {\r\n       // console.log('HF0',e.target)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroCounterFilter = this.state.heroCounterFilter\r\n            const index = heroCounterFilter.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroCounterFilter.splice(index, 1);\r\n                this.updateHeroCounterFilter(heroCounterFilter)\r\n            } else {\r\n                heroCounterFilter.push(heroId)\r\n                this.updateHeroCounterFilter(heroCounterFilter)\r\n            }\r\n        }\r\n    }\r\n\r\n    selectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHero(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIds\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.updateHeroIds(heroIds)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n            if (this.state.heroIds.length == 5 && this.state.heroLostPacks.length > 0) {\r\n                if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }\r\n                return (\r\n                    <Container sx={{\r\n                        bgcolor: 'background.default'\r\n                    }}>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Selected pack\":\"Loading...just wait!\"}/></Divider>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Counter heroes - fill free to filter packs\":\"Loading...just wait!\"}/></Divider>\r\n                        <HeroCounterHeroGrid heroProbs={this.state.heroCounterProbs}\r\n                                             onFilterCounterHero={this.filterCounterHero}\r\n                                             heroCounterFilter={this.state.heroCounterFilter}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Counter hero packs\":\"Loading...just wait!\"}/></Divider>\r\n                        <HeroCounterPackGrid heroLostPacks={this.state.heroLostPacks}\r\n                                             onFilterCounterHero={this.filterCounterHero}\r\n                                             heroCounterFilter={this.state.heroCounterFilter}/>\r\n                    </Container>\r\n                )\r\n            } else {\r\n                if (!this.initialized) {\r\n                    this.updateHeroIds(this.state.heroIds)\r\n                }\r\n                return (\r\n                    <Container sx={{\r\n                        //width: '100%',\r\n                        m: 0.25,\r\n                        p: 0.25,\r\n                        bgcolor: 'background.default'\r\n                    }}>\r\n                        <HeroPackSelected heroIds={this.state.heroIds} deselectHero={this.deselectHero}/>\r\n                        <Divider><Chip label={this.state.requestsInProgress === 0?\"Choose pack to attack\":\"Loading...just wait!\"}/></Divider>\r\n                        <Box sx={{\r\n                            m: 0,\r\n                            p: 0\r\n                        }}>\r\n                            <HeroGrid heroIds={this.state.heroIds} heroProbs={this.state.heroProbs}\r\n                                      selectHero={this.selectHero}/>\r\n                        </Box>\r\n                    </Container>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackMode;","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    selectHero: any,\r\n    heroProbs?: Map<number,number>\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[]\r\n}\r\n\r\nexport class HeroGrid extends React.Component<IProps, IState>{\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n\r\n    renderHeroes() {\r\n        var heroProb: number | undefined = 0;\r\n        const items = []\r\n        const heroArray:any[]=[]\r\n        for (const value of Array.from(HeroData.heroesList.values())) {\r\n            //console.log('vvv',x,hers,value)\r\n            heroProb=this.props.heroProbs?this.props.heroProbs.get(value.heroId):0\r\n            heroProb=heroProb !== undefined?heroProb:0\r\n            if (heroProb>0) {\r\n                heroArray.push({heroId:value.heroId,heroProb:heroProb})\r\n            }\r\n        }\r\n        heroArray.sort((a,b)=> {\r\n            return b.heroProb-a.heroProb\r\n        })\r\n        if (heroArray.length==0) {\r\n            for (const value of Array.from(HeroData.heroesList.values())) {\r\n                    heroArray.push({heroId:value.heroId,heroProb:0})\r\n            }\r\n        }\r\n\r\n        for (const i in heroArray) {\r\n            const x=heroArray[i]\r\n            //console.log(\"GRID: \",i,x.heroId,x.heroProb)\r\n            items.push(<HeroIcon heroId={x.heroId} renderType={0} isSelected={this.state.heroIds.includes(x.heroId)} OnClick={this.props.selectHero} heroProb={x.heroProb} key={x.heroId}/>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n\r\n        return (<Grid container spacing={0} sx={{\r\n            m: 0,\r\n            justifyContent: 'center'\r\n        }} >\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\nexport default HeroGrid","import React from \"react\";\r\nimport {Grid, Stack, Table, TableBody} from \"@mui/material\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    heroIds: number[],\r\n    deselectHero: any\r\n}\r\n\r\ninterface IState {\r\n    heroIds: number[]\r\n}\r\n\r\nexport class HeroPackSelected extends React.Component<IProps, IState> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIds: props.heroIds\r\n        };\r\n    }\r\n    renderHeroPack() {\r\n        const heroCount = this.state.heroIds.length\r\n        const heroes = this.state.heroIds\r\n        heroes.sort((a,b) => {\r\n            const h1=HeroData.getHeroById(~~a)\r\n            const h2=HeroData.getHeroById(~~b)\r\n            if (h1 && h2) {\r\n                return h1.battleOrder-h2.battleOrder\r\n            } else {\r\n                return 0\r\n            }\r\n        })\r\n        const result=[]\r\n        for (let i=0;i<5;i++) {\r\n            if (i<heroCount) {\r\n                result.push((<HeroIcon heroId={heroes[i]} renderType={15} isSelected={false} OnClick={this.props.deselectHero} heroProb={-1} key={i}/>))\r\n            } else {\r\n                result.push((<HeroIcon heroId={0} isSelected={false} renderType={2} heroProb={-1} key={i}/>))\r\n            }\r\n        }\r\n        return (result)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Stack sx={{\r\n                justifyContent: 'center',\r\n            }} direction=\"row\" spacing={1}>\r\n            {this.renderHeroPack()}\r\n            </Stack>\r\n        )\r\n    }\r\n}\r\nexport default HeroPackSelected","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroProbs?: Map<number, number>\r\n    heroCounterFilter: number[]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterHeroGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderHeroes() {\r\n        const items = []\r\n        if (this.props.heroProbs) {\r\n            const heroArray:any[]=[]\r\n            for (const x of Array.from(this.props.heroProbs.keys())) {\r\n                const hero = HeroData.getHeroById(~~x)\r\n                const prob = this.props.heroProbs.get(~~x)\r\n                if (hero && prob) {\r\n                    heroArray.push({hero:hero,prob:prob})\r\n                }\r\n            }\r\n            heroArray.sort((a,b)=>{\r\n                return b.prob-a.prob\r\n            })\r\n            for (const x of heroArray) {\r\n                items.push(<HeroIcon heroId={x.hero.heroId} renderType={10}\r\n                                         isSelected={this.props.heroCounterFilter.indexOf(x.hero.heroId) > -1}\r\n                                         OnClick={this.props.onFilterCounterHero} heroProb={x.prob} key={x.hero.heroId}/>)\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Grid container spacing={0} columns={5} sx={{\r\n            m: 0,\r\n            bgcolor: 'primary.light'\r\n        }}>\r\n            {this.renderHeroes()}\r\n        </Grid>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterHeroGrid","import React from \"react\";\r\nimport {HeroIcon} from \"./index\";\r\nimport {Box, Grid, Stack} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IProps {\r\n    onFilterCounterHero: any,\r\n    heroCounterFilter: number[],\r\n    heroLostPacks: number[][]\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nexport class HeroCounterPackGrid extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderOneHeroPack(heroPack: number[]) {\r\n        const items = []\r\n        const hl=heroPack.length\r\n        const newHeropack:any[]=[]\r\n        for (let i=0;i<5 && i<hl;i++) {\r\n            const hero = HeroData.getHeroById(~~heroPack[i])\r\n            if (hero) {\r\n                newHeropack.push({heroId:hero.heroId,battleOrder:hero.battleOrder})\r\n            }\r\n        }\r\n        newHeropack.sort((a,b) => {\r\n            return b.battleOrder-a.battleOrder\r\n        })\r\n        for (const i in newHeropack) {\r\n            const hero=newHeropack[i]\r\n                    items.push(<HeroIcon heroId={hero.heroId} renderType={20} heroProb={-1}\r\n                                     isSelected={false}\r\n                                     OnClick={this.props.onFilterCounterHero} key={hero.heroId}/>)\r\n\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    renderHeroPacks() {\r\n        const items = []\r\n        let cnt=0\r\n        for (const heroPack of this.props.heroLostPacks) {\r\n            if (this.props.heroCounterFilter.indexOf(heroPack[0])<0 && this.props.heroCounterFilter.indexOf(heroPack[1])<0 && this.props.heroCounterFilter.indexOf(heroPack[2])<0 && this.props.heroCounterFilter.indexOf(heroPack[3])<0 &&this.props.heroCounterFilter.indexOf(heroPack[4])<0)\r\n            items.push(<Stack direction=\"row\" key={cnt++} sx={{\r\n                bgcolor: 'primary.light',\r\n                m:0.25\r\n            }}>\r\n                {this.renderOneHeroPack(heroPack)}\r\n            </Stack>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (<Stack sx={{\r\n            margin: 1,\r\n            bgcolor: 'primary.dark'\r\n        }}>\r\n            {this.renderHeroPacks()}\r\n        </Stack>)\r\n    }\r\n}\r\n\r\nexport default HeroCounterPackGrid","import React from \"react\";\r\nimport {HeroPackSelected} from \"./index\";\r\nimport {Box, Chip, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IQueueItem {\r\n    position: number,\r\n    heroIdsA: number[],\r\n    heroIdsD: number[],\r\n    testQId?: number\r\n}\r\n\r\ninterface IProps {\r\n    queueItems: IQueueItem[]\r\n}\r\n\r\ninterface IState {\r\n    queueItems: IQueueItem[],\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroFightQueueMode extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            queueItems: props.queueItems,\r\n            requestsInProgress: 0\r\n        }\r\n        this.refreshQueue=this.refreshQueue.bind(this)\r\n        this.refreshQueue()\r\n        this.removeIcon=this.removeIcon.bind(this)\r\n    }\r\n\r\n    removeIcon(e:any) {\r\n        console.log('e',e)\r\n        if (e && e.target && e.target.dataset && e.target.dataset.testqid) {\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\"+e.target.dataset.testqid, {\r\n            method: \"DELETE\"\r\n            }).finally(()=>{\r\n                this.refreshQueue()\r\n            })\r\n        }\r\n    }\r\n\r\n    refreshQueue() {\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\", {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                if (result.items) {\r\n                    const newQ:IQueueItem[]=[]\r\n                    let position=0\r\n                    for (const i in result.items) {\r\n                        position++\r\n                        const x=result.items[i]\r\n                        const heroIdsA=[]; for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['a'+j])) {heroIdsA.push(~~x['a'+j])}}\r\n                        const heroIdsD=[];for (let j=1;j<6;j++) {if (HeroData.getHeroById(~~x['d'+j])) {heroIdsD.push(~~x['d'+j])}}\r\n                        console.log({position:position,heroIdsA:heroIdsA,heroIdsD:heroIdsD,testQId:x['testq_id']})\r\n                        newQ.push({position:position,heroIdsA:heroIdsA,heroIdsD:heroIdsD,testQId:x['testq_id']})\r\n                    }\r\n                    this.setState({queueItems:newQ})\r\n                }\r\n                }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    renderQueue() {\r\n        const items=[]\r\n        this.state.queueItems.sort((a:any,b:any)=> {\r\n            return a.position-b.position\r\n        })\r\n        for (const i in this.state.queueItems) {\r\n            const x=this.state.queueItems[i]\r\n            items.push(<Box sx={{\r\n                display: 'flex',\r\n                bgcolor: 'primary.main',\r\n                color: 'primary.contrastText',\r\n                p: '0.5em 0.5em 0.5em 0.5em',\r\n                marginBottom: '0.1em',\r\n                borderRadius: '10px',\r\n            }} key={i}>\r\n                <Box sx={{\r\n                    fontSize: '1em',\r\n                    fontWeight: 700,\r\n                    marginLeft: '0.1em',\r\n                    marginRight: '0.5em'\r\n                }}>{x.position}</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsA} deselectHero={()=>{}}/>\r\n            </Box>\r\n                <Box sx={{\r\n                    marginLeft: '0.2em',\r\n                    marginRight: '0.2em',\r\n                    fontSize: '2em',\r\n                    fontWeight: 700,\r\n                }}>-&gt;</Box>\r\n                <Box><HeroPackSelected heroIds={x.heroIdsD} deselectHero={()=>{}}/></Box>\r\n                <Box><img data-testqid={x.testQId} className={\"closeIcon\"} onClick={this.removeIcon} src={\"close_icon.png\"}/></Box>\r\n            </Box>)\r\n        }\r\n        return items\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n            <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Current test attack queue. Click here to refresh\"} onClick={this.refreshQueue}/></Divider>\r\n            <Box>{this.renderQueue()}</Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroFightQueueMode","import React from \"react\";\r\nimport {HeroGrid, HeroPackSelected} from \"./index\";\r\nimport {Box, Button, Chip, Container, Divider} from \"@mui/material\";\r\nimport {HeroData} from \"../types\";\r\n\r\ninterface IQueueItem {\r\n    heroIdsA: number[],\r\n    heroIdsD: number[]\r\n}\r\n\r\ninterface IProps {\r\n    heroIdsA: number[],\r\n    heroIdsD: number[],\r\n    navigateFunction: any\r\n}\r\n\r\ninterface IState {\r\n    heroIdsA: number[],\r\n    heroIdsD: number[],\r\n    displayEditA: boolean,\r\n    displayEditD: boolean,\r\n    requestsInProgress: number\r\n}\r\n\r\nexport class HeroAddToTrainMode extends React.Component<IProps, IState> {\r\n    static emptyMap=new Map<number,number>()\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n            heroIdsA: props.heroIdsA ? props.heroIdsA : [],\r\n            heroIdsD: props.heroIdsD ? props.heroIdsD : [],\r\n            displayEditA: props.heroIdsA.length===5,\r\n            displayEditD: props.heroIdsD.length===5,\r\n            requestsInProgress: 0\r\n        };\r\n        this.selectHeroA=this.selectHeroA.bind(this)\r\n        this.deselectHeroA=this.deselectHeroA.bind(this)\r\n        this.selectHeroD=this.selectHeroD.bind(this)\r\n        this.deselectHeroD=this.deselectHeroD.bind(this)\r\n        this.toggleEditA=this.toggleEditA.bind(this)\r\n        this.toggleEditD=this.toggleEditD.bind(this)\r\n        this.sendToQueue=this.sendToQueue.bind(this)\r\n    }\r\n\r\n    sendToQueue(e:any) {\r\n        const body:any={\r\n            a1:-1,\r\n            a2:-1,\r\n            a3:-1,\r\n            a4:-1,\r\n            a5:-1,\r\n            d1:-1,\r\n            d2:-1,\r\n            d3:-1,\r\n            d4:-1,\r\n            d5:-1\r\n        }\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.length;i++) {body[\"a\"+(i+1)]=this.state.heroIdsA[i];}\r\n        for (let i=0;i<5 && i<this.state.heroIdsA.length;i++) {body[\"d\"+(i+1)]=this.state.heroIdsD[i];}\r\n        const state=this.state; this.setState({requestsInProgress:state.requestsInProgress+1})\r\n        fetch(\"https://g92e0914be8be53-db40vlv.adb.eu-frankfurt-1.oraclecloudapps.com/ords/hwstat/hws/queue/\",{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)}).then(()=>{\r\n                console.log(\"Good\")\r\n                this.props.navigateFunction(2)\r\n        }).finally(()=>{\r\n            const state=this.state; this.setState({requestsInProgress:state.requestsInProgress-1})\r\n        })\r\n    }\r\n\r\n    selectHeroA(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsA:heroIds })\r\n            }\r\n        }\r\n    }\r\n    selectHeroD(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD\r\n            if (!heroIds.includes(heroId) && heroIds.length < 5) {\r\n                heroIds.push(heroId)\r\n                this.setState({heroIdsD:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroA(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsA\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsA:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    deselectHeroD(e: any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.heroid) {\r\n            const heroId = ~~e.target.dataset.heroid\r\n            const heroIds = this.state.heroIdsD\r\n            const index = heroIds.indexOf(heroId, 0)\r\n            if (index > -1) {\r\n                heroIds.splice(index, 1);\r\n                this.setState({heroIdsD:heroIds})\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleEditA(e:any) {\r\n        const newState=!this.state.displayEditA\r\n        this.setState({displayEditA:newState})\r\n    }\r\n\r\n    toggleEditD(e:any) {\r\n        const newState=!this.state.displayEditD\r\n        this.setState({displayEditD:newState})\r\n    }\r\n\r\n    renderA() {\r\n        if (this.state.displayEditA) {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                    {this.state.heroIdsA.length>0?\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Done</Button>\r\n                        :\r\n                        null}\r\n                </Container>\r\n                <Divider><Chip\r\n                        label={this.state.requestsInProgress > 0 ? \"Loading..Just wait!\" : \"Choose Attacker heroes\"}/></Divider>\r\n                    <HeroGrid heroIds={this.state.heroIdsA} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                              selectHero={this.selectHeroA}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box><Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Attacker Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsA} deselectHero={this.deselectHeroA}/>\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditA}>Edit</Button>\r\n                </Container>\r\n            </Box>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderB() {\r\n        if (this.state.displayEditD) {\r\n            return (<Box >\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    {this.state.heroIdsD.length>0?\r\n                        <Button variant=\"outlined\" onClick={this.toggleEditD}>Done</Button>\r\n                        :\r\n                        null}\r\n                </Container>\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Choose Defender heroes\"} /></Divider>\r\n                <HeroGrid heroIds={this.state.heroIdsD} heroProbs={HeroAddToTrainMode.emptyMap}\r\n                          selectHero={this.selectHeroD}/>\r\n            </Box>)\r\n        } else {\r\n            return (<Box >\r\n                <Divider><Chip label={this.state.requestsInProgress>0?\"Loading..Just wait!\":\"Defender Team\"} /></Divider>\r\n                <Container sx={{\r\n                    display: 'flex',\r\n                    alignSelf: 'center',\r\n                    marginRight: 0\r\n                }}>\r\n                    <HeroPackSelected heroIds={this.state.heroIdsD} deselectHero={this.deselectHeroD}/>\r\n                    <Button variant=\"outlined\" onClick={this.toggleEditD}>Edit</Button>\r\n                </Container>\r\n            </Box>)\r\n        }\r\n    }\r\n    renderSendButton() {\r\n        if (this.state.heroIdsA.length>0 && this.state.heroIdsD.length>0 && !this.state.displayEditA && !this.state.displayEditD) {\r\n            return (<Button variant=\"contained\" onClick={this.sendToQueue} sx={{\r\n                marginTop: '1em',\r\n                maxWidth: 'min-content'\r\n            }}>Send</Button>)\r\n        } else {\r\n            return (<Button disabled>Choose heroes before send</Button>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            {this.renderA()}\r\n            {this.renderB()}\r\n            {this.renderSendButton()}\r\n        </Box>)\r\n    }\r\n}\r\n\r\nexport default HeroAddToTrainMode;","import React from \"react\";\r\nimport {HeroCounterPackMode} from \"./index\";\r\nimport {HeroFightQueueMode} from \"./heroFightQueueMode\";\r\nimport {Box, Divider, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport HeroAddToTrainMode from \"./heroAddToTrainMode\";\r\n\r\ninterface IProps {\r\n    currentMode: number\r\n}\r\n\r\ninterface IState {\r\n    currentMode: number\r\n}\r\n\r\nexport class HeroModeSelect extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentMode: props.currentMode\r\n        }\r\n        this.setMode=this.setMode.bind(this)\r\n        this.navigateToMode=this.navigateToMode.bind(this)\r\n    }\r\n    navigateToMode(newMode:number) {\r\n        this.setState({currentMode: newMode})\r\n    }\r\n    setMode(e:any) {\r\n        if (e && e.target && e.target.dataset && e.target.dataset.mode) {\r\n            this.setState({currentMode: ~~e.target.dataset.mode})\r\n        }\r\n    }\r\n    renderMode(currentMode:number) {\r\n        if (currentMode===0) {\r\n            return (<HeroCounterPackMode heroIds={[]}/>)\r\n        } else if (currentMode===1) {\r\n            return (<HeroAddToTrainMode heroIdsA={[]} heroIdsD={[]} navigateFunction={this.navigateToMode}/>)\r\n        } else if (currentMode===2) {\r\n            return (<HeroFightQueueMode queueItems={[]}/>)\r\n        } else {\r\n            return (null)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <ToggleButtonGroup\r\n                color=\"secondary\"\r\n                value={this.state.currentMode}\r\n                exclusive\r\n                onChange={this.setMode}\r\n            >\r\n                <ToggleButton value=\"0\" data-mode={0} color=\"primary\">Counter-pack</ToggleButton>\r\n                <ToggleButton value=\"1\" data-mode={1} color=\"primary\">Add to training</ToggleButton>\r\n                <ToggleButton value=\"2\" data-mode={2} color=\"primary\">Training queue</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                <Divider />\r\n                {this.renderMode(this.state.currentMode)}\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroModeSelect","import React from 'react';\nimport './App.css';\n\nimport { ThemeProvider } from '@mui/system';\nimport {HeroModeSelect} from \"./components\";\nimport {createTheme} from \"@mui/material\";\n\nconst customTheme = createTheme({\n    palette: {\n        primary: {\n            main: '#5d4037',\n            contrastText: '#fff',\n            light: '#8b6b61',\n            dark: '#321911',\n        },\n        secondary: {\n            light: '#ffc947',\n            main: '#ff9800',\n            dark: '#c66900',\n            contrastText: '#000',\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <ThemeProvider theme={customTheme}>\n        <HeroModeSelect currentMode={1}/>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//import { useTranslation } from 'react-i18next';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}